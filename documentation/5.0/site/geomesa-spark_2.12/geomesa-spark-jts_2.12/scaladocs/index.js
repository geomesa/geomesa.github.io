Index.PACKAGES = {"org.locationtech" : [], "org.locationtech.geomesa" : [], "org.locationtech.geomesa.spark" : [], "org.locationtech.geomesa.spark.jts" : [{"name" : "org.locationtech.geomesa.spark.jts.DataFrameFunctions", "shortDescription" : "DataFrame DSL functions for working with JTS types", "object" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html", "members_object" : [{"label" : "Library", "tail" : "", "member" : "org.locationtech.geomesa.spark.jts.DataFrameFunctions.Library", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#LibraryextendsDataFrameFunctions.SpatialConstructorswithDataFrameFunctions.SpatialConverterswithDataFrameFunctions.SpatialAccessorswithDataFrameFunctions.SpatialOutputswithDataFrameFunctions.SpatialProcessorswithDataFrameFunctions.SpatialRelations", "kind" : "trait"}, {"label" : "SpatialRelations", "tail" : "", "member" : "org.locationtech.geomesa.spark.jts.DataFrameFunctions.SpatialRelations", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#SpatialRelationsextendsAnyRef", "kind" : "trait"}, {"label" : "SpatialProcessors", "tail" : "", "member" : "org.locationtech.geomesa.spark.jts.DataFrameFunctions.SpatialProcessors", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#SpatialProcessorsextendsAnyRef", "kind" : "trait"}, {"label" : "SpatialOutputs", "tail" : "", "member" : "org.locationtech.geomesa.spark.jts.DataFrameFunctions.SpatialOutputs", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#SpatialOutputsextendsAnyRef", "kind" : "trait"}, {"label" : "SpatialAccessors", "tail" : "", "member" : "org.locationtech.geomesa.spark.jts.DataFrameFunctions.SpatialAccessors", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#SpatialAccessorsextendsAnyRef", "kind" : "trait"}, {"label" : "SpatialConverters", "tail" : "", "member" : "org.locationtech.geomesa.spark.jts.DataFrameFunctions.SpatialConverters", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#SpatialConvertersextendsAnyRef", "kind" : "trait"}, {"label" : "SpatialConstructors", "tail" : "", "member" : "org.locationtech.geomesa.spark.jts.DataFrameFunctions.SpatialConstructors", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#SpatialConstructorsextendsAnyRef", "kind" : "trait"}, {"label" : "integerEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.locationtech.geomesa.spark.jts.DataFrameFunctions.integerEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#integerEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "jtsGeometryCollectionEncoder", "tail" : "(): Encoder[GeometryCollection]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsGeometryCollectionEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#jtsGeometryCollectionEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.GeometryCollection]", "kind" : "implicit def"}, {"label" : "jtsMultiPolygonEncoder", "tail" : "(): Encoder[MultiPolygon]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsMultiPolygonEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#jtsMultiPolygonEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.MultiPolygon]", "kind" : "implicit def"}, {"label" : "jtsMultiLineStringEncoder", "tail" : "(): Encoder[MultiLineString]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsMultiLineStringEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#jtsMultiLineStringEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.MultiLineString]", "kind" : "implicit def"}, {"label" : "jtsMultiPointEncoder", "tail" : "(): Encoder[MultiPoint]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsMultiPointEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#jtsMultiPointEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.MultiPoint]", "kind" : "implicit def"}, {"label" : "jtsPolygonEncoder", "tail" : "(): Encoder[Polygon]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsPolygonEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#jtsPolygonEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.Polygon]", "kind" : "implicit def"}, {"label" : "jtsLineStringEncoder", "tail" : "(): Encoder[LineString]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsLineStringEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#jtsLineStringEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.LineString]", "kind" : "implicit def"}, {"label" : "jtsPointEncoder", "tail" : "(): Encoder[Point]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsPointEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#jtsPointEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.Point]", "kind" : "implicit def"}, {"label" : "jtsGeometryEncoder", "tail" : "(): Encoder[Geometry]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsGeometryEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#jtsGeometryEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.Geometry]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/DataFrameFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.jts.SparkSessionWithJTS", "shortDescription" : "Enrichment over SparkSession to add withJTS \"literate\" method.", "members_class" : [{"label" : "withJTS", "tail" : "(): SparkSession", "member" : "org.locationtech.geomesa.spark.jts.SparkSessionWithJTS.withJTS", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html#withJTS:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.jts.SparkSessionWithJTS#<init>", "error" : "unsupported entity"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "org.locationtech.geomesa.spark.jts.SparkSessionWithJTS.spark", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SparkSessionWithJTS.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.spark.jts.SQLContextWithJTS", "shortDescription" : "Enrichment over SQLContext to add withJTS \"literate\" method.", "members_class" : [{"label" : "withJTS", "tail" : "(): SQLContext", "member" : "org.locationtech.geomesa.spark.jts.SQLContextWithJTS.withJTS", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html#withJTS:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.jts.SQLContextWithJTS#<init>", "error" : "unsupported entity"}, {"label" : "sqlContext", "tail" : ": SQLContext", "member" : "org.locationtech.geomesa.spark.jts.SQLContextWithJTS.sqlContext", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html#sqlContext:org.apache.spark.sql.SQLContext", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/jts\/package$$SQLContextWithJTS.html", "kind" : "class"}], "org.apache.spark" : [], "org.apache" : [], "org.locationtech.geomesa.spark.jts.util" : [{"name" : "org.locationtech.geomesa.spark.jts.util.Bounds", "shortDescription" : "", "members_case class" : [{"label" : "mid", "tail" : ": Double", "member" : "org.locationtech.geomesa.spark.jts.util.Bounds.mid", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#mid:Double", "kind" : "lazy val"}, {"member" : "org.locationtech.geomesa.spark.jts.util.Bounds#<init>", "error" : "unsupported entity"}, {"label" : "high", "tail" : ": Double", "member" : "org.locationtech.geomesa.spark.jts.util.Bounds.high", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#high:Double", "kind" : "val"}, {"label" : "low", "tail" : ": Double", "member" : "org.locationtech.geomesa.spark.jts.util.Bounds.low", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#low:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/locationtech\/geomesa\/spark\/jts\/util\/Bounds.html", "kind" : "case class"}, {"name" : "org.locationtech.geomesa.spark.jts.util.GeoHashUtils", "shortDescription" : "Exposes the two methods needed by ST_GeoHash and ST_GeomFromGeoHashto convert between geometries and Geohashes.", "object" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html", "members_object" : [{"label" : "decode", "tail" : "(geohash: String, precision: Int): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.GeoHashUtils.decode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#decode(geohash:String,precision:Int):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "encode", "tail" : "(geom: Geometry, precision: Int): String", "member" : "org.locationtech.geomesa.spark.jts.util.GeoHashUtils.encode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#encode(geom:org.locationtech.jts.geom.Geometry,precision:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeoHashUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.jts.util.GeometryUtils", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html", "members_object" : [{"label" : "addWayPointsToBBOX", "tail" : "(g: Geometry): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.GeometryUtils.addWayPointsToBBOX", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#addWayPointsToBBOX(g:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/GeometryUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.jts.util.JavaAbstractGeometryUDT", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html", "members_class" : [{"label" : "deserializer", "tail" : "(datum: Array[Byte]): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.JavaAbstractGeometryUDT.deserializer", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#deserializer(datum:Array[Byte]):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.jts.util.JavaAbstractGeometryUDT#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "deserialize", "tail" : "(datum: Array[Byte]): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.JavaAbstractGeometryUDT.deserialize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#deserialize(datum:Array[Byte]):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "jagu", "tail" : ": JavaAbstractGeometryUDT", "member" : "org.locationtech.geomesa.spark.jts.util.JavaAbstractGeometryUDT.jagu", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#jagu:org.locationtech.geomesa.spark.jts.util.JavaAbstractGeometryUDT", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/jts\/util\/JavaAbstractGeometryUDT.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.spark.jts.util.RowGeoJSON", "shortDescription" : "", "members_class" : [{"label" : "toGeoJSON", "tail" : "(row: Row): String", "member" : "org.locationtech.geomesa.spark.jts.util.RowGeoJSON.toGeoJSON", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#toGeoJSON(row:org.apache.spark.sql.Row):String", "kind" : "def"}, {"label" : "geomJson", "tail" : ": GeoJsonWriter", "member" : "org.locationtech.geomesa.spark.jts.util.RowGeoJSON.geomJson", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#geomJson:org.locationtech.jts.io.geojson.GeoJsonWriter", "kind" : "val"}, {"member" : "org.locationtech.geomesa.spark.jts.util.RowGeoJSON#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/jts\/util\/RowGeoJSON.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html", "members_object" : [{"label" : "withAlias", "tail" : "(name: String, inputs: Column*)(output: Column): Column", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.withAlias", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#withAlias(name:String,inputs:org.apache.spark.sql.Column*)(output:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "columnName", "tail" : "(column: Column): String", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.columnName", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#columnName(column:org.apache.spark.sql.Column):String", "kind" : "def"}, {"label" : "udfToColumn", "tail" : "(f: (A1, A2, A3, A4) â‡’ RT, namer: (N) â‡’ String, colA: Column, colB: Column, colC: Column, colD: Column)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[RT], arg5: Encoder[RT]): TypedColumn[Any, RT]", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.udfToColumn", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#udfToColumn[A1,A2,A3,A4,RT,N>:(A1,A2,A3,A4)=>RT](f:(A1,A2,A3,A4)=>RT,namer:N=>String,colA:org.apache.spark.sql.Column,colB:org.apache.spark.sql.Column,colC:org.apache.spark.sql.Column,colD:org.apache.spark.sql.Column)(implicitevidence$13:reflect.runtime.universe.TypeTag[A1],implicitevidence$14:reflect.runtime.universe.TypeTag[A2],implicitevidence$15:reflect.runtime.universe.TypeTag[A3],implicitevidence$16:reflect.runtime.universe.TypeTag[A4],implicitevidence$17:reflect.runtime.universe.TypeTag[RT],implicitevidence$18:org.apache.spark.sql.Encoder[RT]):org.apache.spark.sql.TypedColumn[Any,RT]", "kind" : "def"}, {"label" : "udfToColumn", "tail" : "(f: (A1, A2, A3) â‡’ RT, namer: (N) â‡’ String, colA: Column, colB: Column, colC: Column)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[RT], arg4: Encoder[RT]): TypedColumn[Any, RT]", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.udfToColumn", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#udfToColumn[A1,A2,A3,RT,N>:(A1,A2,A3)=>RT](f:(A1,A2,A3)=>RT,namer:N=>String,colA:org.apache.spark.sql.Column,colB:org.apache.spark.sql.Column,colC:org.apache.spark.sql.Column)(implicitevidence$8:reflect.runtime.universe.TypeTag[A1],implicitevidence$9:reflect.runtime.universe.TypeTag[A2],implicitevidence$10:reflect.runtime.universe.TypeTag[A3],implicitevidence$11:reflect.runtime.universe.TypeTag[RT],implicitevidence$12:org.apache.spark.sql.Encoder[RT]):org.apache.spark.sql.TypedColumn[Any,RT]", "kind" : "def"}, {"label" : "udfToColumn", "tail" : "(f: (A1, A2) â‡’ RT, namer: (N) â‡’ String, colA: Column, colB: Column)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[RT], arg3: Encoder[RT]): TypedColumn[Any, RT]", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.udfToColumn", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#udfToColumn[A1,A2,RT,N>:(A1,A2)=>RT](f:(A1,A2)=>RT,namer:N=>String,colA:org.apache.spark.sql.Column,colB:org.apache.spark.sql.Column)(implicitevidence$4:reflect.runtime.universe.TypeTag[A1],implicitevidence$5:reflect.runtime.universe.TypeTag[A2],implicitevidence$6:reflect.runtime.universe.TypeTag[RT],implicitevidence$7:org.apache.spark.sql.Encoder[RT]):org.apache.spark.sql.TypedColumn[Any,RT]", "kind" : "def"}, {"label" : "udfToColumn", "tail" : "(f: (A1) â‡’ RT, namer: (N) â‡’ String, col: Column)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[RT], arg2: Encoder[RT]): TypedColumn[Any, RT]", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.udfToColumn", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#udfToColumn[A1,RT,N>:A1=>RT](f:A1=>RT,namer:N=>String,col:org.apache.spark.sql.Column)(implicitevidence$1:reflect.runtime.universe.TypeTag[A1],implicitevidence$2:reflect.runtime.universe.TypeTag[RT],implicitevidence$3:org.apache.spark.sql.Encoder[RT]):org.apache.spark.sql.TypedColumn[Any,RT]", "kind" : "def"}, {"label" : "nullableUDF", "tail" : "(f: (A1, A2, A3, A4) â‡’ RT): (A1, A2, A3, A4) â‡’ RT", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.nullableUDF", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#nullableUDF[A1,A2,A3,A4,RT](f:(A1,A2,A3,A4)=>RT):(A1,A2,A3,A4)=>RT", "kind" : "def"}, {"label" : "nullableUDF", "tail" : "(f: (A1, A2, A3) â‡’ RT): (A1, A2, A3) â‡’ RT", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.nullableUDF", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#nullableUDF[A1,A2,A3,RT](f:(A1,A2,A3)=>RT):(A1,A2,A3)=>RT", "kind" : "def"}, {"label" : "nullableUDF", "tail" : "(f: (A1, A2) â‡’ RT): (A1, A2) â‡’ RT", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.nullableUDF", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#nullableUDF[A1,A2,RT](f:(A1,A2)=>RT):(A1,A2)=>RT", "kind" : "def"}, {"label" : "nullableUDF", "tail" : "(f: (A1) â‡’ RT): (A1) â‡’ RT", "member" : "org.locationtech.geomesa.spark.jts.util.SQLFunctionHelper.nullableUDF", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#nullableUDF[A1,RT](f:A1=>RT):A1=>RT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/SQLFunctionHelper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.jts.util.WKBUtils", "members_trait" : [{"label" : "write", "tail" : "(g: Geometry): Array[Byte]", "member" : "org.locationtech.geomesa.spark.jts.util.WKBUtils.write", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#write(g:org.locationtech.jts.geom.Geometry):Array[Byte]", "kind" : "def"}, {"label" : "read", "tail" : "(b: Array[Byte]): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.WKBUtils.read", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#read(b:Array[Byte]):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "read", "tail" : "(s: String): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.WKBUtils.read", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#read(s:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html", "members_object" : [{"label" : "write", "tail" : "(g: Geometry): Array[Byte]", "member" : "org.locationtech.geomesa.spark.jts.util.WKBUtils.write", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#write(g:org.locationtech.jts.geom.Geometry):Array[Byte]", "kind" : "def"}, {"label" : "read", "tail" : "(b: Array[Byte]): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.WKBUtils.read", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#read(b:Array[Byte]):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "read", "tail" : "(s: String): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.WKBUtils.read", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#read(s:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKBUtils.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.spark.jts.util.WKTUtils", "members_trait" : [{"label" : "write", "tail" : "(g: Geometry): String", "member" : "org.locationtech.geomesa.spark.jts.util.WKTUtils.write", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#write(g:org.locationtech.jts.geom.Geometry):String", "kind" : "def"}, {"label" : "read", "tail" : "(s: String): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.WKTUtils.read", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#read(s:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html", "members_object" : [{"label" : "write", "tail" : "(g: Geometry): String", "member" : "org.locationtech.geomesa.spark.jts.util.WKTUtils.write", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#write(g:org.locationtech.jts.geom.Geometry):String", "kind" : "def"}, {"label" : "read", "tail" : "(s: String): Geometry", "member" : "org.locationtech.geomesa.spark.jts.util.WKTUtils.read", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#read(s:String):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/spark\/jts\/util\/WKTUtils.html", "kind" : "trait"}], "org.locationtech.geomesa.spark.jts.encoders" : [{"name" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders", "members_trait" : [{"label" : "jtsGeometryCollectionEncoder", "tail" : "(): Encoder[GeometryCollection]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsGeometryCollectionEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#jtsGeometryCollectionEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.GeometryCollection]", "kind" : "implicit def"}, {"label" : "jtsMultiPolygonEncoder", "tail" : "(): Encoder[MultiPolygon]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsMultiPolygonEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#jtsMultiPolygonEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.MultiPolygon]", "kind" : "implicit def"}, {"label" : "jtsMultiLineStringEncoder", "tail" : "(): Encoder[MultiLineString]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsMultiLineStringEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#jtsMultiLineStringEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.MultiLineString]", "kind" : "implicit def"}, {"label" : "jtsMultiPointEncoder", "tail" : "(): Encoder[MultiPoint]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsMultiPointEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#jtsMultiPointEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.MultiPoint]", "kind" : "implicit def"}, {"label" : "jtsPolygonEncoder", "tail" : "(): Encoder[Polygon]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsPolygonEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#jtsPolygonEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.Polygon]", "kind" : "implicit def"}, {"label" : "jtsLineStringEncoder", "tail" : "(): Encoder[LineString]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsLineStringEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#jtsLineStringEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.LineString]", "kind" : "implicit def"}, {"label" : "jtsPointEncoder", "tail" : "(): Encoder[Point]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsPointEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#jtsPointEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.Point]", "kind" : "implicit def"}, {"label" : "jtsGeometryEncoder", "tail" : "(): Encoder[Geometry]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsGeometryEncoder", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#jtsGeometryEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.Geometry]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Encoders are Spark SQL's mechanism for converting a JVM type into a Catalyst representation.", "trait" : "org\/locationtech\/geomesa\/spark\/jts\/encoders\/SpatialEncoders.html", "kind" : "trait"}], "org.locationtech.geomesa.spark.jts.udf" : [{"name" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html", "members_object" : [{"label" : "ST_Y", "tail" : ": (Geometry) â‡’ Float", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_Y", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_Y:org.locationtech.jts.geom.Geometry=>Float", "kind" : "val"}, {"label" : "ST_X", "tail" : ": (Geometry) â‡’ Float", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_X", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_X:org.locationtech.jts.geom.Geometry=>Float", "kind" : "val"}, {"label" : "ST_PointN", "tail" : ": (Geometry, Int) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_PointN", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_PointN:(org.locationtech.jts.geom.Geometry,Int)=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "ST_NumPoints", "tail" : ": (Geometry) â‡’ Integer", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_NumPoints", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_NumPoints:org.locationtech.jts.geom.Geometry=>Integer", "kind" : "val"}, {"label" : "ST_NumGeometries", "tail" : ": (Geometry) â‡’ Integer", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_NumGeometries", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_NumGeometries:org.locationtech.jts.geom.Geometry=>Integer", "kind" : "val"}, {"label" : "ST_IsValid", "tail" : ": (Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_IsValid", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_IsValid:org.locationtech.jts.geom.Geometry=>Boolean", "kind" : "val"}, {"label" : "ST_IsSimple", "tail" : ": (Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_IsSimple", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_IsSimple:org.locationtech.jts.geom.Geometry=>Boolean", "kind" : "val"}, {"label" : "ST_IsRing", "tail" : ": (Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_IsRing", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_IsRing:org.locationtech.jts.geom.Geometry=>Boolean", "kind" : "val"}, {"label" : "ST_IsEmpty", "tail" : ": (Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_IsEmpty", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_IsEmpty:org.locationtech.jts.geom.Geometry=>Boolean", "kind" : "val"}, {"label" : "ST_IsCollection", "tail" : ": (Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_IsCollection", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_IsCollection:org.locationtech.jts.geom.Geometry=>Boolean", "kind" : "val"}, {"label" : "ST_IsClosed", "tail" : ": (Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_IsClosed", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_IsClosed:org.locationtech.jts.geom.Geometry=>Boolean", "kind" : "val"}, {"label" : "ST_InteriorRingN", "tail" : ": (Geometry, Int) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_InteriorRingN", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_InteriorRingN:(org.locationtech.jts.geom.Geometry,Int)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_GeometryType", "tail" : ": (Geometry) â‡’ String", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_GeometryType", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_GeometryType:org.locationtech.jts.geom.Geometry=>String", "kind" : "val"}, {"label" : "ST_GeometryN", "tail" : ": (Geometry, Int) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_GeometryN", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_GeometryN:(org.locationtech.jts.geom.Geometry,Int)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_ExteriorRing", "tail" : ": (Geometry) â‡’ LineString", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_ExteriorRing", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_ExteriorRing:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.LineString", "kind" : "val"}, {"label" : "ST_Envelope", "tail" : ": (Geometry) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_Envelope", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_Envelope:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_Dimension", "tail" : ": (Geometry) â‡’ Integer", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_Dimension", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_Dimension:org.locationtech.jts.geom.Geometry=>Integer", "kind" : "val"}, {"label" : "ST_CoordDim", "tail" : ": (Geometry) â‡’ Integer", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_CoordDim", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_CoordDim:org.locationtech.jts.geom.Geometry=>Integer", "kind" : "val"}, {"label" : "ST_Boundary", "tail" : ": (Geometry) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricAccessorFunctions.ST_Boundary", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ST_Boundary:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricAccessorFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.jts.udf.GeometricCastFunctions", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html", "members_object" : [{"label" : "ST_ByteArray", "tail" : ": (String) â‡’ Array[Byte]", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricCastFunctions.ST_ByteArray", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#ST_ByteArray:String=>Array[Byte]", "kind" : "val"}, {"label" : "ST_CastToGeometry", "tail" : ": (Geometry) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricCastFunctions.ST_CastToGeometry", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#ST_CastToGeometry:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_CastToLineString", "tail" : ": (Geometry) â‡’ LineString", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricCastFunctions.ST_CastToLineString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#ST_CastToLineString:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.LineString", "kind" : "val"}, {"label" : "ST_CastToPolygon", "tail" : ": (Geometry) â‡’ Polygon", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricCastFunctions.ST_CastToPolygon", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#ST_CastToPolygon:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.Polygon", "kind" : "val"}, {"label" : "ST_CastToPoint", "tail" : ": (Geometry) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricCastFunctions.ST_CastToPoint", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#ST_CastToPoint:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricCastFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html", "members_object" : [{"label" : "ST_PolygonFromText", "tail" : ": (String) â‡’ Polygon", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_PolygonFromText", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_PolygonFromText:String=>org.locationtech.jts.geom.Polygon", "kind" : "val"}, {"label" : "ST_Polygon", "tail" : ": (LineString) â‡’ Polygon", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_Polygon", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_Polygon:org.locationtech.jts.geom.LineString=>org.locationtech.jts.geom.Polygon", "kind" : "val"}, {"label" : "ST_PointFromWKB", "tail" : ": (Array[Byte]) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_PointFromWKB", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_PointFromWKB:Array[Byte]=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "ST_PointFromText", "tail" : ": (String) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_PointFromText", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_PointFromText:String=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "ST_PointFromGeoHash", "tail" : ": (String, Int) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_PointFromGeoHash", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_PointFromGeoHash:(String,Int)=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "ST_Point", "tail" : ": (Double, Double) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_Point", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_Point:(Double,Double)=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "ST_MPolyFromText", "tail" : ": (String) â‡’ MultiPolygon", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_MPolyFromText", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_MPolyFromText:String=>org.locationtech.jts.geom.MultiPolygon", "kind" : "val"}, {"label" : "ST_MPointFromText", "tail" : ": (String) â‡’ MultiPoint", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_MPointFromText", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_MPointFromText:String=>org.locationtech.jts.geom.MultiPoint", "kind" : "val"}, {"label" : "ST_MLineFromText", "tail" : ": (String) â‡’ MultiLineString", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_MLineFromText", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_MLineFromText:String=>org.locationtech.jts.geom.MultiLineString", "kind" : "val"}, {"label" : "ST_MakePointM", "tail" : ": (Double, Double, Double) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_MakePointM", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_MakePointM:(Double,Double,Double)=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "ST_MakeLine", "tail" : ": (Seq[Point]) â‡’ LineString", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_MakeLine", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_MakeLine:Seq[org.locationtech.jts.geom.Point]=>org.locationtech.jts.geom.LineString", "kind" : "val"}, {"label" : "ST_MakePoint", "tail" : ": (Double, Double) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_MakePoint", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_MakePoint:(Double,Double)=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "ST_MakePolygon", "tail" : ": (LineString) â‡’ Polygon", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_MakePolygon", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_MakePolygon:org.locationtech.jts.geom.LineString=>org.locationtech.jts.geom.Polygon", "kind" : "val"}, {"label" : "ST_MakeBBOX", "tail" : ": (Double, Double, Double, Double) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_MakeBBOX", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_MakeBBOX:(Double,Double,Double,Double)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_MakeBox2D", "tail" : ": (Point, Point) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_MakeBox2D", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_MakeBox2D:(org.locationtech.jts.geom.Point,org.locationtech.jts.geom.Point)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_LineFromText", "tail" : ": (String) â‡’ LineString", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_LineFromText", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_LineFromText:String=>org.locationtech.jts.geom.LineString", "kind" : "val"}, {"label" : "ST_GeomFromWKB", "tail" : ": (Array[Byte]) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_GeomFromWKB", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_GeomFromWKB:Array[Byte]=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_GeomFromWKT", "tail" : ": (String) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_GeomFromWKT", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_GeomFromWKT:String=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_GeomFromGeoJSON", "tail" : ": (String) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_GeomFromGeoJSON", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_GeomFromGeoJSON:String=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_GeomFromGeoHash", "tail" : ": (String, Int) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricConstructorFunctions.ST_GeomFromGeoHash", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ST_GeomFromGeoHash:(String,Int)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricConstructorFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.jts.udf.GeometricOutputFunctions", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html", "members_object" : [{"label" : "ST_GeoHash", "tail" : ": (Geometry, Int) â‡’ String", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricOutputFunctions.ST_GeoHash", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#ST_GeoHash:(org.locationtech.jts.geom.Geometry,Int)=>String", "kind" : "val"}, {"label" : "ST_AsText", "tail" : ": (Geometry) â‡’ String", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricOutputFunctions.ST_AsText", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#ST_AsText:org.locationtech.jts.geom.Geometry=>String", "kind" : "val"}, {"label" : "ST_AsLatLonText", "tail" : ": (Point) â‡’ String", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricOutputFunctions.ST_AsLatLonText", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#ST_AsLatLonText:org.locationtech.jts.geom.Point=>String", "kind" : "val"}, {"label" : "ST_AsGeoJSON", "tail" : ": (Geometry) â‡’ String", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricOutputFunctions.ST_AsGeoJSON", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#ST_AsGeoJSON:org.locationtech.jts.geom.Geometry=>String", "kind" : "val"}, {"label" : "ST_AsBinary", "tail" : ": (Geometry) â‡’ Array[Byte]", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricOutputFunctions.ST_AsBinary", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#ST_AsBinary:org.locationtech.jts.geom.Geometry=>Array[Byte]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricOutputFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.jts.udf.GeometricProcessingFunctions", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html", "members_object" : [{"label" : "ST_MakeValid", "tail" : ": (Geometry) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricProcessingFunctions.ST_MakeValid", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#ST_MakeValid:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_BufferPoint", "tail" : ": (Point, Double) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricProcessingFunctions.ST_BufferPoint", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#ST_BufferPoint:(org.locationtech.jts.geom.Point,Double)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_antimeridianSafeGeom", "tail" : ": (Geometry) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.GeometricProcessingFunctions.ST_antimeridianSafeGeom", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#ST_antimeridianSafeGeom:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/GeometricProcessingFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html", "members_object" : [{"label" : "translate", "tail" : "(g: Geometry, deltax: Double, deltay: Double): Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.translate", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#translate(g:org.locationtech.jts.geom.Geometry,deltax:Double,deltay:Double):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "fastDistance", "tail" : "(c1: Coordinate, c2: Coordinate): Double", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.fastDistance", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#fastDistance(c1:org.locationtech.jts.geom.Coordinate,c2:org.locationtech.jts.geom.Coordinate):Double", "kind" : "def"}, {"label" : "closestPoint", "tail" : "(g1: Geometry, g2: Geometry): Point", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.closestPoint", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#closestPoint(g1:org.locationtech.jts.geom.Geometry,g2:org.locationtech.jts.geom.Geometry):org.locationtech.jts.geom.Point", "kind" : "def"}, {"label" : "ST_Difference", "tail" : ": (Geometry, Geometry) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Difference", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Difference:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_Intersection", "tail" : ": (Geometry, Geometry) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Intersection", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Intersection:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_LengthSphere", "tail" : ": (LineString) â‡’ Double", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_LengthSphere", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_LengthSphere:org.locationtech.jts.geom.LineString=>Double", "kind" : "val"}, {"label" : "ST_AggregateDistanceSphere", "tail" : ": (Seq[Geometry]) â‡’ Double", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_AggregateDistanceSphere", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_AggregateDistanceSphere:Seq[org.locationtech.jts.geom.Geometry]=>Double", "kind" : "val"}, {"label" : "ST_Length", "tail" : ": (Geometry) â‡’ Double", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Length", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Length:org.locationtech.jts.geom.Geometry=>Double", "kind" : "val"}, {"label" : "ST_DistanceSphere", "tail" : ": (Geometry, Geometry) â‡’ Double", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_DistanceSphere", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_DistanceSphere:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Double", "kind" : "val"}, {"label" : "ST_Distance", "tail" : ": (Geometry, Geometry) â‡’ Double", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Distance", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Distance:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Double", "kind" : "val"}, {"label" : "ST_ClosestPoint", "tail" : ": (Geometry, Geometry) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_ClosestPoint", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_ClosestPoint:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "ST_Centroid", "tail" : ": (Geometry) â‡’ Point", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Centroid", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Centroid:org.locationtech.jts.geom.Geometry=>org.locationtech.jts.geom.Point", "kind" : "val"}, {"label" : "ST_Area", "tail" : ": (Geometry) â‡’ Double", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Area", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Area:org.locationtech.jts.geom.Geometry=>Double", "kind" : "val"}, {"label" : "ST_RelateBool", "tail" : ": (Geometry, Geometry, String) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_RelateBool", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_RelateBool:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,String)=>Boolean", "kind" : "val"}, {"label" : "ST_Relate", "tail" : ": (Geometry, Geometry) â‡’ String", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Relate", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Relate:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>String", "kind" : "val"}, {"label" : "ST_Within", "tail" : ": (Geometry, Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Within", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Within:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Boolean", "kind" : "val"}, {"label" : "ST_Touches", "tail" : ": (Geometry, Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Touches", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Touches:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Boolean", "kind" : "val"}, {"label" : "ST_Overlaps", "tail" : ": (Geometry, Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Overlaps", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Overlaps:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Boolean", "kind" : "val"}, {"label" : "ST_Intersects", "tail" : ": (Geometry, Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Intersects", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Intersects:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Boolean", "kind" : "val"}, {"label" : "ST_Equals", "tail" : ": (Geometry, Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Equals:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Boolean", "kind" : "val"}, {"label" : "ST_Disjoint", "tail" : ": (Geometry, Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Disjoint", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Disjoint:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Boolean", "kind" : "val"}, {"label" : "ST_Crosses", "tail" : ": (Geometry, Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Crosses", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Crosses:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Boolean", "kind" : "val"}, {"label" : "ST_Covers", "tail" : ": (Geometry, Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Covers", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Covers:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Boolean", "kind" : "val"}, {"label" : "ST_Contains", "tail" : ": (Geometry, Geometry) â‡’ Boolean", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Contains", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Contains:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Boolean", "kind" : "val"}, {"label" : "ST_Translate", "tail" : ": (Geometry, Double, Double) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.jts.udf.SpatialRelationFunctions.ST_Translate", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ST_Translate:(org.locationtech.jts.geom.Geometry,Double,Double)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udf\/SpatialRelationFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.locationtech.geomesa.spark.jts.rules" : [{"name" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteral", "shortDescription" : "Catalyst AST expression used during rule rewriting to extract geometry literal valuesfrom Catalyst memory and keep a copy in JVM heap space for subsequent use in rule evaluation.", "members_case class" : [{"label" : "dataType", "tail" : "(): DataType", "member" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteral.dataType", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteral.eval", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteral.nullable", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#nullable:Boolean", "kind" : "def"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteral.foldable", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#foldable:Boolean", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteral#<init>", "error" : "unsupported entity"}, {"label" : "geom", "tail" : ": Geometry", "member" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteral.geom", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#geom:org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "repr", "tail" : ": Any", "member" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteral.repr", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#repr:Any", "kind" : "val"}, {"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.codegen.CodegenFallback.doGenCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "withNewChildrenInternal", "tail" : "(newChildren: IndexedSeq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.LeafLike.withNewChildrenInternal", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#withNewChildrenInternal(newChildren:IndexedSeq[T]):T", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.LeafLike.mapChildren", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#mapChildren(f:T=>T):T", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.LeafLike.children", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#children:Seq[T]", "kind" : "final def"}, {"label" : "typeSuffix", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.typeSuffix", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#typeSuffix:String", "kind" : "def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.prettyName", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#prettyName:String", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "final def"}, {"label" : "withCanonicalizedChildren", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.withCanonicalizedChildren", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#withCanonicalizedChildren:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "final def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "freshCopyIfContainsStatefulExpression", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.freshCopyIfContainsStatefulExpression", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#freshCopyIfContainsStatefulExpression():org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "stateful", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.stateful", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#stateful:Boolean", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: ArrayList[Boolean], append: (String) â‡’ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#generateTreeString(depth:Int,lastChildren:java.util.ArrayList[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) â‡’ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "multiTransformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDownWithPruning", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#multiTransformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "multiTransformDown", "tail" : "(rule: PartialFunction[Expression, Seq[Expression]]): Stream[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.multiTransformDown", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#multiTransformDown(rule:PartialFunction[BaseType,Seq[BaseType]]):Stream[BaseType]", "kind" : "def"}, {"label" : "transformUpWithBeforeAndAfterRuleOnChildren", "tail" : "(cond: (Expression) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[(Expression, Expression), Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithBeforeAndAfterRuleOnChildren", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#transformUpWithBeforeAndAfterRuleOnChildren(cond:BaseType=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[(BaseType,BaseType),BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUpWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUpWithPruning", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#transformUpWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDownWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#transformDownWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformWithPruning", "tail" : "(cond: (TreePatternBits) â‡’ Boolean, ruleId: RuleId)(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformWithPruning", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#transformWithPruning(cond:org.apache.spark.sql.catalyst.trees.TreePatternBits=>Boolean,ruleId:org.apache.spark.sql.catalyst.rules.RuleId)(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "legacyWithNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.legacyWithNewChildren", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#legacyWithNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "final def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) â‡’ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) â‡’ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) â‡’ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) â‡’ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (Expression) â‡’ Boolean): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.exists", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#exists(f:BaseType=>Boolean):Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) â‡’ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "isRuleIneffective", "tail" : "(ruleId: RuleId): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.isRuleIneffective", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#isRuleIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Boolean", "kind" : "def"}, {"label" : "markRuleAsIneffective", "tail" : "(ruleId: RuleId): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.markRuleAsIneffective", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#markRuleAsIneffective(ruleId:org.apache.spark.sql.catalyst.rules.RuleId):Unit", "kind" : "def"}, {"label" : "nodePatterns", "tail" : ": Seq[TreePattern]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodePatterns", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#nodePatterns:Seq[org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern]", "kind" : "val"}, {"label" : "treePatternBits", "tail" : ": BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treePatternBits", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#treePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "lazy val"}, {"label" : "getDefaultTreePatternBits", "tail" : "(): BitSet", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getDefaultTreePatternBits", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#getDefaultTreePatternBits:org.apache.spark.util.collection.BitSet", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "containsAnyPattern", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAnyPattern", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#containsAnyPattern(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsAllPatterns", "tail" : "(patterns: TreePattern*): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsAllPatterns", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#containsAllPatterns(patterns:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern*):Boolean", "kind" : "final def"}, {"label" : "containsPattern", "tail" : "(t: TreePattern): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreePatternBits.containsPattern", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#containsPattern(t:org.apache.spark.sql.catalyst.trees.TreePattern.TreePattern):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteral.html", "kind" : "case class"}, {"name" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteralRules", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html", "members_object" : [{"label" : "ScalaUDFRule", "tail" : "", "member" : "org.locationtech.geomesa.spark.jts.rules.GeometryLiteralRules.ScalaUDFRule", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#ScalaUDFRule", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/rules\/GeometryLiteralRules$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql" : [], "org" : [], "org.locationtech.geomesa.spark.jts.udaf" : [{"name" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull", "shortDescription" : "", "members_class" : [{"label" : "evaluate", "tail" : "(buffer: Row): Any", "member" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull.evaluate", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#evaluate(buffer:org.apache.spark.sql.Row):Any", "kind" : "def"}, {"label" : "merge", "tail" : "(buffer1: MutableAggregationBuffer, buffer2: Row): Unit", "member" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull.merge", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#merge(buffer1:org.apache.spark.sql.expressions.MutableAggregationBuffer,buffer2:org.apache.spark.sql.Row):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(buffer: MutableAggregationBuffer, input: Row): Unit", "member" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull.update", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#update(buffer:org.apache.spark.sql.expressions.MutableAggregationBuffer,input:org.apache.spark.sql.Row):Unit", "kind" : "def"}, {"label" : "initialize", "tail" : "(buffer: MutableAggregationBuffer): Unit", "member" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull.initialize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#initialize(buffer:org.apache.spark.sql.expressions.MutableAggregationBuffer):Unit", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull.deterministic", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#deterministic:Boolean", "kind" : "val"}, {"label" : "dataType", "tail" : ": StructType", "member" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull.dataType", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#dataType:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "bufferSchema", "tail" : ": StructType", "member" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull.bufferSchema", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#bufferSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "inputSchema", "tail" : ": StructType", "member" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull.inputSchema", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#inputSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"member" : "org.locationtech.geomesa.spark.jts.udaf.ConvexHull#<init>", "error" : "unsupported entity"}, {"label" : "distinct", "tail" : "(exprs: Column*): Column", "member" : "org.apache.spark.sql.expressions.UserDefinedAggregateFunction.distinct", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#distinct(exprs:org.apache.spark.sql.Column*):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "apply", "tail" : "(exprs: Column*): Column", "member" : "org.apache.spark.sql.expressions.UserDefinedAggregateFunction.apply", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#apply(exprs:org.apache.spark.sql.Column*):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/jts\/udaf\/ConvexHull.html", "kind" : "class"}], "org.apache.spark.sql.jts" : [{"name" : "org.apache.spark.sql.jts.AbstractGeometryUDT", "shortDescription" : "Base class for all JTS UDTs, which get encoded in Catalyst as WKB blobs.", "object" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html", "members_class" : [{"label" : "deserialize", "tail" : "(datum: Any): T", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#deserialize(datum:Any):T", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[T]", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#userClass:Class[T]", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: T): Any", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#serialize(obj:T):Any", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#pyUDT:String", "kind" : "def"}, {"member" : "org.apache.spark.sql.jts.AbstractGeometryUDT#<init>", "error" : "unsupported entity"}, {"label" : "simpleString", "tail" : ": String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.simpleString", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#simpleString:String", "kind" : "val"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#serializedPyClass:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/jts\/AbstractGeometryUDT.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.jts.GeometryCollectionUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html", "members_object" : [{"label" : "deserialize", "tail" : "(datum: Any): GeometryCollection", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#deserialize(datum:Any):T", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[GeometryCollection]", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#userClass:Class[T]", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: GeometryCollection): Any", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#serialize(obj:T):Any", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "simpleString", "tail" : ": String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.simpleString", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#simpleString:String", "kind" : "val"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/GeometryCollectionUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.jts.GeometryUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html", "members_object" : [{"label" : "deserialize", "tail" : "(datum: Any): Geometry", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#deserialize(datum:Any):T", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[Geometry]", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#userClass:Class[T]", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: Geometry): Any", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#serialize(obj:T):Any", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "simpleString", "tail" : ": String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.simpleString", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#simpleString:String", "kind" : "val"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/GeometryUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.jts.JTSTypes", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html", "members_object" : [{"label" : "typeMap", "tail" : ": Map[Class[_], Class[_ <: UserDefinedType[_]]]", "member" : "org.apache.spark.sql.jts.JTSTypes.typeMap", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#typeMap:Map[Class[_],Class[_<:org.apache.spark.sql.types.UserDefinedType[_]]]", "kind" : "val"}, {"label" : "GeometryCollectionType", "tail" : ": Int", "member" : "org.apache.spark.sql.jts.JTSTypes.GeometryCollectionType", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#GeometryCollectionType:Int", "kind" : "val"}, {"label" : "MultiPolygonType", "tail" : ": Int", "member" : "org.apache.spark.sql.jts.JTSTypes.MultiPolygonType", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#MultiPolygonType:Int", "kind" : "val"}, {"label" : "MultiLineStringType", "tail" : ": Int", "member" : "org.apache.spark.sql.jts.JTSTypes.MultiLineStringType", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#MultiLineStringType:Int", "kind" : "val"}, {"label" : "MultiPointType", "tail" : ": Int", "member" : "org.apache.spark.sql.jts.JTSTypes.MultiPointType", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#MultiPointType:Int", "kind" : "val"}, {"label" : "PolygonType", "tail" : ": Int", "member" : "org.apache.spark.sql.jts.JTSTypes.PolygonType", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#PolygonType:Int", "kind" : "val"}, {"label" : "LineStringType", "tail" : ": Int", "member" : "org.apache.spark.sql.jts.JTSTypes.LineStringType", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#LineStringType:Int", "kind" : "val"}, {"label" : "PointType", "tail" : ": Int", "member" : "org.apache.spark.sql.jts.JTSTypes.PointType", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#PointType:Int", "kind" : "val"}, {"label" : "GeometryType", "tail" : ": Int", "member" : "org.apache.spark.sql.jts.JTSTypes.GeometryType", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#GeometryType:Int", "kind" : "val"}, {"label" : "GeometryCollectionTypeInstance", "tail" : ": GeometryCollectionUDT", "member" : "org.apache.spark.sql.jts.JTSTypes.GeometryCollectionTypeInstance", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#GeometryCollectionTypeInstance:org.apache.spark.sql.jts.GeometryCollectionUDT", "kind" : "val"}, {"label" : "MultipolygonTypeInstance", "tail" : ": MultiPolygonUDT", "member" : "org.apache.spark.sql.jts.JTSTypes.MultipolygonTypeInstance", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#MultipolygonTypeInstance:org.apache.spark.sql.jts.MultiPolygonUDT", "kind" : "val"}, {"label" : "MultiLineStringTypeInstance", "tail" : ": MultiLineStringUDT", "member" : "org.apache.spark.sql.jts.JTSTypes.MultiLineStringTypeInstance", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#MultiLineStringTypeInstance:org.apache.spark.sql.jts.MultiLineStringUDT", "kind" : "val"}, {"label" : "MultiPointTypeInstance", "tail" : ": MultiPointUDT", "member" : "org.apache.spark.sql.jts.JTSTypes.MultiPointTypeInstance", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#MultiPointTypeInstance:org.apache.spark.sql.jts.MultiPointUDT", "kind" : "val"}, {"label" : "PolygonTypeInstance", "tail" : ": PolygonUDT", "member" : "org.apache.spark.sql.jts.JTSTypes.PolygonTypeInstance", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#PolygonTypeInstance:org.apache.spark.sql.jts.PolygonUDT", "kind" : "val"}, {"label" : "LineStringTypeInstance", "tail" : ": LineStringUDT", "member" : "org.apache.spark.sql.jts.JTSTypes.LineStringTypeInstance", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#LineStringTypeInstance:org.apache.spark.sql.jts.LineStringUDT", "kind" : "val"}, {"label" : "PointTypeInstance", "tail" : ": PointUDT", "member" : "org.apache.spark.sql.jts.JTSTypes.PointTypeInstance", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#PointTypeInstance:org.apache.spark.sql.jts.PointUDT", "kind" : "val"}, {"label" : "GeometryTypeInstance", "tail" : ": GeometryUDT", "member" : "org.apache.spark.sql.jts.JTSTypes.GeometryTypeInstance", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#GeometryTypeInstance:org.apache.spark.sql.jts.GeometryUDT", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/JTSTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.jts.LineStringUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html", "members_object" : [{"label" : "deserialize", "tail" : "(datum: Any): LineString", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#deserialize(datum:Any):T", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[LineString]", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#userClass:Class[T]", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: LineString): Any", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#serialize(obj:T):Any", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "simpleString", "tail" : ": String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.simpleString", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#simpleString:String", "kind" : "val"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/LineStringUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.jts.MultiLineStringUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html", "members_object" : [{"label" : "deserialize", "tail" : "(datum: Any): MultiLineString", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#deserialize(datum:Any):T", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[MultiLineString]", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#userClass:Class[T]", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: MultiLineString): Any", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#serialize(obj:T):Any", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "simpleString", "tail" : ": String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.simpleString", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#simpleString:String", "kind" : "val"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/MultiLineStringUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.jts.MultiPointUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html", "members_object" : [{"label" : "deserialize", "tail" : "(datum: Any): MultiPoint", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#deserialize(datum:Any):T", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[MultiPoint]", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#userClass:Class[T]", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: MultiPoint): Any", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#serialize(obj:T):Any", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "simpleString", "tail" : ": String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.simpleString", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#simpleString:String", "kind" : "val"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/MultiPointUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.jts.MultiPolygonUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html", "members_object" : [{"label" : "deserialize", "tail" : "(datum: Any): MultiPolygon", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#deserialize(datum:Any):T", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[MultiPolygon]", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#userClass:Class[T]", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: MultiPolygon): Any", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#serialize(obj:T):Any", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "simpleString", "tail" : ": String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.simpleString", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#simpleString:String", "kind" : "val"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/MultiPolygonUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.jts.PointUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html", "members_object" : [{"label" : "deserialize", "tail" : "(datum: Any): Point", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#deserialize(datum:Any):T", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[Point]", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#userClass:Class[T]", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: Point): Any", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#serialize(obj:T):Any", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "simpleString", "tail" : ": String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.simpleString", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#simpleString:String", "kind" : "val"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/PointUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.jts.PolygonUDT", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html", "members_object" : [{"label" : "deserialize", "tail" : "(datum: Any): Polygon", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.deserialize", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#deserialize(datum:Any):T", "kind" : "def"}, {"label" : "userClass", "tail" : "(): Class[Polygon]", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.userClass", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#userClass:Class[T]", "kind" : "def"}, {"label" : "sqlType", "tail" : "(): DataType", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.sqlType", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#sqlType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "serialize", "tail" : "(obj: Polygon): Any", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.serialize", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#serialize(obj:T):Any", "kind" : "def"}, {"label" : "pyUDT", "tail" : "(): String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.pyUDT", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#pyUDT:String", "kind" : "def"}, {"label" : "simpleString", "tail" : ": String", "member" : "org.apache.spark.sql.jts.AbstractGeometryUDT.simpleString", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#simpleString:String", "kind" : "val"}, {"label" : "catalogString", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.catalogString", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#catalogString:String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.sql.types.UserDefinedType.equals", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.hashCode", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#hashCode():Int", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.sql", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#sql:String", "kind" : "def"}, {"label" : "defaultSize", "tail" : "(): Int", "member" : "org.apache.spark.sql.types.UserDefinedType.defaultSize", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#defaultSize:Int", "kind" : "def"}, {"label" : "serializedPyClass", "tail" : "(): String", "member" : "org.apache.spark.sql.types.UserDefinedType.serializedPyClass", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#serializedPyClass:String", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.prettyJson", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#prettyJson:String", "kind" : "def"}, {"label" : "json", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.json", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#json:String", "kind" : "def"}, {"label" : "typeName", "tail" : "(): String", "member" : "org.apache.spark.sql.types.DataType.typeName", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#typeName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/jts\/PolygonUDT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};