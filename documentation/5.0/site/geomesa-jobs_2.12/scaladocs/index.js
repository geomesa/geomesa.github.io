Index.PACKAGES = {"org.locationtech" : [], "org.locationtech.geomesa" : [], "org.locationtech.geomesa.jobs.mapreduce" : [{"name" : "org.locationtech.geomesa.jobs.mapreduce.AvroFileInputFormat", "shortDescription" : "Class for reading avro files written usingorg.locationtech.geomesa.features.avro.AvroDataFileWriter.", "object" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html", "members_class" : [{"label" : "createRecordReader", "tail" : "(): FileStreamRecordReader", "member" : "org.locationtech.geomesa.jobs.mapreduce.AvroFileInputFormat.createRecordReader", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#createRecordReader():org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader", "kind" : "def"}, {"member" : "org.locationtech.geomesa.jobs.mapreduce.AvroFileInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "createRecordReader", "tail" : "(split: InputSplit, context: TaskAttemptContext): SFRR", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.createRecordReader", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#createRecordReader(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):FileStreamInputFormat.this.SFRR", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(context: JobContext, filename: Path): Boolean", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.isSplitable", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#isSplitable(context:org.apache.hadoop.mapreduce.JobContext,filename:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "SFRR", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.SFRR", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#SFRR=org.apache.hadoop.mapreduce.RecordReader[org.apache.hadoop.io.LongWritable,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "type"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "getSplits", "tail" : "(arg0: JobContext): List[InputSplit]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getSplits", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#getSplits(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "listStatus", "tail" : "(arg0: JobContext): List[FileStatus]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.listStatus", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#listStatus(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "setTypeName", "tail" : "(job: Job, typeName: String): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.AvroFileInputFormat.setTypeName", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#setTypeName(job:org.apache.hadoop.mapreduce.Job,typeName:String):Unit", "kind" : "def"}, {"label" : "Counters", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.AvroFileInputFormat.Counters", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#Counters", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileInputFormat.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.AvroFileRecordReader", "shortDescription" : "", "members_class" : [{"label" : "createIterator", "tail" : "(stream: InputStream with Seekable, filePath: Path, context: TaskAttemptContext): Iterator[SimpleFeature] with Closeable", "member" : "org.locationtech.geomesa.jobs.mapreduce.AvroFileRecordReader.createIterator", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#createIterator(stream:java.io.InputStreamwithorg.apache.hadoop.fs.Seekable,filePath:org.apache.hadoop.fs.Path,context:org.apache.hadoop.mapreduce.TaskAttemptContext):Iterator[org.geotools.api.feature.simple.SimpleFeature]withjava.io.Closeable", "kind" : "def"}, {"member" : "org.locationtech.geomesa.jobs.mapreduce.AvroFileRecordReader#<init>", "error" : "unsupported entity"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.close", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#close():Unit", "kind" : "def"}, {"label" : "getCurrentKey", "tail" : "(): LongWritable", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.getCurrentKey", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#getCurrentKey():org.apache.hadoop.io.LongWritable", "kind" : "def"}, {"label" : "initialize", "tail" : "(split: InputSplit, context: TaskAttemptContext): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.initialize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#initialize(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "getCurrentValue", "tail" : "(): SimpleFeature", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.getCurrentValue", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#getCurrentValue():org.geotools.api.feature.simple.SimpleFeature", "kind" : "def"}, {"label" : "nextKeyValue", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.nextKeyValue", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#nextKeyValue():Boolean", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.getProgress", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#getProgress():Float", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/AvroFileRecordReader.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.CombineFileStreamRecordReaderWrapper", "shortDescription" : "", "members_class" : [{"member" : "org.locationtech.geomesa.jobs.mapreduce.CombineFileStreamRecordReaderWrapper#<init>", "error" : "unsupported entity"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileRecordReaderWrapper.close", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#close():Unit", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileRecordReaderWrapper.getProgress", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#getProgress():Float", "kind" : "def"}, {"label" : "getCurrentValue", "tail" : "(): SimpleFeature", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileRecordReaderWrapper.getCurrentValue", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#getCurrentValue():V", "kind" : "def"}, {"label" : "getCurrentKey", "tail" : "(): LongWritable", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileRecordReaderWrapper.getCurrentKey", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#getCurrentKey():K", "kind" : "def"}, {"label" : "nextKeyValue", "tail" : "(): Boolean", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileRecordReaderWrapper.nextKeyValue", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#nextKeyValue():Boolean", "kind" : "def"}, {"label" : "initialize", "tail" : "(arg0: InputSplit, arg1: TaskAttemptContext): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileRecordReaderWrapper.initialize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#initialize(x$1:org.apache.hadoop.mapreduce.InputSplit,x$2:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/CombineFileStreamRecordReaderWrapper.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.ConverterCombineInputFormat", "shortDescription" : "", "members_class" : [{"label" : "createRecordReader", "tail" : "(split: InputSplit, context: TaskAttemptContext): CombineFileRecordReader[LongWritable, SimpleFeature]", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterCombineInputFormat.createRecordReader", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#createRecordReader(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.lib.input.CombineFileRecordReader[org.apache.hadoop.io.LongWritable,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(context: JobContext, filename: Path): Boolean", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterCombineInputFormat.isSplitable", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#isSplitable(context:org.apache.hadoop.mapreduce.JobContext,filename:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterCombineInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "getFileBlockLocations", "tail" : "(arg0: FileSystem, arg1: FileStatus): Array[BlockLocation]", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.getFileBlockLocations", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#getFileBlockLocations(x$1:org.apache.hadoop.fs.FileSystem,x$2:org.apache.hadoop.fs.FileStatus):Array[org.apache.hadoop.fs.BlockLocation]", "kind" : "def"}, {"label" : "getSplits", "tail" : "(arg0: JobContext): List[InputSplit]", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.getSplits", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#getSplits(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "createPool", "tail" : "(arg0: <repeated...>[PathFilter]): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.createPool", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#createPool(x$1:org.apache.hadoop.fs.PathFilter*):Unit", "kind" : "def"}, {"label" : "createPool", "tail" : "(arg0: List[PathFilter]): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.createPool", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#createPool(x$1:java.util.List[org.apache.hadoop.fs.PathFilter]):Unit", "kind" : "def"}, {"label" : "setMinSplitSizeRack", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMinSplitSizeRack", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#setMinSplitSizeRack(x$1:Long):Unit", "kind" : "def"}, {"label" : "setMinSplitSizeNode", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMinSplitSizeNode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#setMinSplitSizeNode(x$1:Long):Unit", "kind" : "def"}, {"label" : "setMaxSplitSize", "tail" : "(arg0: Long): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat.setMaxSplitSize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#setMaxSplitSize(x$1:Long):Unit", "kind" : "def"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "listStatus", "tail" : "(arg0: JobContext): List[FileStatus]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.listStatus", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#listStatus(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterCombineInputFormat.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat", "shortDescription" : "Input format for Converters gives us access to the entire file as a byte streamvia the record reader.", "object" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html", "members_class" : [{"label" : "createRecordReader", "tail" : "(): FileStreamRecordReader", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.createRecordReader", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#createRecordReader():org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader", "kind" : "def"}, {"member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "createRecordReader", "tail" : "(split: InputSplit, context: TaskAttemptContext): SFRR", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.createRecordReader", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#createRecordReader(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):FileStreamInputFormat.this.SFRR", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(context: JobContext, filename: Path): Boolean", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.isSplitable", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#isSplitable(context:org.apache.hadoop.mapreduce.JobContext,filename:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "SFRR", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.SFRR", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#SFRR=org.apache.hadoop.mapreduce.RecordReader[org.apache.hadoop.io.LongWritable,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "type"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "getSplits", "tail" : "(arg0: JobContext): List[InputSplit]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getSplits", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#getSplits(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "listStatus", "tail" : "(arg0: JobContext): List[FileStatus]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.listStatus", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#listStatus(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "setFilter", "tail" : "(conf: Configuration, ecql: String): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.setFilter", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#setFilter(conf:org.apache.hadoop.conf.Configuration,ecql:String):Unit", "kind" : "def"}, {"label" : "setFilter", "tail" : "(job: Job, ecql: String): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.setFilter", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#setFilter(job:org.apache.hadoop.mapreduce.Job,ecql:String):Unit", "kind" : "def"}, {"label" : "setRetypeSft", "tail" : "(conf: Configuration, sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.setRetypeSft", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#setRetypeSft(conf:org.apache.hadoop.conf.Configuration,sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "setRetypeSft", "tail" : "(job: Job, sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.setRetypeSft", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#setRetypeSft(job:org.apache.hadoop.mapreduce.Job,sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "setSft", "tail" : "(conf: Configuration, sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.setSft", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#setSft(conf:org.apache.hadoop.conf.Configuration,sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "setSft", "tail" : "(job: Job, sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.setSft", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#setSft(job:org.apache.hadoop.mapreduce.Job,sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "setConverterConfig", "tail" : "(conf: Configuration, config: String): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.setConverterConfig", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#setConverterConfig(conf:org.apache.hadoop.conf.Configuration,config:String):Unit", "kind" : "def"}, {"label" : "setConverterConfig", "tail" : "(job: Job, config: String): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.setConverterConfig", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#setConverterConfig(job:org.apache.hadoop.mapreduce.Job,config:String):Unit", "kind" : "def"}, {"label" : "RetypeKey", "tail" : ": String", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.RetypeKey", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#RetypeKey:String", "kind" : "val"}, {"label" : "ConverterKey", "tail" : ": String", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.ConverterKey", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#ConverterKey:String", "kind" : "val"}, {"label" : "ConverterCounters", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterInputFormat.ConverterCounters", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#ConverterCounters", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterInputFormat.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.ConverterRecordReader", "shortDescription" : "", "members_class" : [{"label" : "MapReduceCounter", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterRecordReader.MapReduceCounter", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#MapReduceCounterextendsCounter", "kind" : "class"}, {"label" : "createIterator", "tail" : "(stream: InputStream with Seekable, filePath: Path, context: TaskAttemptContext): Iterator[SimpleFeature] with Closeable", "member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterRecordReader.createIterator", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#createIterator(stream:java.io.InputStreamwithorg.apache.hadoop.fs.Seekable,filePath:org.apache.hadoop.fs.Path,context:org.apache.hadoop.mapreduce.TaskAttemptContext):Iterator[org.geotools.api.feature.simple.SimpleFeature]withjava.io.Closeable", "kind" : "def"}, {"member" : "org.locationtech.geomesa.jobs.mapreduce.ConverterRecordReader#<init>", "error" : "unsupported entity"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.close", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#close():Unit", "kind" : "def"}, {"label" : "getCurrentKey", "tail" : "(): LongWritable", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.getCurrentKey", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#getCurrentKey():org.apache.hadoop.io.LongWritable", "kind" : "def"}, {"label" : "initialize", "tail" : "(split: InputSplit, context: TaskAttemptContext): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.initialize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#initialize(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "getCurrentValue", "tail" : "(): SimpleFeature", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.getCurrentValue", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#getCurrentValue():org.geotools.api.feature.simple.SimpleFeature", "kind" : "def"}, {"label" : "nextKeyValue", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.nextKeyValue", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#nextKeyValue():Boolean", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.getProgress", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#getProgress():Float", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/ConverterRecordReader.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat", "shortDescription" : "Input format that gives us access to the entire file as a byte stream via the record reader.", "object" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html", "members_class" : [{"label" : "createRecordReader", "tail" : "(split: InputSplit, context: TaskAttemptContext): SFRR", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.createRecordReader", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#createRecordReader(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):FileStreamInputFormat.this.SFRR", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(context: JobContext, filename: Path): Boolean", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.isSplitable", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#isSplitable(context:org.apache.hadoop.mapreduce.JobContext,filename:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "SFRR", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.SFRR", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#SFRR=org.apache.hadoop.mapreduce.RecordReader[org.apache.hadoop.io.LongWritable,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "type"}, {"member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "getSplits", "tail" : "(arg0: JobContext): List[InputSplit]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getSplits", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#getSplits(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "listStatus", "tail" : "(arg0: JobContext): List[FileStatus]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.listStatus", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#listStatus(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createRecordReader", "tail" : "(): FileStreamRecordReader", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.createRecordReader", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html#createRecordReader():org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader", "kind" : "abstract def"}], "members_object" : [{"label" : "getSft", "tail" : "(conf: Configuration): SimpleFeatureType", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.getSft", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#getSft(conf:org.apache.hadoop.conf.Configuration):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "setSft", "tail" : "(conf: Configuration, sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.setSft", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#setSft(conf:org.apache.hadoop.conf.Configuration,sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "setSft", "tail" : "(job: Job, sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.setSft", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#setSft(job:org.apache.hadoop.mapreduce.Job,sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "TypeNameKey", "tail" : ": String", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.TypeNameKey", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#TypeNameKey:String", "kind" : "val"}, {"label" : "SftKey", "tail" : ": String", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamInputFormat.SftKey", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#SftKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamInputFormat.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader", "shortDescription" : "Base class for operating on file input streams.", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.close", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#close():Unit", "kind" : "def"}, {"label" : "getCurrentKey", "tail" : "(): LongWritable", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.getCurrentKey", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#getCurrentKey():org.apache.hadoop.io.LongWritable", "kind" : "def"}, {"label" : "initialize", "tail" : "(split: InputSplit, context: TaskAttemptContext): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.initialize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#initialize(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):Unit", "kind" : "def"}, {"label" : "getCurrentValue", "tail" : "(): SimpleFeature", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.getCurrentValue", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#getCurrentValue():org.geotools.api.feature.simple.SimpleFeature", "kind" : "def"}, {"label" : "nextKeyValue", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.nextKeyValue", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#nextKeyValue():Boolean", "kind" : "def"}, {"label" : "getProgress", "tail" : "(): Float", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.getProgress", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#getProgress():Float", "kind" : "def"}, {"member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createIterator", "tail" : "(stream: InputStream with Seekable, filePath: Path, context: TaskAttemptContext): Iterator[SimpleFeature] with Closeable", "member" : "org.locationtech.geomesa.jobs.mapreduce.FileStreamRecordReader.createIterator", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html#createIterator(stream:java.io.InputStreamwithorg.apache.hadoop.fs.Seekable,filePath:org.apache.hadoop.fs.Path,context:org.apache.hadoop.mapreduce.TaskAttemptContext):Iterator[org.geotools.api.feature.simple.SimpleFeature]withjava.io.Closeable", "kind" : "abstract def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/FileStreamRecordReader.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.GeoMesaOutputFormat", "shortDescription" : "Output format that writes simple features using GeoMesaDataStore's FeatureWriterAppend.", "object" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html", "members_class" : [{"label" : "getOutputCommitter", "tail" : "(context: TaskAttemptContext): OutputCommitter", "member" : "org.locationtech.geomesa.jobs.mapreduce.GeoMesaOutputFormat.getOutputCommitter", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#getOutputCommitter(context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.OutputCommitter", "kind" : "def"}, {"label" : "checkOutputSpecs", "tail" : "(context: JobContext): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.GeoMesaOutputFormat.checkOutputSpecs", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#checkOutputSpecs(context:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(context: TaskAttemptContext): RecordWriter[Text, SimpleFeature]", "member" : "org.locationtech.geomesa.jobs.mapreduce.GeoMesaOutputFormat.getRecordWriter", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#getRecordWriter(context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordWriter[org.apache.hadoop.io.Text,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.jobs.mapreduce.GeoMesaOutputFormat#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "GeoMesaRecordWriter", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.GeoMesaOutputFormat.GeoMesaRecordWriter", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#GeoMesaRecordWriterextendsRecordWriter[org.apache.hadoop.io.Text,org.geotools.api.feature.simple.SimpleFeature]withLazyLogging", "kind" : "class"}, {"label" : "setOutputJava", "tail" : "(conf: Configuration, params: Map[String, String], sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.GeoMesaOutputFormat.setOutputJava", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#setOutputJava(conf:org.apache.hadoop.conf.Configuration,params:java.util.Map[String,String],sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "setOutput", "tail" : "(conf: Configuration, params: Map[String, String], sft: SimpleFeatureType, indices: Option[Seq[String]]): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.GeoMesaOutputFormat.setOutput", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#setOutput(conf:org.apache.hadoop.conf.Configuration,params:Map[String,String],sft:org.geotools.api.feature.simple.SimpleFeatureType,indices:Option[Seq[String]]):Unit", "kind" : "def"}, {"label" : "OutputCounters", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.GeoMesaOutputFormat.OutputCounters", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#OutputCounters", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/GeoMesaOutputFormat.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.JobWithLibJars", "members_trait" : [{"label" : "setLibJars", "tail" : "(job: Job, fileNames: Seq[String], searchPath: Iterator[() ⇒ Seq[File]]): Unit", "member" : "org.locationtech.geomesa.jobs.mapreduce.JobWithLibJars.setLibJars", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#setLibJars(job:org.apache.hadoop.mapreduce.Job,fileNames:Seq[String],searchPath:Iterator[()=>Seq[java.io.File]]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/JobWithLibJars.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.jobs.mapreduce.SimpleFeatureSerialization", "shortDescription" : "Hadoop writable serialization for simple features", "object" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html", "members_class" : [{"label" : "getDeserializer", "tail" : "(c: Class[SimpleFeature]): Deserializer[SimpleFeature]", "member" : "org.locationtech.geomesa.jobs.mapreduce.SimpleFeatureSerialization.getDeserializer", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#getDeserializer(c:Class[org.geotools.api.feature.simple.SimpleFeature]):org.apache.hadoop.io.serializer.Deserializer[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "getSerializer", "tail" : "(c: Class[SimpleFeature]): Serializer[SimpleFeature]", "member" : "org.locationtech.geomesa.jobs.mapreduce.SimpleFeatureSerialization.getSerializer", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#getSerializer(c:Class[org.geotools.api.feature.simple.SimpleFeature]):org.apache.hadoop.io.serializer.Serializer[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "accept", "tail" : "(c: Class[_]): Boolean", "member" : "org.locationtech.geomesa.jobs.mapreduce.SimpleFeatureSerialization.accept", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#accept(c:Class[_]):Boolean", "kind" : "def"}, {"member" : "org.locationtech.geomesa.jobs.mapreduce.SimpleFeatureSerialization#<init>", "error" : "unsupported entity"}, {"label" : "getConf", "tail" : "(): Configuration", "member" : "org.apache.hadoop.conf.Configured.getConf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#getConf():org.apache.hadoop.conf.Configuration", "kind" : "def"}, {"label" : "setConf", "tail" : "(arg0: Configuration): Unit", "member" : "org.apache.hadoop.conf.Configured.setConf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#setConf(x$1:org.apache.hadoop.conf.Configuration):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "HadoopSimpleFeatureDeserializer", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.SimpleFeatureSerialization.HadoopSimpleFeatureDeserializer", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#HadoopSimpleFeatureDeserializerextendsDeserializer[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "class"}, {"label" : "HadoopSimpleFeatureSerializer", "tail" : "", "member" : "org.locationtech.geomesa.jobs.mapreduce.SimpleFeatureSerialization.HadoopSimpleFeatureSerializer", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#HadoopSimpleFeatureSerializerextendsSerializer[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/mapreduce\/SimpleFeatureSerialization.html", "kind" : "class"}], "org.locationtech.geomesa.jobs.interop.mapreduce" : [{"name" : "org.locationtech.geomesa.jobs.interop.mapreduce.GeoMesaOutputFormat", "shortDescription" : "Output format for writing simple features to GeoMesa.", "members_class" : [{"label" : "getOutputCommitter", "tail" : "(context: TaskAttemptContext): OutputCommitter", "member" : "org.locationtech.geomesa.jobs.interop.mapreduce.GeoMesaOutputFormat.getOutputCommitter", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#getOutputCommitter(context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.OutputCommitter", "kind" : "def"}, {"label" : "checkOutputSpecs", "tail" : "(context: JobContext): Unit", "member" : "org.locationtech.geomesa.jobs.interop.mapreduce.GeoMesaOutputFormat.checkOutputSpecs", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#checkOutputSpecs(context:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(context: TaskAttemptContext): RecordWriter[Text, SimpleFeature]", "member" : "org.locationtech.geomesa.jobs.interop.mapreduce.GeoMesaOutputFormat.getRecordWriter", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#getRecordWriter(context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordWriter[org.apache.hadoop.io.Text,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.jobs.interop.mapreduce.GeoMesaOutputFormat#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/jobs\/interop\/mapreduce\/GeoMesaOutputFormat.html", "kind" : "class"}], "org.locationtech.geomesa.jobs" : [{"name" : "org.locationtech.geomesa.jobs.Awaitable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "await", "tail" : "(reporter: StatusCallback): JobResult", "member" : "org.locationtech.geomesa.jobs.Awaitable.await", "link" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html#await(reporter:org.locationtech.geomesa.jobs.package.StatusCallback):org.locationtech.geomesa.jobs.package.JobResult", "kind" : "abstract def"}], "shortDescription" : "Job tracking", "trait" : "org\/locationtech\/geomesa\/jobs\/package$$Awaitable.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator", "shortDescription" : "Common place for setting and getting values out of the mapreduce config", "object" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html", "members_object" : [{"label" : "getSerialization", "tail" : "(conf: Configuration): Seq[(String, Int, SimpleFeatureType)]", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.getSerialization", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#getSerialization(conf:org.apache.hadoop.conf.Configuration):Seq[(String,Int,org.geotools.api.feature.simple.SimpleFeatureType)]", "kind" : "def"}, {"label" : "setSerialization", "tail" : "(conf: Configuration, sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.setSerialization", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#setSerialization(conf:org.apache.hadoop.conf.Configuration,sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "getProjection", "tail" : "(conf: Configuration): Option[QueryReferenceSystems]", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.getProjection", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#getProjection(conf:org.apache.hadoop.conf.Configuration):Option[org.locationtech.geomesa.index.utils.Reprojection.QueryReferenceSystems]", "kind" : "def"}, {"label" : "setProjection", "tail" : "(conf: Configuration, crs: QueryReferenceSystems): Unit", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.setProjection", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#setProjection(conf:org.apache.hadoop.conf.Configuration,crs:org.locationtech.geomesa.index.utils.Reprojection.QueryReferenceSystems):Unit", "kind" : "def"}, {"label" : "getSorting", "tail" : "(conf: Configuration): Option[Seq[(String, Boolean)]]", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.getSorting", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#getSorting(conf:org.apache.hadoop.conf.Configuration):Option[Seq[(String,Boolean)]]", "kind" : "def"}, {"label" : "setSorting", "tail" : "(conf: Configuration, sort: Seq[(String, Boolean)]): Unit", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.setSorting", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#setSorting(conf:org.apache.hadoop.conf.Configuration,sort:Seq[(String,Boolean)]):Unit", "kind" : "def"}, {"label" : "getReducer", "tail" : "(conf: Configuration): Option[FeatureReducer]", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.getReducer", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#getReducer(conf:org.apache.hadoop.conf.Configuration):Option[org.locationtech.geomesa.index.api.QueryPlan.FeatureReducer]", "kind" : "def"}, {"label" : "setReducer", "tail" : "(conf: Configuration, reducer: FeatureReducer): Unit", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.setReducer", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#setReducer(conf:org.apache.hadoop.conf.Configuration,reducer:org.locationtech.geomesa.index.api.QueryPlan.FeatureReducer):Unit", "kind" : "def"}, {"label" : "getResultsToFeatures", "tail" : "(conf: Configuration): ResultsToFeatures[T]", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.getResultsToFeatures", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#getResultsToFeatures[T](conf:org.apache.hadoop.conf.Configuration):org.locationtech.geomesa.index.api.QueryPlan.ResultsToFeatures[T]", "kind" : "def"}, {"label" : "setResultsToFeatures", "tail" : "(conf: Configuration, resultsToFeatures: ResultsToFeatures[_]): Unit", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.setResultsToFeatures", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#setResultsToFeatures(conf:org.apache.hadoop.conf.Configuration,resultsToFeatures:org.locationtech.geomesa.index.api.QueryPlan.ResultsToFeatures[_]):Unit", "kind" : "def"}, {"label" : "getFilter", "tail" : "(conf: Configuration): Option[String]", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.getFilter", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#getFilter(conf:org.apache.hadoop.conf.Configuration):Option[String]", "kind" : "def"}, {"label" : "setFilter", "tail" : "(conf: Configuration, filter: String): Unit", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.setFilter", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#setFilter(conf:org.apache.hadoop.conf.Configuration,filter:String):Unit", "kind" : "def"}, {"label" : "getIndicesOut", "tail" : "(conf: Configuration): Option[Seq[String]]", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.getIndicesOut", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#getIndicesOut(conf:org.apache.hadoop.conf.Configuration):Option[Seq[String]]", "kind" : "def"}, {"label" : "setIndicesOut", "tail" : "(conf: Configuration, indices: Seq[String]): Unit", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.setIndicesOut", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#setIndicesOut(conf:org.apache.hadoop.conf.Configuration,indices:Seq[String]):Unit", "kind" : "def"}, {"label" : "getDataStoreOutParams", "tail" : "(conf: Configuration): Map[String, String]", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.getDataStoreOutParams", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#getDataStoreOutParams(conf:org.apache.hadoop.conf.Configuration):Map[String,String]", "kind" : "def"}, {"label" : "setDataStoreOutParams", "tail" : "(conf: Configuration, params: Map[String, String]): Unit", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.setDataStoreOutParams", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#setDataStoreOutParams(conf:org.apache.hadoop.conf.Configuration,params:Map[String,String]):Unit", "kind" : "def"}, {"label" : "Keys", "tail" : "", "member" : "org.locationtech.geomesa.jobs.GeoMesaConfigurator.Keys", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#Keys", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/GeoMesaConfigurator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.jobs.JobResult", "members_trait" : [{"label" : "success", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.jobs.JobResult.success", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#success:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "merge", "tail" : "(f: ⇒ Option[JobResult]): JobResult", "member" : "org.locationtech.geomesa.jobs.JobResult.merge", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#merge(f:=>Option[org.locationtech.geomesa.jobs.package.JobResult]):org.locationtech.geomesa.jobs.package.JobResult", "kind" : "abstract def"}, {"label" : "message", "tail" : "(): String", "member" : "org.locationtech.geomesa.jobs.JobResult.message", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#message:String", "kind" : "abstract def"}, {"label" : "failed", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.jobs.JobResult.failed", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html#failed:Boolean", "kind" : "abstract def"}], "shortDescription" : "Trait for tracking the result of m\/r jobs", "object" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html", "members_object" : [{"label" : "JobSuccess", "tail" : "", "member" : "org.locationtech.geomesa.jobs.JobResult.JobSuccess", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#JobSuccessextendspackage.JobResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "JobFailure", "tail" : "", "member" : "org.locationtech.geomesa.jobs.JobResult.JobFailure", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#JobFailureextendspackage.JobResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/jobs\/package$$JobResult.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.jobs.JobUtils", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html", "members_object" : [{"label" : "setLibJars", "tail" : "(conf: Configuration, libJars: Seq[String], searchPath: Iterator[() ⇒ Seq[File]]): Unit", "member" : "org.locationtech.geomesa.jobs.JobUtils.setLibJars", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#setLibJars(conf:org.apache.hadoop.conf.Configuration,libJars:Seq[String],searchPath:Iterator[()=>Seq[java.io.File]]):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/JobUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.jobs.StatusCallback", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(prefix: String, progress: Float, counters: Seq[(String, Long)], done: Boolean): Unit", "member" : "org.locationtech.geomesa.jobs.StatusCallback.apply", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#apply(prefix:String,progress:Float,counters:Seq[(String,Long)],done:Boolean):Unit", "kind" : "abstract def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.jobs.StatusCallback.reset", "link" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html#reset():Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/locationtech\/geomesa\/jobs\/package$$StatusCallback.html", "kind" : "trait"}], "org" : [], "org.locationtech.geomesa.jobs.interop" : []};