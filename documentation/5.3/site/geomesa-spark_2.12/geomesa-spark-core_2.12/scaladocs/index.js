Index.PACKAGES = {"org.locationtech" : [], "org.locationtech.geomesa" : [], "org.apache.spark.geomesa" : [{"name" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint", "shortDescription" : "", "object" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html", "members_object" : [{"label" : "optionSchema", "tail" : "(t: Option[(String, String)]): Option[SimpleFeatureType]", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.optionSchema", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#optionSchema(t:Option[(String,String)]):Option[org.geotools.api.feature.simple.SimpleFeatureType]", "kind" : "implicit def"}, {"label" : "decodeSchema", "tail" : "(t: (String, String)): SimpleFeatureType", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.decodeSchema", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#decodeSchema(t:(String,String)):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "implicit def"}, {"label" : "encodeSchema", "tail" : "(t: SimpleFeatureType): (String, String)", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.encodeSchema", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#encodeSchema(t:org.geotools.api.feature.simple.SimpleFeatureType):(String,String)", "kind" : "implicit def"}, {"label" : "NoOpKryoClient", "tail" : "", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.NoOpKryoClient", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#NoOpKryoClient", "kind" : "object"}, {"label" : "ExecutorKryoClient", "tail" : "", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.ExecutorKryoClient", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#ExecutorKryoClient", "kind" : "object"}, {"label" : "KryoClient", "tail" : "", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.KryoClient", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#KryoClientextendsAnyRef", "kind" : "trait"}, {"label" : "KryoPutTypeMessage", "tail" : "", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.KryoPutTypeMessage", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#KryoPutTypeMessageextendsGeoMesaSparkKryoRegistratorEndpoint.KryoMessage[Int]withSerializable", "kind" : "class"}, {"label" : "KryoGetTypesMessage", "tail" : "", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.KryoGetTypesMessage", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#KryoGetTypesMessageextendsGeoMesaSparkKryoRegistratorEndpoint.KryoMessage[Seq[(String,String)]]withSerializable", "kind" : "class"}, {"label" : "KryoGetTypeMessage", "tail" : "", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.KryoGetTypeMessage", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#KryoGetTypeMessageextendsGeoMesaSparkKryoRegistratorEndpoint.KryoMessage[Option[(String,String)]]withSerializable", "kind" : "class"}, {"label" : "KryoMessage", "tail" : "", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.KryoMessage", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#KryoMessage[R]extendsAnyRef", "kind" : "trait"}, {"label" : "KryoEndpoint", "tail" : "", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.KryoEndpoint", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#KryoEndpointextendsRpcEndpoint", "kind" : "class"}, {"label" : "init", "tail" : "(): Unit", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.init", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#init():Unit", "kind" : "def"}, {"label" : "Client", "tail" : ": KryoClient", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.Client", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#Client:org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.KryoClient", "kind" : "lazy val"}, {"label" : "EndpointName", "tail" : ": String", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.EndpointName", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#EndpointName:String", "kind" : "val"}, {"label" : "EnablePropertyKey", "tail" : ": String", "member" : "org.apache.spark.geomesa.GeoMesaSparkKryoRegistratorEndpoint.EnablePropertyKey", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#EnablePropertyKey:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/geomesa\/GeoMesaSparkKryoRegistratorEndpoint$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.locationtech.geomesa.spark" : [{"name" : "org.locationtech.geomesa.spark.DataStoreConnector", "shortDescription" : "Caches accessing of DataStores.", "object" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html", "members_object" : [{"label" : "apply", "tail" : "(params: Map[String, String]): T", "member" : "org.locationtech.geomesa.spark.DataStoreConnector.apply", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#apply[T<:org.geotools.api.data.DataStore](params:Map[String,String]):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/DataStoreConnector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.GeoMesaSpark", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html", "members_object" : [{"label" : "apply", "tail" : "(params: Map[String, _ <: Serializable]): SpatialRDDProvider", "member" : "org.locationtech.geomesa.spark.GeoMesaSpark.apply", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#apply(params:java.util.Map[String,_<:java.io.Serializable]):org.locationtech.geomesa.spark.SpatialRDDProvider", "kind" : "def"}, {"label" : "providers", "tail" : ": ServiceLoader[SpatialRDDProvider]", "member" : "org.locationtech.geomesa.spark.GeoMesaSpark.providers", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#providers:java.util.ServiceLoader[org.locationtech.geomesa.spark.SpatialRDDProvider]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSpark$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html", "members_class" : [{"label" : "registerSedonaClasses", "tail" : "(kryo: Kryo): Unit", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.registerSedonaClasses", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#registerSedonaClasses(kryo:com.esotericsoftware.kryo.Kryo):Unit", "kind" : "def"}, {"label" : "registerSimpleFeatureClasses", "tail" : "(kryo: Kryo): Unit", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.registerSimpleFeatureClasses", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#registerSimpleFeatureClasses(kryo:com.esotericsoftware.kryo.Kryo):Unit", "kind" : "def"}, {"label" : "registerClasses", "tail" : "(kryo: Kryo): Unit", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.registerClasses", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#registerClasses(kryo:com.esotericsoftware.kryo.Kryo):Unit", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "systemProperties", "tail" : "(schemas: SimpleFeatureType*): Seq[(String, String)]", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.systemProperties", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#systemProperties(schemas:org.geotools.api.feature.simple.SimpleFeatureType*):Seq[(String,String)]", "kind" : "def"}, {"label" : "register", "tail" : "(sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.register", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#register(sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "register", "tail" : "(sfts: Seq[SimpleFeatureType]): Unit", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.register", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#register(sfts:Seq[org.geotools.api.feature.simple.SimpleFeatureType]):Unit", "kind" : "def"}, {"label" : "register", "tail" : "(ds: DataStore): Unit", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.register", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#register(ds:org.geotools.api.data.DataStore):Unit", "kind" : "def"}, {"label" : "getTypes", "tail" : "(): Seq[SimpleFeatureType]", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.getTypes", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#getTypes:Seq[org.geotools.api.feature.simple.SimpleFeatureType]", "kind" : "def"}, {"label" : "getType", "tail" : "(id: Int): SimpleFeatureType", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.getType", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#getType(id:Int):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "putTypes", "tail" : "(types: Seq[SimpleFeatureType]): Seq[Int]", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.putTypes", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#putTypes(types:Seq[org.geotools.api.feature.simple.SimpleFeatureType]):Seq[Int]", "kind" : "def"}, {"label" : "putType", "tail" : "(sft: SimpleFeatureType): Int", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.putType", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#putType(sft:org.geotools.api.feature.simple.SimpleFeatureType):Int", "kind" : "def"}, {"label" : "identifier", "tail" : "(sft: SimpleFeatureType): Int", "member" : "org.locationtech.geomesa.spark.GeoMesaSparkKryoRegistrator.identifier", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#identifier(sft:org.geotools.api.feature.simple.SimpleFeatureType):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/GeoMesaSparkKryoRegistrator.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.spark.Schema", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "schema", "tail" : "(): SimpleFeatureType", "member" : "org.locationtech.geomesa.spark.Schema.schema", "link" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html#schema:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/locationtech\/geomesa\/spark\/package$$Schema.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.spark.SpatialRDD", "shortDescription" : "RDD with a known schema", "object" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html", "members_class" : [{"label" : "getPartitions", "tail" : "(): Array[Partition]", "member" : "org.locationtech.geomesa.spark.SpatialRDD.getPartitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#getPartitions:Array[org.apache.spark.Partition]", "kind" : "def"}, {"label" : "compute", "tail" : "(split: Partition, context: TaskContext): Iterator[SimpleFeature]", "member" : "org.locationtech.geomesa.spark.SpatialRDD.compute", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#compute(split:org.apache.spark.Partition,context:org.apache.spark.TaskContext):Iterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "schema", "tail" : ": SimpleFeatureType", "member" : "org.locationtech.geomesa.spark.SpatialRDD.schema", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#schema:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "lazy val"}, {"member" : "org.locationtech.geomesa.spark.SpatialRDD#<init>", "error" : "unsupported entity"}, {"label" : "getOutputDeterministicLevel", "tail" : "(): apache.spark.rdd.DeterministicLevel.Value", "member" : "org.apache.spark.rdd.RDD.getOutputDeterministicLevel", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#getOutputDeterministicLevel:org.apache.spark.rdd.DeterministicLevel.Value", "kind" : "def"}, {"label" : "isBarrier_", "tail" : ": Boolean", "member" : "org.apache.spark.rdd.RDD.isBarrier_", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#isBarrier_:Boolean", "kind" : "lazy val"}, {"label" : "toJavaRDD", "tail" : "(): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.toJavaRDD", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#toJavaRDD():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.rdd.RDD.toString", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#toString():String", "kind" : "def"}, {"label" : "toDebugString", "tail" : "(): String", "member" : "org.apache.spark.rdd.RDD.toDebugString", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#toDebugString:String", "kind" : "def"}, {"label" : "clearDependencies", "tail" : "(): Unit", "member" : "org.apache.spark.rdd.RDD.clearDependencies", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#clearDependencies():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): SparkContext", "member" : "org.apache.spark.rdd.RDD.context", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#context:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "parent", "tail" : "(j: Int)(arg0: ClassTag[U]): RDD[U]", "member" : "org.apache.spark.rdd.RDD.parent", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#parent[U](j:Int)(implicitevidence$37:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[U]", "kind" : "def"}, {"label" : "firstParent", "tail" : "(arg0: ClassTag[U]): RDD[U]", "member" : "org.apache.spark.rdd.RDD.firstParent", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#firstParent[U](implicitevidence$36:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[U]", "kind" : "def"}, {"label" : "getResourceProfile", "tail" : "(): ResourceProfile", "member" : "org.apache.spark.rdd.RDD.getResourceProfile", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#getResourceProfile():org.apache.spark.resource.ResourceProfile", "kind" : "def"}, {"label" : "withResources", "tail" : "(rp: ResourceProfile): SpatialRDD.this.type", "member" : "org.apache.spark.rdd.RDD.withResources", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#withResources(rp:org.apache.spark.resource.ResourceProfile):RDD.this.type", "kind" : "def"}, {"label" : "barrier", "tail" : "(): RDDBarrier[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.barrier", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#barrier():org.apache.spark.rdd.RDDBarrier[T]", "kind" : "def"}, {"label" : "cleanShuffleDependencies", "tail" : "(blocking: Boolean): Unit", "member" : "org.apache.spark.rdd.RDD.cleanShuffleDependencies", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#cleanShuffleDependencies(blocking:Boolean):Unit", "kind" : "def"}, {"label" : "getCheckpointFile", "tail" : "(): Option[String]", "member" : "org.apache.spark.rdd.RDD.getCheckpointFile", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#getCheckpointFile:Option[String]", "kind" : "def"}, {"label" : "isCheckpointed", "tail" : "(): Boolean", "member" : "org.apache.spark.rdd.RDD.isCheckpointed", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#isCheckpointed:Boolean", "kind" : "def"}, {"label" : "localCheckpoint", "tail" : "(): SpatialRDD.this.type", "member" : "org.apache.spark.rdd.RDD.localCheckpoint", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#localCheckpoint():RDD.this.type", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "org.apache.spark.rdd.RDD.checkpoint", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#checkpoint():Unit", "kind" : "def"}, {"label" : "keyBy", "tail" : "(f: (SimpleFeature) ⇒ K): RDD[(K, SimpleFeature)]", "member" : "org.apache.spark.rdd.RDD.keyBy", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#keyBy[K](f:T=>K):org.apache.spark.rdd.RDD[(K,T)]", "kind" : "def"}, {"label" : "saveAsObjectFile", "tail" : "(path: String): Unit", "member" : "org.apache.spark.rdd.RDD.saveAsObjectFile", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#saveAsObjectFile(path:String):Unit", "kind" : "def"}, {"label" : "saveAsTextFile", "tail" : "(path: String, codec: Class[_ <: CompressionCodec]): Unit", "member" : "org.apache.spark.rdd.RDD.saveAsTextFile", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#saveAsTextFile(path:String,codec:Class[_<:org.apache.hadoop.io.compress.CompressionCodec]):Unit", "kind" : "def"}, {"label" : "saveAsTextFile", "tail" : "(path: String): Unit", "member" : "org.apache.spark.rdd.RDD.saveAsTextFile", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#saveAsTextFile(path:String):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.apache.spark.rdd.RDD.isEmpty", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "min", "tail" : "()(ord: Ordering[SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.rdd.RDD.min", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#min()(implicitord:Ordering[T]):T", "kind" : "def"}, {"label" : "max", "tail" : "()(ord: Ordering[SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.rdd.RDD.max", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#max()(implicitord:Ordering[T]):T", "kind" : "def"}, {"label" : "takeOrdered", "tail" : "(num: Int)(ord: Ordering[SimpleFeature]): Array[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.takeOrdered", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#takeOrdered(num:Int)(implicitord:Ordering[T]):Array[T]", "kind" : "def"}, {"label" : "top", "tail" : "(num: Int)(ord: Ordering[SimpleFeature]): Array[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.top", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#top(num:Int)(implicitord:Ordering[T]):Array[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): SimpleFeature", "member" : "org.apache.spark.rdd.RDD.first", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#first():T", "kind" : "def"}, {"label" : "take", "tail" : "(num: Int): Array[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.take", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#take(num:Int):Array[T]", "kind" : "def"}, {"label" : "zipWithUniqueId", "tail" : "(): RDD[(SimpleFeature, Long)]", "member" : "org.apache.spark.rdd.RDD.zipWithUniqueId", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zipWithUniqueId():org.apache.spark.rdd.RDD[(T,Long)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): RDD[(SimpleFeature, Long)]", "member" : "org.apache.spark.rdd.RDD.zipWithIndex", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zipWithIndex():org.apache.spark.rdd.RDD[(T,Long)]", "kind" : "def"}, {"label" : "countApproxDistinct", "tail" : "(relativeSD: Double): Long", "member" : "org.apache.spark.rdd.RDD.countApproxDistinct", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#countApproxDistinct(relativeSD:Double):Long", "kind" : "def"}, {"label" : "countApproxDistinct", "tail" : "(p: Int, sp: Int): Long", "member" : "org.apache.spark.rdd.RDD.countApproxDistinct", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#countApproxDistinct(p:Int,sp:Int):Long", "kind" : "def"}, {"label" : "countByValueApprox", "tail" : "(timeout: Long, confidence: Double)(ord: Ordering[SimpleFeature]): PartialResult[Map[SimpleFeature, BoundedDouble]]", "member" : "org.apache.spark.rdd.RDD.countByValueApprox", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#countByValueApprox(timeout:Long,confidence:Double)(implicitord:Ordering[T]):org.apache.spark.partial.PartialResult[scala.collection.Map[T,org.apache.spark.partial.BoundedDouble]]", "kind" : "def"}, {"label" : "countByValue", "tail" : "()(ord: Ordering[SimpleFeature]): Map[SimpleFeature, Long]", "member" : "org.apache.spark.rdd.RDD.countByValue", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#countByValue()(implicitord:Ordering[T]):scala.collection.Map[T,Long]", "kind" : "def"}, {"label" : "countApprox", "tail" : "(timeout: Long, confidence: Double): PartialResult[BoundedDouble]", "member" : "org.apache.spark.rdd.RDD.countApprox", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#countApprox(timeout:Long,confidence:Double):org.apache.spark.partial.PartialResult[org.apache.spark.partial.BoundedDouble]", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "org.apache.spark.rdd.RDD.count", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#count():Long", "kind" : "def"}, {"label" : "treeAggregate", "tail" : "(zeroValue: U, seqOp: (U, SimpleFeature) ⇒ U, combOp: (U, U) ⇒ U, depth: Int, finalAggregateOnExecutor: Boolean)(arg0: ClassTag[U]): U", "member" : "org.apache.spark.rdd.RDD.treeAggregate", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#treeAggregate[U](zeroValue:U,seqOp:(U,T)=>U,combOp:(U,U)=>U,depth:Int,finalAggregateOnExecutor:Boolean)(implicitevidence$35:scala.reflect.ClassTag[U]):U", "kind" : "def"}, {"label" : "treeAggregate", "tail" : "(zeroValue: U)(seqOp: (U, SimpleFeature) ⇒ U, combOp: (U, U) ⇒ U, depth: Int)(arg0: ClassTag[U]): U", "member" : "org.apache.spark.rdd.RDD.treeAggregate", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#treeAggregate[U](zeroValue:U)(seqOp:(U,T)=>U,combOp:(U,U)=>U,depth:Int)(implicitevidence$34:scala.reflect.ClassTag[U]):U", "kind" : "def"}, {"label" : "aggregate", "tail" : "(zeroValue: U)(seqOp: (U, SimpleFeature) ⇒ U, combOp: (U, U) ⇒ U)(arg0: ClassTag[U]): U", "member" : "org.apache.spark.rdd.RDD.aggregate", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#aggregate[U](zeroValue:U)(seqOp:(U,T)=>U,combOp:(U,U)=>U)(implicitevidence$33:scala.reflect.ClassTag[U]):U", "kind" : "def"}, {"label" : "fold", "tail" : "(zeroValue: SimpleFeature)(op: (SimpleFeature, SimpleFeature) ⇒ SimpleFeature): SimpleFeature", "member" : "org.apache.spark.rdd.RDD.fold", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#fold(zeroValue:T)(op:(T,T)=>T):T", "kind" : "def"}, {"label" : "treeReduce", "tail" : "(f: (SimpleFeature, SimpleFeature) ⇒ SimpleFeature, depth: Int): SimpleFeature", "member" : "org.apache.spark.rdd.RDD.treeReduce", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#treeReduce(f:(T,T)=>T,depth:Int):T", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: (SimpleFeature, SimpleFeature) ⇒ SimpleFeature): SimpleFeature", "member" : "org.apache.spark.rdd.RDD.reduce", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#reduce(f:(T,T)=>T):T", "kind" : "def"}, {"label" : "subtract", "tail" : "(other: RDD[SimpleFeature], p: Partitioner)(ord: Ordering[SimpleFeature]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.subtract", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#subtract(other:org.apache.spark.rdd.RDD[T],p:org.apache.spark.Partitioner)(implicitord:Ordering[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "subtract", "tail" : "(other: RDD[SimpleFeature], numPartitions: Int): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.subtract", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#subtract(other:org.apache.spark.rdd.RDD[T],numPartitions:Int):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "subtract", "tail" : "(other: RDD[SimpleFeature]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.subtract", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#subtract(other:org.apache.spark.rdd.RDD[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[SimpleFeature, U])(arg0: ClassTag[U]): RDD[U]", "member" : "org.apache.spark.rdd.RDD.collect", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#collect[U](f:PartialFunction[T,U])(implicitevidence$32:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[U]", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): Iterator[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.toLocalIterator", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#toLocalIterator:Iterator[T]", "kind" : "def"}, {"label" : "collect", "tail" : "(): Array[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.collect", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#collect():Array[T]", "kind" : "def"}, {"label" : "foreachPartition", "tail" : "(f: (Iterator[SimpleFeature]) ⇒ Unit): Unit", "member" : "org.apache.spark.rdd.RDD.foreachPartition", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#foreachPartition(f:Iterator[T]=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SimpleFeature) ⇒ Unit): Unit", "member" : "org.apache.spark.rdd.RDD.foreach", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#foreach(f:T=>Unit):Unit", "kind" : "def"}, {"label" : "zipPartitions", "tail" : "(rdd2: RDD[B], rdd3: RDD[C], rdd4: RDD[D])(f: (Iterator[SimpleFeature], Iterator[B], Iterator[C], Iterator[D]) ⇒ Iterator[V])(arg0: ClassTag[B], arg1: ClassTag[C], arg2: ClassTag[D], arg3: ClassTag[V]): RDD[V]", "member" : "org.apache.spark.rdd.RDD.zipPartitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zipPartitions[B,C,D,V](rdd2:org.apache.spark.rdd.RDD[B],rdd3:org.apache.spark.rdd.RDD[C],rdd4:org.apache.spark.rdd.RDD[D])(f:(Iterator[T],Iterator[B],Iterator[C],Iterator[D])=>Iterator[V])(implicitevidence$28:scala.reflect.ClassTag[B],implicitevidence$29:scala.reflect.ClassTag[C],implicitevidence$30:scala.reflect.ClassTag[D],implicitevidence$31:scala.reflect.ClassTag[V]):org.apache.spark.rdd.RDD[V]", "kind" : "def"}, {"label" : "zipPartitions", "tail" : "(rdd2: RDD[B], rdd3: RDD[C], rdd4: RDD[D], preservesPartitioning: Boolean)(f: (Iterator[SimpleFeature], Iterator[B], Iterator[C], Iterator[D]) ⇒ Iterator[V])(arg0: ClassTag[B], arg1: ClassTag[C], arg2: ClassTag[D], arg3: ClassTag[V]): RDD[V]", "member" : "org.apache.spark.rdd.RDD.zipPartitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zipPartitions[B,C,D,V](rdd2:org.apache.spark.rdd.RDD[B],rdd3:org.apache.spark.rdd.RDD[C],rdd4:org.apache.spark.rdd.RDD[D],preservesPartitioning:Boolean)(f:(Iterator[T],Iterator[B],Iterator[C],Iterator[D])=>Iterator[V])(implicitevidence$24:scala.reflect.ClassTag[B],implicitevidence$25:scala.reflect.ClassTag[C],implicitevidence$26:scala.reflect.ClassTag[D],implicitevidence$27:scala.reflect.ClassTag[V]):org.apache.spark.rdd.RDD[V]", "kind" : "def"}, {"label" : "zipPartitions", "tail" : "(rdd2: RDD[B], rdd3: RDD[C])(f: (Iterator[SimpleFeature], Iterator[B], Iterator[C]) ⇒ Iterator[V])(arg0: ClassTag[B], arg1: ClassTag[C], arg2: ClassTag[V]): RDD[V]", "member" : "org.apache.spark.rdd.RDD.zipPartitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zipPartitions[B,C,V](rdd2:org.apache.spark.rdd.RDD[B],rdd3:org.apache.spark.rdd.RDD[C])(f:(Iterator[T],Iterator[B],Iterator[C])=>Iterator[V])(implicitevidence$21:scala.reflect.ClassTag[B],implicitevidence$22:scala.reflect.ClassTag[C],implicitevidence$23:scala.reflect.ClassTag[V]):org.apache.spark.rdd.RDD[V]", "kind" : "def"}, {"label" : "zipPartitions", "tail" : "(rdd2: RDD[B], rdd3: RDD[C], preservesPartitioning: Boolean)(f: (Iterator[SimpleFeature], Iterator[B], Iterator[C]) ⇒ Iterator[V])(arg0: ClassTag[B], arg1: ClassTag[C], arg2: ClassTag[V]): RDD[V]", "member" : "org.apache.spark.rdd.RDD.zipPartitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zipPartitions[B,C,V](rdd2:org.apache.spark.rdd.RDD[B],rdd3:org.apache.spark.rdd.RDD[C],preservesPartitioning:Boolean)(f:(Iterator[T],Iterator[B],Iterator[C])=>Iterator[V])(implicitevidence$18:scala.reflect.ClassTag[B],implicitevidence$19:scala.reflect.ClassTag[C],implicitevidence$20:scala.reflect.ClassTag[V]):org.apache.spark.rdd.RDD[V]", "kind" : "def"}, {"label" : "zipPartitions", "tail" : "(rdd2: RDD[B])(f: (Iterator[SimpleFeature], Iterator[B]) ⇒ Iterator[V])(arg0: ClassTag[B], arg1: ClassTag[V]): RDD[V]", "member" : "org.apache.spark.rdd.RDD.zipPartitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zipPartitions[B,V](rdd2:org.apache.spark.rdd.RDD[B])(f:(Iterator[T],Iterator[B])=>Iterator[V])(implicitevidence$16:scala.reflect.ClassTag[B],implicitevidence$17:scala.reflect.ClassTag[V]):org.apache.spark.rdd.RDD[V]", "kind" : "def"}, {"label" : "zipPartitions", "tail" : "(rdd2: RDD[B], preservesPartitioning: Boolean)(f: (Iterator[SimpleFeature], Iterator[B]) ⇒ Iterator[V])(arg0: ClassTag[B], arg1: ClassTag[V]): RDD[V]", "member" : "org.apache.spark.rdd.RDD.zipPartitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zipPartitions[B,V](rdd2:org.apache.spark.rdd.RDD[B],preservesPartitioning:Boolean)(f:(Iterator[T],Iterator[B])=>Iterator[V])(implicitevidence$14:scala.reflect.ClassTag[B],implicitevidence$15:scala.reflect.ClassTag[V]):org.apache.spark.rdd.RDD[V]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: RDD[U])(arg0: ClassTag[U]): RDD[(SimpleFeature, U)]", "member" : "org.apache.spark.rdd.RDD.zip", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zip[U](other:org.apache.spark.rdd.RDD[U])(implicitevidence$13:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[(T,U)]", "kind" : "def"}, {"label" : "zipPartitionsWithEvaluator", "tail" : "(rdd2: RDD[SimpleFeature], evaluatorFactory: PartitionEvaluatorFactory[SimpleFeature, U])(arg0: ClassTag[U]): RDD[U]", "member" : "org.apache.spark.rdd.RDD.zipPartitionsWithEvaluator", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#zipPartitionsWithEvaluator[U](rdd2:org.apache.spark.rdd.RDD[T],evaluatorFactory:org.apache.spark.PartitionEvaluatorFactory[T,U])(implicitevidence$11:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[U]", "kind" : "def"}, {"label" : "mapPartitionsWithEvaluator", "tail" : "(evaluatorFactory: PartitionEvaluatorFactory[SimpleFeature, U])(arg0: ClassTag[U]): RDD[U]", "member" : "org.apache.spark.rdd.RDD.mapPartitionsWithEvaluator", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#mapPartitionsWithEvaluator[U](evaluatorFactory:org.apache.spark.PartitionEvaluatorFactory[T,U])(implicitevidence$10:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[U]", "kind" : "def"}, {"label" : "mapPartitionsWithIndex", "tail" : "(f: (Int, Iterator[SimpleFeature]) ⇒ Iterator[U], preservesPartitioning: Boolean)(arg0: ClassTag[U]): RDD[U]", "member" : "org.apache.spark.rdd.RDD.mapPartitionsWithIndex", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#mapPartitionsWithIndex[U](f:(Int,Iterator[T])=>Iterator[U],preservesPartitioning:Boolean)(implicitevidence$9:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[U]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: (Iterator[SimpleFeature]) ⇒ Iterator[U], preservesPartitioning: Boolean)(arg0: ClassTag[U]): RDD[U]", "member" : "org.apache.spark.rdd.RDD.mapPartitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#mapPartitions[U](f:Iterator[T]=>Iterator[U],preservesPartitioning:Boolean)(implicitevidence$6:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[U]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: Seq[String], env: Map[String, String], printPipeContext: ((String) ⇒ Unit) ⇒ Unit, printRDDElement: (SimpleFeature, (String) ⇒ Unit) ⇒ Unit, separateWorkingDir: Boolean, bufferSize: Int, encoding: String): RDD[String]", "member" : "org.apache.spark.rdd.RDD.pipe", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#pipe(command:Seq[String],env:scala.collection.Map[String,String],printPipeContext:(String=>Unit)=>Unit,printRDDElement:(T,String=>Unit)=>Unit,separateWorkingDir:Boolean,bufferSize:Int,encoding:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: String, env: Map[String, String]): RDD[String]", "member" : "org.apache.spark.rdd.RDD.pipe", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#pipe(command:String,env:scala.collection.Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: String): RDD[String]", "member" : "org.apache.spark.rdd.RDD.pipe", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#pipe(command:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (SimpleFeature) ⇒ K, p: Partitioner)(kt: ClassTag[K], ord: Ordering[K]): RDD[(K, Iterable[SimpleFeature])]", "member" : "org.apache.spark.rdd.RDD.groupBy", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#groupBy[K](f:T=>K,p:org.apache.spark.Partitioner)(implicitkt:scala.reflect.ClassTag[K],implicitord:Ordering[K]):org.apache.spark.rdd.RDD[(K,Iterable[T])]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (SimpleFeature) ⇒ K, numPartitions: Int)(kt: ClassTag[K]): RDD[(K, Iterable[SimpleFeature])]", "member" : "org.apache.spark.rdd.RDD.groupBy", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#groupBy[K](f:T=>K,numPartitions:Int)(implicitkt:scala.reflect.ClassTag[K]):org.apache.spark.rdd.RDD[(K,Iterable[T])]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (SimpleFeature) ⇒ K)(kt: ClassTag[K]): RDD[(K, Iterable[SimpleFeature])]", "member" : "org.apache.spark.rdd.RDD.groupBy", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#groupBy[K](f:T=>K)(implicitkt:scala.reflect.ClassTag[K]):org.apache.spark.rdd.RDD[(K,Iterable[T])]", "kind" : "def"}, {"label" : "cartesian", "tail" : "(other: RDD[U])(arg0: ClassTag[U]): RDD[(SimpleFeature, U)]", "member" : "org.apache.spark.rdd.RDD.cartesian", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#cartesian[U](other:org.apache.spark.rdd.RDD[U])(implicitevidence$5:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[(T,U)]", "kind" : "def"}, {"label" : "glom", "tail" : "(): RDD[Array[SimpleFeature]]", "member" : "org.apache.spark.rdd.RDD.glom", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#glom():org.apache.spark.rdd.RDD[Array[T]]", "kind" : "def"}, {"label" : "intersection", "tail" : "(other: RDD[SimpleFeature], numPartitions: Int): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.intersection", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#intersection(other:org.apache.spark.rdd.RDD[T],numPartitions:Int):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "intersection", "tail" : "(other: RDD[SimpleFeature], partitioner: Partitioner)(ord: Ordering[SimpleFeature]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.intersection", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#intersection(other:org.apache.spark.rdd.RDD[T],partitioner:org.apache.spark.Partitioner)(implicitord:Ordering[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "intersection", "tail" : "(other: RDD[SimpleFeature]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.intersection", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#intersection(other:org.apache.spark.rdd.RDD[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (SimpleFeature) ⇒ K, ascending: Boolean, numPartitions: Int)(ord: Ordering[K], ctag: ClassTag[K]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.sortBy", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#sortBy[K](f:T=>K,ascending:Boolean,numPartitions:Int)(implicitord:Ordering[K],implicitctag:scala.reflect.ClassTag[K]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "++", "tail" : "(other: RDD[SimpleFeature]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.++", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#++(other:org.apache.spark.rdd.RDD[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "union", "tail" : "(other: RDD[SimpleFeature]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.union", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#union(other:org.apache.spark.rdd.RDD[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "takeSample", "tail" : "(withReplacement: Boolean, num: Int, seed: Long): Array[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.takeSample", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#takeSample(withReplacement:Boolean,num:Int,seed:Long):Array[T]", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(weights: Array[Double], seed: Long): Array[RDD[SimpleFeature]]", "member" : "org.apache.spark.rdd.RDD.randomSplit", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#randomSplit(weights:Array[Double],seed:Long):Array[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "sample", "tail" : "(withReplacement: Boolean, fraction: Double, seed: Long): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.sample", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#sample(withReplacement:Boolean,fraction:Double,seed:Long):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "coalesce", "tail" : "(numPartitions: Int, shuffle: Boolean, partitionCoalescer: Option[PartitionCoalescer])(ord: Ordering[SimpleFeature]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.coalesce", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#coalesce(numPartitions:Int,shuffle:Boolean,partitionCoalescer:Option[org.apache.spark.rdd.PartitionCoalescer])(implicitord:Ordering[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int)(ord: Ordering[SimpleFeature]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.repartition", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#repartition(numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.distinct", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#distinct():org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(numPartitions: Int)(ord: Ordering[SimpleFeature]): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.distinct", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#distinct(numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (SimpleFeature) ⇒ Boolean): RDD[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.filter", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#filter(f:T=>Boolean):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SimpleFeature) ⇒ TraversableOnce[U])(arg0: ClassTag[U]): RDD[U]", "member" : "org.apache.spark.rdd.RDD.flatMap", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#flatMap[U](f:T=>TraversableOnce[U])(implicitevidence$4:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SimpleFeature) ⇒ U)(arg0: ClassTag[U]): RDD[U]", "member" : "org.apache.spark.rdd.RDD.map", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#map[U](f:T=>U)(implicitevidence$3:scala.reflect.ClassTag[U]):org.apache.spark.rdd.RDD[U]", "kind" : "def"}, {"label" : "iterator", "tail" : "(split: Partition, context: TaskContext): Iterator[SimpleFeature]", "member" : "org.apache.spark.rdd.RDD.iterator", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#iterator(split:org.apache.spark.Partition,context:org.apache.spark.TaskContext):Iterator[T]", "kind" : "final def"}, {"label" : "preferredLocations", "tail" : "(split: Partition): Seq[String]", "member" : "org.apache.spark.rdd.RDD.preferredLocations", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#preferredLocations(split:org.apache.spark.Partition):Seq[String]", "kind" : "final def"}, {"label" : "getNumPartitions", "tail" : "(): Int", "member" : "org.apache.spark.rdd.RDD.getNumPartitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#getNumPartitions:Int", "kind" : "final def"}, {"label" : "partitions", "tail" : "(): Array[Partition]", "member" : "org.apache.spark.rdd.RDD.partitions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#partitions:Array[org.apache.spark.Partition]", "kind" : "final def"}, {"label" : "dependencies", "tail" : "(): Seq[Dependency[_]]", "member" : "org.apache.spark.rdd.RDD.dependencies", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#dependencies:Seq[org.apache.spark.Dependency[_]]", "kind" : "final def"}, {"label" : "getStorageLevel", "tail" : "(): StorageLevel", "member" : "org.apache.spark.rdd.RDD.getStorageLevel", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#getStorageLevel:org.apache.spark.storage.StorageLevel", "kind" : "def"}, {"label" : "unpersist", "tail" : "(blocking: Boolean): SpatialRDD.this.type", "member" : "org.apache.spark.rdd.RDD.unpersist", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#unpersist(blocking:Boolean):RDD.this.type", "kind" : "def"}, {"label" : "cache", "tail" : "(): SpatialRDD.this.type", "member" : "org.apache.spark.rdd.RDD.cache", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#cache():RDD.this.type", "kind" : "def"}, {"label" : "persist", "tail" : "(): SpatialRDD.this.type", "member" : "org.apache.spark.rdd.RDD.persist", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#persist():RDD.this.type", "kind" : "def"}, {"label" : "persist", "tail" : "(newLevel: StorageLevel): SpatialRDD.this.type", "member" : "org.apache.spark.rdd.RDD.persist", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#persist(newLevel:org.apache.spark.storage.StorageLevel):RDD.this.type", "kind" : "def"}, {"label" : "setName", "tail" : "(_name: String): SpatialRDD.this.type", "member" : "org.apache.spark.rdd.RDD.setName", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#setName(_name:String):RDD.this.type", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "org.apache.spark.rdd.RDD.name", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#name:String", "kind" : "var"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.rdd.RDD.id", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#id:Int", "kind" : "val"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.rdd.RDD.sparkContext", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "partitioner", "tail" : ": Option[Partitioner]", "member" : "org.apache.spark.rdd.RDD.partitioner", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#partitioner:Option[org.apache.spark.Partitioner]", "kind" : "val"}, {"label" : "getPreferredLocations", "tail" : "(split: Partition): Seq[String]", "member" : "org.apache.spark.rdd.RDD.getPreferredLocations", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#getPreferredLocations(split:org.apache.spark.Partition):Seq[String]", "kind" : "def"}, {"label" : "getDependencies", "tail" : "(): Seq[Dependency[_]]", "member" : "org.apache.spark.rdd.RDD.getDependencies", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#getDependencies:Seq[org.apache.spark.Dependency[_]]", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "SpatialRDDConversions", "tail" : "", "member" : "org.locationtech.geomesa.spark.SpatialRDD.SpatialRDDConversions", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#SpatialRDDConversionsextendsAnyRef", "kind" : "implicit class"}, {"label" : "toGeoJSONString", "tail" : "(in: RDD[SimpleFeature] with Schema): RDD[String]", "member" : "org.locationtech.geomesa.spark.SpatialRDD.toGeoJSONString", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#toGeoJSONString(in:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]withorg.locationtech.geomesa.spark.Schema):org.apache.spark.rdd.RDD[String]", "kind" : "implicit def"}, {"label" : "toKeyValueMap", "tail" : "(in: RDD[SimpleFeature] with Schema): RDD[Map[String, AnyRef]]", "member" : "org.locationtech.geomesa.spark.SpatialRDD.toKeyValueMap", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#toKeyValueMap(in:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]withorg.locationtech.geomesa.spark.Schema):org.apache.spark.rdd.RDD[Map[String,AnyRef]]", "kind" : "implicit def"}, {"label" : "toKeyValueSeq", "tail" : "(in: RDD[SimpleFeature] with Schema): RDD[Seq[(String, AnyRef)]]", "member" : "org.locationtech.geomesa.spark.SpatialRDD.toKeyValueSeq", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#toKeyValueSeq(in:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]withorg.locationtech.geomesa.spark.Schema):org.apache.spark.rdd.RDD[Seq[(String,AnyRef)]]", "kind" : "implicit def"}, {"label" : "toValueSeq", "tail" : "(in: RDD[SimpleFeature] with Schema): RDD[Seq[AnyRef]]", "member" : "org.locationtech.geomesa.spark.SpatialRDD.toValueSeq", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#toValueSeq(in:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]withorg.locationtech.geomesa.spark.Schema):org.apache.spark.rdd.RDD[Seq[AnyRef]]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(rdd: RDD[SimpleFeature], schema: SimpleFeatureType): SpatialRDD", "member" : "org.locationtech.geomesa.spark.SpatialRDD.apply", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#apply(rdd:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature],schema:org.geotools.api.feature.simple.SimpleFeatureType):org.locationtech.geomesa.spark.SpatialRDD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDD$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/SpatialRDD.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.spark.SpatialRDDProvider", "members_trait" : [{"label" : "sft", "tail" : "(params: Map[String, String], typeName: String): Option[SimpleFeatureType]", "member" : "org.locationtech.geomesa.spark.SpatialRDDProvider.sft", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#sft(params:Map[String,String],typeName:String):Option[org.geotools.api.feature.simple.SimpleFeatureType]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "save", "tail" : "(rdd: RDD[SimpleFeature], params: Map[String, String], typeName: String): Unit", "member" : "org.locationtech.geomesa.spark.SpatialRDDProvider.save", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#save(rdd:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature],params:Map[String,String],typeName:String):Unit", "kind" : "abstract def"}, {"label" : "rdd", "tail" : "(conf: Configuration, sc: SparkContext, params: Map[String, String], query: Query): SpatialRDD", "member" : "org.locationtech.geomesa.spark.SpatialRDDProvider.rdd", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#rdd(conf:org.apache.hadoop.conf.Configuration,sc:org.apache.spark.SparkContext,params:Map[String,String],query:org.geotools.api.data.Query):org.locationtech.geomesa.spark.SpatialRDD", "kind" : "abstract def"}, {"label" : "canProcess", "tail" : "(params: Map[String, _ <: Serializable]): Boolean", "member" : "org.locationtech.geomesa.spark.SpatialRDDProvider.canProcess", "link" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html#canProcess(params:java.util.Map[String,_<:java.io.Serializable]):Boolean", "kind" : "abstract def"}], "shortDescription" : "Provider trait for loading spatial RDDs, generally backed by GeoTools data store implementations", "trait" : "org\/locationtech\/geomesa\/spark\/SpatialRDDProvider.html", "kind" : "trait"}], "org.apache.spark" : [], "org.apache" : [], "org.apache.spark.geomesa.api.python" : [{"name" : "org.apache.spark.geomesa.api.python.AutoBatchedPickler", "shortDescription" : "", "object" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#GroupedIterator[B<:<?>]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"member" : "org.apache.spark.geomesa.api.python.AutoBatchedPickler#<init>", "error" : "unsupported entity"}, {"label" : "next", "tail" : "(): Array[Byte]", "member" : "org.apache.spark.api.python.SerDeUtil.AutoBatchedPickler.next", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#next():Array[Byte]", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "org.apache.spark.api.python.SerDeUtil.AutoBatchedPickler.hasNext", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#hasNext:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Array[Byte]]", "member" : "scala.collection.Iterator.toStream", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.toIterator", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Array[Byte]]", "member" : "scala.collection.Iterator.toTraversable", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Array[Byte]], Iterator[Array[Byte]])", "member" : "scala.collection.Iterator.duplicate", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Array[Byte]]", "member" : "scala.collection.Iterator.buffered", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Array[Byte]) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Option[Array[Byte]]", "member" : "scala.collection.Iterator.find", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Array[Byte]) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Array[Byte], Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Array[Byte], B)]", "member" : "scala.collection.Iterator.zip", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.dropWhile", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Array[Byte]) ⇒ Boolean): (Iterator[Array[Byte]], Iterator[Array[Byte]])", "member" : "scala.collection.Iterator.span", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Array[Byte]) ⇒ Boolean): (Iterator[Array[Byte]], Iterator[Array[Byte]])", "member" : "scala.collection.Iterator.partition", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.takeWhile", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Array[Byte], B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Array[Byte]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Array[Byte], B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.filterNot", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.withFilter", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Array[Byte], B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.filter", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Array[Byte]) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Array[Byte]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.slice", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.drop", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.take", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Array[Byte]]", "member" : "scala.collection.Iterator.seq", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Array[Byte], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Array[Byte], Col[Array[Byte]]]): Col[Array[Byte]]", "member" : "scala.collection.TraversableOnce.to", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Array[Byte]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Array[Byte]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Array[Byte]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Array[Byte]]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Array[Byte]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Array[Byte]) ⇒ B)(cmp: Ordering[B]): Array[Byte]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Array[Byte]) ⇒ B)(cmp: Ordering[B]): Array[Byte]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Array[Byte]", "member" : "scala.collection.TraversableOnce.max", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Array[Byte]", "member" : "scala.collection.TraversableOnce.min", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Array[Byte]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Array[Byte], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Array[Byte]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Array[Byte], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Array[Byte]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Array[Byte], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Array[Byte]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Array[Byte], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Array[Byte]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Array[Byte], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Array[Byte]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Array[Byte]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(i: Iterator[Any]): AutoBatchedPickler", "member" : "org.apache.spark.geomesa.api.python.AutoBatchedPickler.apply", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#apply(i:Iterator[Any]):org.apache.spark.geomesa.api.python.AutoBatchedPickler", "kind" : "def"}, {"label" : "pickler", "tail" : ": IObjectPickler", "member" : "org.apache.spark.geomesa.api.python.AutoBatchedPickler.pickler", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#pickler:net.razorvine.pickle.IObjectPickler", "kind" : "val"}, {"label" : "function", "tail" : ": String", "member" : "org.apache.spark.geomesa.api.python.AutoBatchedPickler.function", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#function:String", "kind" : "val"}, {"label" : "module", "tail" : ": String", "member" : "org.apache.spark.geomesa.api.python.AutoBatchedPickler.module", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#module:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/geomesa\/api\/python\/AutoBatchedPickler.html", "kind" : "object"}, {"name" : "org.apache.spark.geomesa.api.python.GeoMesaSeDerUtil", "shortDescription" : "", "object" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html", "members_object" : [{"label" : "toPickledRDD", "tail" : "(jrdd: JavaRDD[_]): JavaRDD[Array[Byte]]", "member" : "org.apache.spark.geomesa.api.python.GeoMesaSeDerUtil.toPickledRDD", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#toPickledRDD(jrdd:org.apache.spark.api.java.JavaRDD[_]):org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "implicit def"}, {"label" : "toPickledRDD", "tail" : "(rdd: RDD[_]): JavaRDD[Array[Byte]]", "member" : "org.apache.spark.geomesa.api.python.GeoMesaSeDerUtil.toPickledRDD", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#toPickledRDD(rdd:org.apache.spark.rdd.RDD[_]):org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "implicit def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/geomesa\/api\/python\/GeoMesaSeDerUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.geomesa.api" : [], "org.locationtech.geomesa.spark.api.java" : [{"name" : "org.locationtech.geomesa.spark.api.java.JavaGeoMesaSpark", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html", "members_object" : [{"label" : "apply", "tail" : "(params: Map[String, _ <: Serializable]): JavaSpatialRDDProvider", "member" : "org.locationtech.geomesa.spark.api.java.JavaGeoMesaSpark.apply", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#apply(params:java.util.Map[String,_<:java.io.Serializable]):org.locationtech.geomesa.spark.api.java.JavaSpatialRDDProvider", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaGeoMesaSpark$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html", "members_class" : [{"label" : "asGeoJSONString", "tail" : "(): JavaRDD[String]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.asGeoJSONString", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#asGeoJSONString:org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "asKeyValueMap", "tail" : "(): JavaRDD[Map[String, AnyRef]]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.asKeyValueMap", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#asKeyValueMap:org.apache.spark.api.java.JavaRDD[java.util.Map[String,Object]]", "kind" : "def"}, {"label" : "asKeyValueArrayList", "tail" : "(): JavaRDD[List[Array[AnyRef]]]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.asKeyValueArrayList", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#asKeyValueArrayList:org.apache.spark.api.java.JavaRDD[java.util.List[Array[AnyRef]]]", "kind" : "def"}, {"label" : "asKeyValueEntryList", "tail" : "(): JavaRDD[List[Entry[String, AnyRef]]]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.asKeyValueEntryList", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#asKeyValueEntryList:org.apache.spark.api.java.JavaRDD[java.util.List[java.util.Map.Entry[String,Object]]]", "kind" : "def"}, {"label" : "asValueList", "tail" : "(): JavaRDD[List[AnyRef]]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.asValueList", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#asValueList:org.apache.spark.api.java.JavaRDD[java.util.List[Object]]", "kind" : "def"}, {"label" : "schema", "tail" : "(): SimpleFeatureType", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.schema", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#schema:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD#<init>", "error" : "unsupported entity"}, {"label" : "srdd", "tail" : ": SpatialRDD", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.srdd", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#srdd:org.locationtech.geomesa.spark.SpatialRDD", "kind" : "val"}, {"label" : "sortBy", "tail" : "(f: Function[SimpleFeature, S], ascending: Boolean, numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.sortBy", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#sortBy[S](f:org.apache.spark.api.java.function.Function[T,S],ascending:Boolean,numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "setName", "tail" : "(name: String): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.setName", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#setName(name:String):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.api.java.JavaRDD.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#toString():String", "kind" : "def"}, {"label" : "subtract", "tail" : "(other: JavaRDD[SimpleFeature], p: Partitioner): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.subtract", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#subtract(other:org.apache.spark.api.java.JavaRDD[T],p:org.apache.spark.Partitioner):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "subtract", "tail" : "(other: JavaRDD[SimpleFeature], numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.subtract", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#subtract(other:org.apache.spark.api.java.JavaRDD[T],numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "subtract", "tail" : "(other: JavaRDD[SimpleFeature]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.subtract", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#subtract(other:org.apache.spark.api.java.JavaRDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "intersection", "tail" : "(other: JavaRDD[SimpleFeature]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.intersection", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#intersection(other:org.apache.spark.api.java.JavaRDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "union", "tail" : "(other: JavaRDD[SimpleFeature]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.union", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#union(other:org.apache.spark.api.java.JavaRDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(weights: Array[Double], seed: Long): Array[JavaRDD[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDD.randomSplit", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#randomSplit(weights:Array[Double],seed:Long):Array[org.apache.spark.api.java.JavaRDD[T]]", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(weights: Array[Double]): Array[JavaRDD[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDD.randomSplit", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#randomSplit(weights:Array[Double]):Array[org.apache.spark.api.java.JavaRDD[T]]", "kind" : "def"}, {"label" : "sample", "tail" : "(withReplacement: Boolean, fraction: Double, seed: Long): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.sample", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#sample(withReplacement:Boolean,fraction:Double,seed:Long):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "sample", "tail" : "(withReplacement: Boolean, fraction: Double): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.sample", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#sample(withReplacement:Boolean,fraction:Double):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.repartition", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#repartition(numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "coalesce", "tail" : "(numPartitions: Int, shuffle: Boolean): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.coalesce", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#coalesce(numPartitions:Int,shuffle:Boolean):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "coalesce", "tail" : "(numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.coalesce", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#coalesce(numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: Function[SimpleFeature, Boolean]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.filter", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#filter(f:org.apache.spark.api.java.function.Function[T,Boolean]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.distinct", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#distinct(numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.distinct", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#distinct():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "unpersist", "tail" : "(blocking: Boolean): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.unpersist", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#unpersist(blocking:Boolean):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "unpersist", "tail" : "(): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.unpersist", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#unpersist():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "getResourceProfile", "tail" : "(): ResourceProfile", "member" : "org.apache.spark.api.java.JavaRDD.getResourceProfile", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#getResourceProfile():org.apache.spark.resource.ResourceProfile", "kind" : "def"}, {"label" : "withResources", "tail" : "(rp: ResourceProfile): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.withResources", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#withResources(rp:org.apache.spark.resource.ResourceProfile):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(newLevel: StorageLevel): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.persist", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#persist(newLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.cache", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#cache():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "wrapRDD", "tail" : "(rdd: RDD[SimpleFeature]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.wrapRDD", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#wrapRDD(rdd:org.apache.spark.rdd.RDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "classTag", "tail" : ": ClassTag[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.classTag", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "rdd", "tail" : ": RDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.rdd", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#rdd:org.apache.spark.rdd.RDD[T]", "kind" : "val"}, {"label" : "foreachPartitionAsync", "tail" : "(f: VoidFunction[Iterator[SimpleFeature]]): JavaFutureAction[Void]", "member" : "org.apache.spark.api.java.JavaRDDLike.foreachPartitionAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#foreachPartitionAsync(f:org.apache.spark.api.java.function.VoidFunction[java.util.Iterator[T]]):org.apache.spark.api.java.JavaFutureAction[Void]", "kind" : "def"}, {"label" : "foreachAsync", "tail" : "(f: VoidFunction[SimpleFeature]): JavaFutureAction[Void]", "member" : "org.apache.spark.api.java.JavaRDDLike.foreachAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#foreachAsync(f:org.apache.spark.api.java.function.VoidFunction[T]):org.apache.spark.api.java.JavaFutureAction[Void]", "kind" : "def"}, {"label" : "takeAsync", "tail" : "(num: Int): JavaFutureAction[List[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#takeAsync(num:Int):org.apache.spark.api.java.JavaFutureAction[java.util.List[T]]", "kind" : "def"}, {"label" : "collectAsync", "tail" : "(): JavaFutureAction[List[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.collectAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#collectAsync():org.apache.spark.api.java.JavaFutureAction[java.util.List[T]]", "kind" : "def"}, {"label" : "countAsync", "tail" : "(): JavaFutureAction[Long]", "member" : "org.apache.spark.api.java.JavaRDDLike.countAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#countAsync():org.apache.spark.api.java.JavaFutureAction[Long]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "org.apache.spark.api.java.JavaRDDLike.name", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#name():String", "kind" : "def"}, {"label" : "countApproxDistinct", "tail" : "(relativeSD: Double): Long", "member" : "org.apache.spark.api.java.JavaRDDLike.countApproxDistinct", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#countApproxDistinct(relativeSD:Double):Long", "kind" : "def"}, {"label" : "takeOrdered", "tail" : "(num: Int): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeOrdered", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#takeOrdered(num:Int):java.util.List[T]", "kind" : "def"}, {"label" : "min", "tail" : "(comp: Comparator[SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.min", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#min(comp:java.util.Comparator[T]):T", "kind" : "def"}, {"label" : "max", "tail" : "(comp: Comparator[SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.max", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#max(comp:java.util.Comparator[T]):T", "kind" : "def"}, {"label" : "takeOrdered", "tail" : "(num: Int, comp: Comparator[SimpleFeature]): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeOrdered", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#takeOrdered(num:Int,comp:java.util.Comparator[T]):java.util.List[T]", "kind" : "def"}, {"label" : "top", "tail" : "(num: Int): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.top", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#top(num:Int):java.util.List[T]", "kind" : "def"}, {"label" : "top", "tail" : "(num: Int, comp: Comparator[SimpleFeature]): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.top", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#top(num:Int,comp:java.util.Comparator[T]):java.util.List[T]", "kind" : "def"}, {"label" : "toDebugString", "tail" : "(): String", "member" : "org.apache.spark.api.java.JavaRDDLike.toDebugString", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#toDebugString():String", "kind" : "def"}, {"label" : "getCheckpointFile", "tail" : "(): Optional[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.getCheckpointFile", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#getCheckpointFile():org.apache.spark.api.java.Optional[String]", "kind" : "def"}, {"label" : "isCheckpointed", "tail" : "(): Boolean", "member" : "org.apache.spark.api.java.JavaRDDLike.isCheckpointed", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#isCheckpointed:Boolean", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.checkpoint", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#checkpoint():Unit", "kind" : "def"}, {"label" : "keyBy", "tail" : "(f: Function[SimpleFeature, U]): JavaPairRDD[U, SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.keyBy", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#keyBy[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.api.java.JavaPairRDD[U,T]", "kind" : "def"}, {"label" : "saveAsObjectFile", "tail" : "(path: String): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.saveAsObjectFile", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#saveAsObjectFile(path:String):Unit", "kind" : "def"}, {"label" : "saveAsTextFile", "tail" : "(path: String, codec: Class[_ <: CompressionCodec]): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.saveAsTextFile", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#saveAsTextFile(path:String,codec:Class[_<:org.apache.hadoop.io.compress.CompressionCodec]):Unit", "kind" : "def"}, {"label" : "saveAsTextFile", "tail" : "(path: String): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.saveAsTextFile", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#saveAsTextFile(path:String):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.apache.spark.api.java.JavaRDDLike.isEmpty", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "first", "tail" : "(): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.first", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#first():T", "kind" : "def"}, {"label" : "takeSample", "tail" : "(withReplacement: Boolean, num: Int, seed: Long): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeSample", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#takeSample(withReplacement:Boolean,num:Int,seed:Long):java.util.List[T]", "kind" : "def"}, {"label" : "takeSample", "tail" : "(withReplacement: Boolean, num: Int): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeSample", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#takeSample(withReplacement:Boolean,num:Int):java.util.List[T]", "kind" : "def"}, {"label" : "take", "tail" : "(num: Int): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.take", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#take(num:Int):java.util.List[T]", "kind" : "def"}, {"label" : "countByValueApprox", "tail" : "(timeout: Long): PartialResult[Map[SimpleFeature, BoundedDouble]]", "member" : "org.apache.spark.api.java.JavaRDDLike.countByValueApprox", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#countByValueApprox(timeout:Long):org.apache.spark.partial.PartialResult[java.util.Map[T,org.apache.spark.partial.BoundedDouble]]", "kind" : "def"}, {"label" : "countByValueApprox", "tail" : "(timeout: Long, confidence: Double): PartialResult[Map[SimpleFeature, BoundedDouble]]", "member" : "org.apache.spark.api.java.JavaRDDLike.countByValueApprox", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#countByValueApprox(timeout:Long,confidence:Double):org.apache.spark.partial.PartialResult[java.util.Map[T,org.apache.spark.partial.BoundedDouble]]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): Map[SimpleFeature, Long]", "member" : "org.apache.spark.api.java.JavaRDDLike.countByValue", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#countByValue():java.util.Map[T,Long]", "kind" : "def"}, {"label" : "countApprox", "tail" : "(timeout: Long): PartialResult[BoundedDouble]", "member" : "org.apache.spark.api.java.JavaRDDLike.countApprox", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#countApprox(timeout:Long):org.apache.spark.partial.PartialResult[org.apache.spark.partial.BoundedDouble]", "kind" : "def"}, {"label" : "countApprox", "tail" : "(timeout: Long, confidence: Double): PartialResult[BoundedDouble]", "member" : "org.apache.spark.api.java.JavaRDDLike.countApprox", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#countApprox(timeout:Long,confidence:Double):org.apache.spark.partial.PartialResult[org.apache.spark.partial.BoundedDouble]", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "org.apache.spark.api.java.JavaRDDLike.count", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#count():Long", "kind" : "def"}, {"label" : "treeAggregate", "tail" : "(zeroValue: U, seqOp: Function2[U, SimpleFeature, U], combOp: Function2[U, U, U], depth: Int, finalAggregateOnExecutor: Boolean): U", "member" : "org.apache.spark.api.java.JavaRDDLike.treeAggregate", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#treeAggregate[U](zeroValue:U,seqOp:org.apache.spark.api.java.function.Function2[U,T,U],combOp:org.apache.spark.api.java.function.Function2[U,U,U],depth:Int,finalAggregateOnExecutor:Boolean):U", "kind" : "def"}, {"label" : "treeAggregate", "tail" : "(zeroValue: U, seqOp: Function2[U, SimpleFeature, U], combOp: Function2[U, U, U]): U", "member" : "org.apache.spark.api.java.JavaRDDLike.treeAggregate", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#treeAggregate[U](zeroValue:U,seqOp:org.apache.spark.api.java.function.Function2[U,T,U],combOp:org.apache.spark.api.java.function.Function2[U,U,U]):U", "kind" : "def"}, {"label" : "treeAggregate", "tail" : "(zeroValue: U, seqOp: Function2[U, SimpleFeature, U], combOp: Function2[U, U, U], depth: Int): U", "member" : "org.apache.spark.api.java.JavaRDDLike.treeAggregate", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#treeAggregate[U](zeroValue:U,seqOp:org.apache.spark.api.java.function.Function2[U,T,U],combOp:org.apache.spark.api.java.function.Function2[U,U,U],depth:Int):U", "kind" : "def"}, {"label" : "aggregate", "tail" : "(zeroValue: U)(seqOp: Function2[U, SimpleFeature, U], combOp: Function2[U, U, U]): U", "member" : "org.apache.spark.api.java.JavaRDDLike.aggregate", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#aggregate[U](zeroValue:U)(seqOp:org.apache.spark.api.java.function.Function2[U,T,U],combOp:org.apache.spark.api.java.function.Function2[U,U,U]):U", "kind" : "def"}, {"label" : "fold", "tail" : "(zeroValue: SimpleFeature)(f: Function2[SimpleFeature, SimpleFeature, SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.fold", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#fold(zeroValue:T)(f:org.apache.spark.api.java.function.Function2[T,T,T]):T", "kind" : "def"}, {"label" : "treeReduce", "tail" : "(f: Function2[SimpleFeature, SimpleFeature, SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.treeReduce", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#treeReduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):T", "kind" : "def"}, {"label" : "treeReduce", "tail" : "(f: Function2[SimpleFeature, SimpleFeature, SimpleFeature], depth: Int): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.treeReduce", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#treeReduce(f:org.apache.spark.api.java.function.Function2[T,T,T],depth:Int):T", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[SimpleFeature, SimpleFeature, SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.reduce", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):T", "kind" : "def"}, {"label" : "collectPartitions", "tail" : "(partitionIds: Array[Int]): Array[List[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.collectPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#collectPartitions(partitionIds:Array[Int]):Array[java.util.List[T]]", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): Iterator[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.toLocalIterator", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#toLocalIterator():java.util.Iterator[T]", "kind" : "def"}, {"label" : "collect", "tail" : "(): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.collect", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#collect():java.util.List[T]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: VoidFunction[SimpleFeature]): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.foreach", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#foreach(f:org.apache.spark.api.java.function.VoidFunction[T]):Unit", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): JavaPairRDD[SimpleFeature, Long]", "member" : "org.apache.spark.api.java.JavaRDDLike.zipWithIndex", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#zipWithIndex():org.apache.spark.api.java.JavaPairRDD[T,Long]", "kind" : "def"}, {"label" : "zipWithUniqueId", "tail" : "(): JavaPairRDD[SimpleFeature, Long]", "member" : "org.apache.spark.api.java.JavaRDDLike.zipWithUniqueId", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#zipWithUniqueId():org.apache.spark.api.java.JavaPairRDD[T,Long]", "kind" : "def"}, {"label" : "zipPartitions", "tail" : "(other: JavaRDDLike[U, _], f: FlatMapFunction2[Iterator[SimpleFeature], Iterator[U], V]): JavaRDD[V]", "member" : "org.apache.spark.api.java.JavaRDDLike.zipPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#zipPartitions[U,V](other:org.apache.spark.api.java.JavaRDDLike[U,_],f:org.apache.spark.api.java.function.FlatMapFunction2[java.util.Iterator[T],java.util.Iterator[U],V]):org.apache.spark.api.java.JavaRDD[V]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: JavaRDDLike[U, _]): JavaPairRDD[SimpleFeature, U]", "member" : "org.apache.spark.api.java.JavaRDDLike.zip", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#zip[U](other:org.apache.spark.api.java.JavaRDDLike[U,_]):org.apache.spark.api.java.JavaPairRDD[T,U]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: List[String], env: Map[String, String], separateWorkingDir: Boolean, bufferSize: Int, encoding: String): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#pipe(command:java.util.List[String],env:java.util.Map[String,String],separateWorkingDir:Boolean,bufferSize:Int,encoding:String):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: List[String], env: Map[String, String], separateWorkingDir: Boolean, bufferSize: Int): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#pipe(command:java.util.List[String],env:java.util.Map[String,String],separateWorkingDir:Boolean,bufferSize:Int):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: List[String], env: Map[String, String]): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#pipe(command:java.util.List[String],env:java.util.Map[String,String]):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: List[String]): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#pipe(command:java.util.List[String]):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: String): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#pipe(command:String):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: Function[SimpleFeature, U], numPartitions: Int): JavaPairRDD[U, Iterable[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.groupBy", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#groupBy[U](f:org.apache.spark.api.java.function.Function[T,U],numPartitions:Int):org.apache.spark.api.java.JavaPairRDD[U,Iterable[T]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: Function[SimpleFeature, U]): JavaPairRDD[U, Iterable[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.groupBy", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#groupBy[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.api.java.JavaPairRDD[U,Iterable[T]]", "kind" : "def"}, {"label" : "cartesian", "tail" : "(other: JavaRDDLike[U, _]): JavaPairRDD[SimpleFeature, U]", "member" : "org.apache.spark.api.java.JavaRDDLike.cartesian", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#cartesian[U](other:org.apache.spark.api.java.JavaRDDLike[U,_]):org.apache.spark.api.java.JavaPairRDD[T,U]", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaRDD[List[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.glom", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#glom():org.apache.spark.api.java.JavaRDD[java.util.List[T]]", "kind" : "def"}, {"label" : "foreachPartition", "tail" : "(f: VoidFunction[Iterator[SimpleFeature]]): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.foreachPartition", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#foreachPartition(f:org.apache.spark.api.java.function.VoidFunction[java.util.Iterator[T]]):Unit", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[SimpleFeature], K2, V2], preservesPartitioning: Boolean): JavaPairRDD[K2, V2]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsToPair", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2],preservesPartitioning:Boolean):org.apache.spark.api.java.JavaPairRDD[K2,V2]", "kind" : "def"}, {"label" : "mapPartitionsToDouble", "tail" : "(f: DoubleFlatMapFunction[Iterator[SimpleFeature]], preservesPartitioning: Boolean): JavaDoubleRDD", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsToDouble", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#mapPartitionsToDouble(f:org.apache.spark.api.java.function.DoubleFlatMapFunction[java.util.Iterator[T]],preservesPartitioning:Boolean):org.apache.spark.api.java.JavaDoubleRDD", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[SimpleFeature], K2, V2]): JavaPairRDD[K2, V2]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsToPair", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.api.java.JavaPairRDD[K2,V2]", "kind" : "def"}, {"label" : "mapPartitionsToDouble", "tail" : "(f: DoubleFlatMapFunction[Iterator[SimpleFeature]]): JavaDoubleRDD", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsToDouble", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#mapPartitionsToDouble(f:org.apache.spark.api.java.function.DoubleFlatMapFunction[java.util.Iterator[T]]):org.apache.spark.api.java.JavaDoubleRDD", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[SimpleFeature], U], preservesPartitioning: Boolean): JavaRDD[U]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U],preservesPartitioning:Boolean):org.apache.spark.api.java.JavaRDD[U]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[SimpleFeature], U]): JavaRDD[U]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.api.java.JavaRDD[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[SimpleFeature, K2, V2]): JavaPairRDD[K2, V2]", "member" : "org.apache.spark.api.java.JavaRDDLike.flatMapToPair", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.api.java.JavaPairRDD[K2,V2]", "kind" : "def"}, {"label" : "flatMapToDouble", "tail" : "(f: DoubleFlatMapFunction[SimpleFeature]): JavaDoubleRDD", "member" : "org.apache.spark.api.java.JavaRDDLike.flatMapToDouble", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#flatMapToDouble(f:org.apache.spark.api.java.function.DoubleFlatMapFunction[T]):org.apache.spark.api.java.JavaDoubleRDD", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[SimpleFeature, U]): JavaRDD[U]", "member" : "org.apache.spark.api.java.JavaRDDLike.flatMap", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.api.java.JavaRDD[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[SimpleFeature, K2, V2]): JavaPairRDD[K2, V2]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapToPair", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.api.java.JavaPairRDD[K2,V2]", "kind" : "def"}, {"label" : "mapToDouble", "tail" : "(f: DoubleFunction[SimpleFeature]): JavaDoubleRDD", "member" : "org.apache.spark.api.java.JavaRDDLike.mapToDouble", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#mapToDouble[R<:<?>](f:org.apache.spark.api.java.function.DoubleFunction[T]):org.apache.spark.api.java.JavaDoubleRDD", "kind" : "def"}, {"label" : "mapPartitionsWithIndex", "tail" : "(f: Function2[Integer, Iterator[SimpleFeature], Iterator[R]], preservesPartitioning: Boolean): JavaRDD[R]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsWithIndex", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#mapPartitionsWithIndex[R](f:org.apache.spark.api.java.function.Function2[Integer,java.util.Iterator[T],java.util.Iterator[R]],preservesPartitioning:Boolean):org.apache.spark.api.java.JavaRDD[R]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[SimpleFeature, R]): JavaRDD[R]", "member" : "org.apache.spark.api.java.JavaRDDLike.map", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#map[R](f:org.apache.spark.api.java.function.Function[T,R]):org.apache.spark.api.java.JavaRDD[R]", "kind" : "def"}, {"label" : "iterator", "tail" : "(split: Partition, taskContext: TaskContext): Iterator[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.iterator", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#iterator(split:org.apache.spark.Partition,taskContext:org.apache.spark.TaskContext):java.util.Iterator[T]", "kind" : "def"}, {"label" : "getStorageLevel", "tail" : "(): StorageLevel", "member" : "org.apache.spark.api.java.JavaRDDLike.getStorageLevel", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#getStorageLevel:org.apache.spark.storage.StorageLevel", "kind" : "def"}, {"label" : "id", "tail" : "(): Int", "member" : "org.apache.spark.api.java.JavaRDDLike.id", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#id:Int", "kind" : "def"}, {"label" : "context", "tail" : "(): SparkContext", "member" : "org.apache.spark.api.java.JavaRDDLike.context", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#context:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "partitioner", "tail" : "(): Optional[Partitioner]", "member" : "org.apache.spark.api.java.JavaRDDLike.partitioner", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#partitioner:org.apache.spark.api.java.Optional[org.apache.spark.Partitioner]", "kind" : "def"}, {"label" : "getNumPartitions", "tail" : "(): Int", "member" : "org.apache.spark.api.java.JavaRDDLike.getNumPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#getNumPartitions:Int", "kind" : "def"}, {"label" : "partitions", "tail" : "(): List[Partition]", "member" : "org.apache.spark.api.java.JavaRDDLike.partitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#partitions:java.util.List[org.apache.spark.Partition]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toGeoJSONString", "tail" : "(in: RDD[SimpleFeature] with Schema): RDD[String]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.toGeoJSONString", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#toGeoJSONString(in:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]withorg.locationtech.geomesa.spark.Schema):org.apache.spark.rdd.RDD[String]", "kind" : "implicit def"}, {"label" : "toKeyValueJavaMap", "tail" : "(in: RDD[SimpleFeature] with Schema): RDD[Map[String, AnyRef]]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.toKeyValueJavaMap", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#toKeyValueJavaMap(in:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]withorg.locationtech.geomesa.spark.Schema):org.apache.spark.rdd.RDD[java.util.Map[String,AnyRef]]", "kind" : "implicit def"}, {"label" : "toKeyValueArrayList", "tail" : "(in: RDD[SimpleFeature] with Schema): RDD[List[Array[AnyRef]]]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.toKeyValueArrayList", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#toKeyValueArrayList(in:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]withorg.locationtech.geomesa.spark.Schema):org.apache.spark.rdd.RDD[java.util.List[Array[AnyRef]]]", "kind" : "implicit def"}, {"label" : "toKeyValueEntryList", "tail" : "(in: RDD[SimpleFeature] with Schema): RDD[List[Entry[String, AnyRef]]]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.toKeyValueEntryList", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#toKeyValueEntryList(in:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]withorg.locationtech.geomesa.spark.Schema):org.apache.spark.rdd.RDD[java.util.List[java.util.Map.Entry[String,AnyRef]]]", "kind" : "implicit def"}, {"label" : "toValueList", "tail" : "(in: RDD[SimpleFeature] with Schema): RDD[List[AnyRef]]", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.toValueList", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#toValueList(in:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]withorg.locationtech.geomesa.spark.Schema):org.apache.spark.rdd.RDD[java.util.List[AnyRef]]", "kind" : "implicit def"}, {"label" : "toJavaSpatialRDD", "tail" : "(rdd: SpatialRDD): JavaSpatialRDD", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.toJavaSpatialRDD", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#toJavaSpatialRDD(rdd:org.locationtech.geomesa.spark.SpatialRDD):org.locationtech.geomesa.spark.api.java.JavaSpatialRDD", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(rdd: SpatialRDD): JavaSpatialRDD", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDD.apply", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#apply(rdd:org.locationtech.geomesa.spark.SpatialRDD):org.locationtech.geomesa.spark.api.java.JavaSpatialRDD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDD.html", "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDDProvider", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html", "members_class" : [{"label" : "save", "tail" : "(jrdd: JavaRDD[SimpleFeature], params: Map[String, String], typeName: String): Unit", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDDProvider.save", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#save(jrdd:org.apache.spark.api.java.JavaRDD[org.geotools.api.feature.simple.SimpleFeature],params:java.util.Map[String,String],typeName:String):Unit", "kind" : "def"}, {"label" : "rdd", "tail" : "(conf: Configuration, jsc: JavaSparkContext, params: Map[String, String], query: Query): JavaSpatialRDD", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDDProvider.rdd", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#rdd(conf:org.apache.hadoop.conf.Configuration,jsc:org.apache.spark.api.java.JavaSparkContext,params:java.util.Map[String,String],query:org.geotools.api.data.Query):org.locationtech.geomesa.spark.api.java.JavaSpatialRDD", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDDProvider#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(provider: SpatialRDDProvider): JavaSpatialRDDProvider", "member" : "org.locationtech.geomesa.spark.api.java.JavaSpatialRDDProvider.apply", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#apply(provider:org.locationtech.geomesa.spark.SpatialRDDProvider):org.locationtech.geomesa.spark.api.java.JavaSpatialRDDProvider", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/api\/java\/JavaSpatialRDDProvider.html", "kind" : "object"}], "org.locationtech.geomesa.spark.api" : [], "org" : [], "org.locationtech.geomesa.spark.api.python" : [{"name" : "org.locationtech.geomesa.spark.api.python.PythonGeoMesaSpark", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html", "members_object" : [{"label" : "apply", "tail" : "(params: Map[String, _ <: Serializable]): PythonSpatialRDDProvider", "member" : "org.locationtech.geomesa.spark.api.python.PythonGeoMesaSpark.apply", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#apply(params:java.util.Map[String,_<:java.io.Serializable]):org.locationtech.geomesa.spark.api.python.PythonSpatialRDDProvider", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonGeoMesaSpark$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDD", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html", "members_class" : [{"label" : "asGeoJSONString", "tail" : "(): JavaRDD[Array[Byte]]", "member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDD.asGeoJSONString", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#asGeoJSONString:org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "def"}, {"label" : "asKeyValueDict", "tail" : "(): JavaRDD[Array[Byte]]", "member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDD.asKeyValueDict", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#asKeyValueDict:org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "def"}, {"label" : "asKeyValueTupleList", "tail" : "(): JavaRDD[Array[Byte]]", "member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDD.asKeyValueTupleList", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#asKeyValueTupleList:org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "def"}, {"label" : "asValueList", "tail" : "(): JavaRDD[Array[Byte]]", "member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDD.asValueList", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#asValueList:org.apache.spark.api.java.JavaRDD[Array[Byte]]", "kind" : "def"}, {"label" : "schema", "tail" : "(): SimpleFeatureType", "member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDD.schema", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#schema:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDD#<init>", "error" : "unsupported entity"}, {"label" : "sortBy", "tail" : "(f: Function[SimpleFeature, S], ascending: Boolean, numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.sortBy", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#sortBy[S](f:org.apache.spark.api.java.function.Function[T,S],ascending:Boolean,numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "setName", "tail" : "(name: String): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.setName", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#setName(name:String):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.api.java.JavaRDD.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#toString():String", "kind" : "def"}, {"label" : "subtract", "tail" : "(other: JavaRDD[SimpleFeature], p: Partitioner): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.subtract", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#subtract(other:org.apache.spark.api.java.JavaRDD[T],p:org.apache.spark.Partitioner):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "subtract", "tail" : "(other: JavaRDD[SimpleFeature], numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.subtract", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#subtract(other:org.apache.spark.api.java.JavaRDD[T],numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "subtract", "tail" : "(other: JavaRDD[SimpleFeature]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.subtract", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#subtract(other:org.apache.spark.api.java.JavaRDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "intersection", "tail" : "(other: JavaRDD[SimpleFeature]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.intersection", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#intersection(other:org.apache.spark.api.java.JavaRDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "union", "tail" : "(other: JavaRDD[SimpleFeature]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.union", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#union(other:org.apache.spark.api.java.JavaRDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(weights: Array[Double], seed: Long): Array[JavaRDD[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDD.randomSplit", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#randomSplit(weights:Array[Double],seed:Long):Array[org.apache.spark.api.java.JavaRDD[T]]", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(weights: Array[Double]): Array[JavaRDD[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDD.randomSplit", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#randomSplit(weights:Array[Double]):Array[org.apache.spark.api.java.JavaRDD[T]]", "kind" : "def"}, {"label" : "sample", "tail" : "(withReplacement: Boolean, fraction: Double, seed: Long): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.sample", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#sample(withReplacement:Boolean,fraction:Double,seed:Long):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "sample", "tail" : "(withReplacement: Boolean, fraction: Double): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.sample", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#sample(withReplacement:Boolean,fraction:Double):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.repartition", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#repartition(numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "coalesce", "tail" : "(numPartitions: Int, shuffle: Boolean): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.coalesce", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#coalesce(numPartitions:Int,shuffle:Boolean):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "coalesce", "tail" : "(numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.coalesce", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#coalesce(numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: Function[SimpleFeature, Boolean]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.filter", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#filter(f:org.apache.spark.api.java.function.Function[T,Boolean]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(numPartitions: Int): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.distinct", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#distinct(numPartitions:Int):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.distinct", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#distinct():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "unpersist", "tail" : "(blocking: Boolean): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.unpersist", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#unpersist(blocking:Boolean):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "unpersist", "tail" : "(): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.unpersist", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#unpersist():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "getResourceProfile", "tail" : "(): ResourceProfile", "member" : "org.apache.spark.api.java.JavaRDD.getResourceProfile", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#getResourceProfile():org.apache.spark.resource.ResourceProfile", "kind" : "def"}, {"label" : "withResources", "tail" : "(rp: ResourceProfile): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.withResources", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#withResources(rp:org.apache.spark.resource.ResourceProfile):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(newLevel: StorageLevel): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.persist", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#persist(newLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.cache", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#cache():org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "wrapRDD", "tail" : "(rdd: RDD[SimpleFeature]): JavaRDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.wrapRDD", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#wrapRDD(rdd:org.apache.spark.rdd.RDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "classTag", "tail" : ": ClassTag[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.classTag", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "rdd", "tail" : ": RDD[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDD.rdd", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#rdd:org.apache.spark.rdd.RDD[T]", "kind" : "val"}, {"label" : "foreachPartitionAsync", "tail" : "(f: VoidFunction[Iterator[SimpleFeature]]): JavaFutureAction[Void]", "member" : "org.apache.spark.api.java.JavaRDDLike.foreachPartitionAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#foreachPartitionAsync(f:org.apache.spark.api.java.function.VoidFunction[java.util.Iterator[T]]):org.apache.spark.api.java.JavaFutureAction[Void]", "kind" : "def"}, {"label" : "foreachAsync", "tail" : "(f: VoidFunction[SimpleFeature]): JavaFutureAction[Void]", "member" : "org.apache.spark.api.java.JavaRDDLike.foreachAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#foreachAsync(f:org.apache.spark.api.java.function.VoidFunction[T]):org.apache.spark.api.java.JavaFutureAction[Void]", "kind" : "def"}, {"label" : "takeAsync", "tail" : "(num: Int): JavaFutureAction[List[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#takeAsync(num:Int):org.apache.spark.api.java.JavaFutureAction[java.util.List[T]]", "kind" : "def"}, {"label" : "collectAsync", "tail" : "(): JavaFutureAction[List[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.collectAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#collectAsync():org.apache.spark.api.java.JavaFutureAction[java.util.List[T]]", "kind" : "def"}, {"label" : "countAsync", "tail" : "(): JavaFutureAction[Long]", "member" : "org.apache.spark.api.java.JavaRDDLike.countAsync", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#countAsync():org.apache.spark.api.java.JavaFutureAction[Long]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "org.apache.spark.api.java.JavaRDDLike.name", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#name():String", "kind" : "def"}, {"label" : "countApproxDistinct", "tail" : "(relativeSD: Double): Long", "member" : "org.apache.spark.api.java.JavaRDDLike.countApproxDistinct", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#countApproxDistinct(relativeSD:Double):Long", "kind" : "def"}, {"label" : "takeOrdered", "tail" : "(num: Int): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeOrdered", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#takeOrdered(num:Int):java.util.List[T]", "kind" : "def"}, {"label" : "min", "tail" : "(comp: Comparator[SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.min", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#min(comp:java.util.Comparator[T]):T", "kind" : "def"}, {"label" : "max", "tail" : "(comp: Comparator[SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.max", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#max(comp:java.util.Comparator[T]):T", "kind" : "def"}, {"label" : "takeOrdered", "tail" : "(num: Int, comp: Comparator[SimpleFeature]): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeOrdered", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#takeOrdered(num:Int,comp:java.util.Comparator[T]):java.util.List[T]", "kind" : "def"}, {"label" : "top", "tail" : "(num: Int): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.top", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#top(num:Int):java.util.List[T]", "kind" : "def"}, {"label" : "top", "tail" : "(num: Int, comp: Comparator[SimpleFeature]): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.top", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#top(num:Int,comp:java.util.Comparator[T]):java.util.List[T]", "kind" : "def"}, {"label" : "toDebugString", "tail" : "(): String", "member" : "org.apache.spark.api.java.JavaRDDLike.toDebugString", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#toDebugString():String", "kind" : "def"}, {"label" : "getCheckpointFile", "tail" : "(): Optional[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.getCheckpointFile", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#getCheckpointFile():org.apache.spark.api.java.Optional[String]", "kind" : "def"}, {"label" : "isCheckpointed", "tail" : "(): Boolean", "member" : "org.apache.spark.api.java.JavaRDDLike.isCheckpointed", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#isCheckpointed:Boolean", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.checkpoint", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#checkpoint():Unit", "kind" : "def"}, {"label" : "keyBy", "tail" : "(f: Function[SimpleFeature, U]): JavaPairRDD[U, SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.keyBy", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#keyBy[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.api.java.JavaPairRDD[U,T]", "kind" : "def"}, {"label" : "saveAsObjectFile", "tail" : "(path: String): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.saveAsObjectFile", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#saveAsObjectFile(path:String):Unit", "kind" : "def"}, {"label" : "saveAsTextFile", "tail" : "(path: String, codec: Class[_ <: CompressionCodec]): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.saveAsTextFile", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#saveAsTextFile(path:String,codec:Class[_<:org.apache.hadoop.io.compress.CompressionCodec]):Unit", "kind" : "def"}, {"label" : "saveAsTextFile", "tail" : "(path: String): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.saveAsTextFile", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#saveAsTextFile(path:String):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.apache.spark.api.java.JavaRDDLike.isEmpty", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "first", "tail" : "(): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.first", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#first():T", "kind" : "def"}, {"label" : "takeSample", "tail" : "(withReplacement: Boolean, num: Int, seed: Long): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeSample", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#takeSample(withReplacement:Boolean,num:Int,seed:Long):java.util.List[T]", "kind" : "def"}, {"label" : "takeSample", "tail" : "(withReplacement: Boolean, num: Int): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.takeSample", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#takeSample(withReplacement:Boolean,num:Int):java.util.List[T]", "kind" : "def"}, {"label" : "take", "tail" : "(num: Int): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.take", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#take(num:Int):java.util.List[T]", "kind" : "def"}, {"label" : "countByValueApprox", "tail" : "(timeout: Long): PartialResult[Map[SimpleFeature, BoundedDouble]]", "member" : "org.apache.spark.api.java.JavaRDDLike.countByValueApprox", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#countByValueApprox(timeout:Long):org.apache.spark.partial.PartialResult[java.util.Map[T,org.apache.spark.partial.BoundedDouble]]", "kind" : "def"}, {"label" : "countByValueApprox", "tail" : "(timeout: Long, confidence: Double): PartialResult[Map[SimpleFeature, BoundedDouble]]", "member" : "org.apache.spark.api.java.JavaRDDLike.countByValueApprox", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#countByValueApprox(timeout:Long,confidence:Double):org.apache.spark.partial.PartialResult[java.util.Map[T,org.apache.spark.partial.BoundedDouble]]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): Map[SimpleFeature, Long]", "member" : "org.apache.spark.api.java.JavaRDDLike.countByValue", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#countByValue():java.util.Map[T,Long]", "kind" : "def"}, {"label" : "countApprox", "tail" : "(timeout: Long): PartialResult[BoundedDouble]", "member" : "org.apache.spark.api.java.JavaRDDLike.countApprox", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#countApprox(timeout:Long):org.apache.spark.partial.PartialResult[org.apache.spark.partial.BoundedDouble]", "kind" : "def"}, {"label" : "countApprox", "tail" : "(timeout: Long, confidence: Double): PartialResult[BoundedDouble]", "member" : "org.apache.spark.api.java.JavaRDDLike.countApprox", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#countApprox(timeout:Long,confidence:Double):org.apache.spark.partial.PartialResult[org.apache.spark.partial.BoundedDouble]", "kind" : "def"}, {"label" : "count", "tail" : "(): Long", "member" : "org.apache.spark.api.java.JavaRDDLike.count", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#count():Long", "kind" : "def"}, {"label" : "treeAggregate", "tail" : "(zeroValue: U, seqOp: Function2[U, SimpleFeature, U], combOp: Function2[U, U, U], depth: Int, finalAggregateOnExecutor: Boolean): U", "member" : "org.apache.spark.api.java.JavaRDDLike.treeAggregate", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#treeAggregate[U](zeroValue:U,seqOp:org.apache.spark.api.java.function.Function2[U,T,U],combOp:org.apache.spark.api.java.function.Function2[U,U,U],depth:Int,finalAggregateOnExecutor:Boolean):U", "kind" : "def"}, {"label" : "treeAggregate", "tail" : "(zeroValue: U, seqOp: Function2[U, SimpleFeature, U], combOp: Function2[U, U, U]): U", "member" : "org.apache.spark.api.java.JavaRDDLike.treeAggregate", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#treeAggregate[U](zeroValue:U,seqOp:org.apache.spark.api.java.function.Function2[U,T,U],combOp:org.apache.spark.api.java.function.Function2[U,U,U]):U", "kind" : "def"}, {"label" : "treeAggregate", "tail" : "(zeroValue: U, seqOp: Function2[U, SimpleFeature, U], combOp: Function2[U, U, U], depth: Int): U", "member" : "org.apache.spark.api.java.JavaRDDLike.treeAggregate", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#treeAggregate[U](zeroValue:U,seqOp:org.apache.spark.api.java.function.Function2[U,T,U],combOp:org.apache.spark.api.java.function.Function2[U,U,U],depth:Int):U", "kind" : "def"}, {"label" : "aggregate", "tail" : "(zeroValue: U)(seqOp: Function2[U, SimpleFeature, U], combOp: Function2[U, U, U]): U", "member" : "org.apache.spark.api.java.JavaRDDLike.aggregate", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#aggregate[U](zeroValue:U)(seqOp:org.apache.spark.api.java.function.Function2[U,T,U],combOp:org.apache.spark.api.java.function.Function2[U,U,U]):U", "kind" : "def"}, {"label" : "fold", "tail" : "(zeroValue: SimpleFeature)(f: Function2[SimpleFeature, SimpleFeature, SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.fold", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#fold(zeroValue:T)(f:org.apache.spark.api.java.function.Function2[T,T,T]):T", "kind" : "def"}, {"label" : "treeReduce", "tail" : "(f: Function2[SimpleFeature, SimpleFeature, SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.treeReduce", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#treeReduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):T", "kind" : "def"}, {"label" : "treeReduce", "tail" : "(f: Function2[SimpleFeature, SimpleFeature, SimpleFeature], depth: Int): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.treeReduce", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#treeReduce(f:org.apache.spark.api.java.function.Function2[T,T,T],depth:Int):T", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[SimpleFeature, SimpleFeature, SimpleFeature]): SimpleFeature", "member" : "org.apache.spark.api.java.JavaRDDLike.reduce", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):T", "kind" : "def"}, {"label" : "collectPartitions", "tail" : "(partitionIds: Array[Int]): Array[List[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.collectPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#collectPartitions(partitionIds:Array[Int]):Array[java.util.List[T]]", "kind" : "def"}, {"label" : "toLocalIterator", "tail" : "(): Iterator[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.toLocalIterator", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#toLocalIterator():java.util.Iterator[T]", "kind" : "def"}, {"label" : "collect", "tail" : "(): List[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.collect", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#collect():java.util.List[T]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: VoidFunction[SimpleFeature]): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.foreach", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#foreach(f:org.apache.spark.api.java.function.VoidFunction[T]):Unit", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): JavaPairRDD[SimpleFeature, Long]", "member" : "org.apache.spark.api.java.JavaRDDLike.zipWithIndex", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#zipWithIndex():org.apache.spark.api.java.JavaPairRDD[T,Long]", "kind" : "def"}, {"label" : "zipWithUniqueId", "tail" : "(): JavaPairRDD[SimpleFeature, Long]", "member" : "org.apache.spark.api.java.JavaRDDLike.zipWithUniqueId", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#zipWithUniqueId():org.apache.spark.api.java.JavaPairRDD[T,Long]", "kind" : "def"}, {"label" : "zipPartitions", "tail" : "(other: JavaRDDLike[U, _], f: FlatMapFunction2[Iterator[SimpleFeature], Iterator[U], V]): JavaRDD[V]", "member" : "org.apache.spark.api.java.JavaRDDLike.zipPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#zipPartitions[U,V](other:org.apache.spark.api.java.JavaRDDLike[U,_],f:org.apache.spark.api.java.function.FlatMapFunction2[java.util.Iterator[T],java.util.Iterator[U],V]):org.apache.spark.api.java.JavaRDD[V]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: JavaRDDLike[U, _]): JavaPairRDD[SimpleFeature, U]", "member" : "org.apache.spark.api.java.JavaRDDLike.zip", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#zip[U](other:org.apache.spark.api.java.JavaRDDLike[U,_]):org.apache.spark.api.java.JavaPairRDD[T,U]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: List[String], env: Map[String, String], separateWorkingDir: Boolean, bufferSize: Int, encoding: String): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#pipe(command:java.util.List[String],env:java.util.Map[String,String],separateWorkingDir:Boolean,bufferSize:Int,encoding:String):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: List[String], env: Map[String, String], separateWorkingDir: Boolean, bufferSize: Int): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#pipe(command:java.util.List[String],env:java.util.Map[String,String],separateWorkingDir:Boolean,bufferSize:Int):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: List[String], env: Map[String, String]): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#pipe(command:java.util.List[String],env:java.util.Map[String,String]):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: List[String]): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#pipe(command:java.util.List[String]):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "pipe", "tail" : "(command: String): JavaRDD[String]", "member" : "org.apache.spark.api.java.JavaRDDLike.pipe", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#pipe(command:String):org.apache.spark.api.java.JavaRDD[String]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: Function[SimpleFeature, U], numPartitions: Int): JavaPairRDD[U, Iterable[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.groupBy", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#groupBy[U](f:org.apache.spark.api.java.function.Function[T,U],numPartitions:Int):org.apache.spark.api.java.JavaPairRDD[U,Iterable[T]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: Function[SimpleFeature, U]): JavaPairRDD[U, Iterable[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.groupBy", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#groupBy[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.api.java.JavaPairRDD[U,Iterable[T]]", "kind" : "def"}, {"label" : "cartesian", "tail" : "(other: JavaRDDLike[U, _]): JavaPairRDD[SimpleFeature, U]", "member" : "org.apache.spark.api.java.JavaRDDLike.cartesian", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#cartesian[U](other:org.apache.spark.api.java.JavaRDDLike[U,_]):org.apache.spark.api.java.JavaPairRDD[T,U]", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaRDD[List[SimpleFeature]]", "member" : "org.apache.spark.api.java.JavaRDDLike.glom", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#glom():org.apache.spark.api.java.JavaRDD[java.util.List[T]]", "kind" : "def"}, {"label" : "foreachPartition", "tail" : "(f: VoidFunction[Iterator[SimpleFeature]]): Unit", "member" : "org.apache.spark.api.java.JavaRDDLike.foreachPartition", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#foreachPartition(f:org.apache.spark.api.java.function.VoidFunction[java.util.Iterator[T]]):Unit", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[SimpleFeature], K2, V2], preservesPartitioning: Boolean): JavaPairRDD[K2, V2]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsToPair", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2],preservesPartitioning:Boolean):org.apache.spark.api.java.JavaPairRDD[K2,V2]", "kind" : "def"}, {"label" : "mapPartitionsToDouble", "tail" : "(f: DoubleFlatMapFunction[Iterator[SimpleFeature]], preservesPartitioning: Boolean): JavaDoubleRDD", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsToDouble", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#mapPartitionsToDouble(f:org.apache.spark.api.java.function.DoubleFlatMapFunction[java.util.Iterator[T]],preservesPartitioning:Boolean):org.apache.spark.api.java.JavaDoubleRDD", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[SimpleFeature], K2, V2]): JavaPairRDD[K2, V2]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsToPair", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.api.java.JavaPairRDD[K2,V2]", "kind" : "def"}, {"label" : "mapPartitionsToDouble", "tail" : "(f: DoubleFlatMapFunction[Iterator[SimpleFeature]]): JavaDoubleRDD", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsToDouble", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#mapPartitionsToDouble(f:org.apache.spark.api.java.function.DoubleFlatMapFunction[java.util.Iterator[T]]):org.apache.spark.api.java.JavaDoubleRDD", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[SimpleFeature], U], preservesPartitioning: Boolean): JavaRDD[U]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U],preservesPartitioning:Boolean):org.apache.spark.api.java.JavaRDD[U]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[SimpleFeature], U]): JavaRDD[U]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.api.java.JavaRDD[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[SimpleFeature, K2, V2]): JavaPairRDD[K2, V2]", "member" : "org.apache.spark.api.java.JavaRDDLike.flatMapToPair", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.api.java.JavaPairRDD[K2,V2]", "kind" : "def"}, {"label" : "flatMapToDouble", "tail" : "(f: DoubleFlatMapFunction[SimpleFeature]): JavaDoubleRDD", "member" : "org.apache.spark.api.java.JavaRDDLike.flatMapToDouble", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#flatMapToDouble(f:org.apache.spark.api.java.function.DoubleFlatMapFunction[T]):org.apache.spark.api.java.JavaDoubleRDD", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[SimpleFeature, U]): JavaRDD[U]", "member" : "org.apache.spark.api.java.JavaRDDLike.flatMap", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.api.java.JavaRDD[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[SimpleFeature, K2, V2]): JavaPairRDD[K2, V2]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapToPair", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.api.java.JavaPairRDD[K2,V2]", "kind" : "def"}, {"label" : "mapToDouble", "tail" : "(f: DoubleFunction[SimpleFeature]): JavaDoubleRDD", "member" : "org.apache.spark.api.java.JavaRDDLike.mapToDouble", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#mapToDouble[R<:<?>](f:org.apache.spark.api.java.function.DoubleFunction[T]):org.apache.spark.api.java.JavaDoubleRDD", "kind" : "def"}, {"label" : "mapPartitionsWithIndex", "tail" : "(f: Function2[Integer, Iterator[SimpleFeature], Iterator[R]], preservesPartitioning: Boolean): JavaRDD[R]", "member" : "org.apache.spark.api.java.JavaRDDLike.mapPartitionsWithIndex", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#mapPartitionsWithIndex[R](f:org.apache.spark.api.java.function.Function2[Integer,java.util.Iterator[T],java.util.Iterator[R]],preservesPartitioning:Boolean):org.apache.spark.api.java.JavaRDD[R]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[SimpleFeature, R]): JavaRDD[R]", "member" : "org.apache.spark.api.java.JavaRDDLike.map", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#map[R](f:org.apache.spark.api.java.function.Function[T,R]):org.apache.spark.api.java.JavaRDD[R]", "kind" : "def"}, {"label" : "iterator", "tail" : "(split: Partition, taskContext: TaskContext): Iterator[SimpleFeature]", "member" : "org.apache.spark.api.java.JavaRDDLike.iterator", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#iterator(split:org.apache.spark.Partition,taskContext:org.apache.spark.TaskContext):java.util.Iterator[T]", "kind" : "def"}, {"label" : "getStorageLevel", "tail" : "(): StorageLevel", "member" : "org.apache.spark.api.java.JavaRDDLike.getStorageLevel", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#getStorageLevel:org.apache.spark.storage.StorageLevel", "kind" : "def"}, {"label" : "id", "tail" : "(): Int", "member" : "org.apache.spark.api.java.JavaRDDLike.id", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#id:Int", "kind" : "def"}, {"label" : "context", "tail" : "(): SparkContext", "member" : "org.apache.spark.api.java.JavaRDDLike.context", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#context:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "partitioner", "tail" : "(): Optional[Partitioner]", "member" : "org.apache.spark.api.java.JavaRDDLike.partitioner", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#partitioner:org.apache.spark.api.java.Optional[org.apache.spark.Partitioner]", "kind" : "def"}, {"label" : "getNumPartitions", "tail" : "(): Int", "member" : "org.apache.spark.api.java.JavaRDDLike.getNumPartitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#getNumPartitions:Int", "kind" : "def"}, {"label" : "partitions", "tail" : "(): List[Partition]", "member" : "org.apache.spark.api.java.JavaRDDLike.partitions", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#partitions:java.util.List[org.apache.spark.Partition]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(rdd: JavaSpatialRDD): PythonSpatialRDD", "member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDD.apply", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#apply(rdd:org.locationtech.geomesa.spark.api.java.JavaSpatialRDD):org.locationtech.geomesa.spark.api.python.PythonSpatialRDD", "kind" : "def"}, {"label" : "toPythonSpatialRDD", "tail" : "(rdd: SpatialRDD): PythonSpatialRDD", "member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDD.toPythonSpatialRDD", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#toPythonSpatialRDD(rdd:org.locationtech.geomesa.spark.SpatialRDD):org.locationtech.geomesa.spark.api.python.PythonSpatialRDD", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDD.html", "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDDProvider", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html", "members_class" : [{"label" : "rdd", "tail" : "(conf: Configuration, jsc: JavaSparkContext, params: Map[String, String], query: Query): PythonSpatialRDD", "member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDDProvider.rdd", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#rdd(conf:org.apache.hadoop.conf.Configuration,jsc:org.apache.spark.api.java.JavaSparkContext,params:java.util.Map[String,String],query:org.geotools.api.data.Query):org.locationtech.geomesa.spark.api.python.PythonSpatialRDD", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDDProvider#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(provider: SpatialRDDProvider): PythonSpatialRDDProvider", "member" : "org.locationtech.geomesa.spark.api.python.PythonSpatialRDDProvider.apply", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#apply(provider:org.locationtech.geomesa.spark.SpatialRDDProvider):org.locationtech.geomesa.spark.api.python.PythonSpatialRDDProvider", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/api\/python\/PythonSpatialRDDProvider.html", "kind" : "object"}]};