Index.PACKAGES = {"org.locationtech" : [], "org.locationtech.geomesa" : [], "org.locationtech.geomesa.fs" : [], "org.locationtech.geomesa.fs.storage" : [], "org.locationtech.geomesa.fs.storage.parquet.jobs" : [{"name" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetPartitionOutputFormat", "shortDescription" : "", "members_class" : [{"label" : "PartitionSchemeRecordWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.common.jobs.PartitionOutputFormat.PartitionSchemeRecordWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#PartitionSchemeRecordWriterextendsRecordWriter[Void,org.geotools.api.feature.simple.SimpleFeature]withLazyLogging", "kind" : "class"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetPartitionOutputFormat#<init>", "error" : "unsupported entity"}, {"label" : "checkOutputSpecs", "tail" : "(job: JobContext): Unit", "member" : "org.locationtech.geomesa.fs.storage.common.jobs.PartitionOutputFormat.checkOutputSpecs", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#checkOutputSpecs(job:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "getOutputCommitter", "tail" : "(context: TaskAttemptContext): OutputCommitter", "member" : "org.locationtech.geomesa.fs.storage.common.jobs.PartitionOutputFormat.getOutputCommitter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#getOutputCommitter(context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.OutputCommitter", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(context: TaskAttemptContext): RecordWriter[Void, SimpleFeature]", "member" : "org.locationtech.geomesa.fs.storage.common.jobs.PartitionOutputFormat.getRecordWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#getRecordWriter(context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordWriter[Void,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetPartitionOutputFormat.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureActionInputFormat", "shortDescription" : "Input format for parquet files that tracks the action and timestamp associated with each feature", "members_class" : [{"label" : "ParquetSimpleFeatureActionTransformRecordReader", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureActionInputFormat.ParquetSimpleFeatureActionTransformRecordReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#ParquetSimpleFeatureActionTransformRecordReaderextendsParquetSimpleFeatureInputFormat.ParquetSimpleFeatureTransformRecordReaderBase[org.locationtech.geomesa.fs.storage.common.jobs.StorageConfiguration.SimpleFeatureAction]", "kind" : "class"}, {"label" : "ParquetSimpleFeatureActionRecordReader", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureActionInputFormat.ParquetSimpleFeatureActionRecordReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#ParquetSimpleFeatureActionRecordReaderextendsParquetSimpleFeatureInputFormat.ParquetSimpleFeatureRecordReaderBase[org.locationtech.geomesa.fs.storage.common.jobs.StorageConfiguration.SimpleFeatureAction]", "kind" : "class"}, {"label" : "createRecordReader", "tail" : "(delegate: RecordReader[Void, SimpleFeature], conf: Configuration, split: FileSplit, sft: SimpleFeatureType, filter: Option[Filter], transform: Option[(String, SimpleFeatureType)]): RecordReader[SimpleFeatureAction, SimpleFeature]", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureActionInputFormat.createRecordReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#createRecordReader(delegate:org.apache.hadoop.mapreduce.RecordReader[Void,org.geotools.api.feature.simple.SimpleFeature],conf:org.apache.hadoop.conf.Configuration,split:org.apache.hadoop.mapreduce.lib.input.FileSplit,sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:Option[org.geotools.api.filter.Filter],transform:Option[(String,org.geotools.api.feature.simple.SimpleFeatureType)]):org.apache.hadoop.mapreduce.RecordReader[org.locationtech.geomesa.fs.storage.common.jobs.StorageConfiguration.SimpleFeatureAction,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureActionInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "isSplitable", "tail" : "(context: JobContext, filename: Path): Boolean", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureInputFormatBase.isSplitable", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#isSplitable(context:org.apache.hadoop.mapreduce.JobContext,filename:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "getSplits", "tail" : "(context: JobContext): List[InputSplit]", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureInputFormatBase.getSplits", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#getSplits(context:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "createRecordReader", "tail" : "(split: InputSplit, context: TaskAttemptContext): RecordReader[SimpleFeatureAction, SimpleFeature]", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureInputFormatBase.createRecordReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#createRecordReader(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordReader[T,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "listStatus", "tail" : "(arg0: JobContext): List[FileStatus]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.listStatus", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#listStatus(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureActionInputFormat.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat", "shortDescription" : "Input format for parquet files", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html", "members_class" : [{"label" : "ParquetSimpleFeatureTransformRecordReader", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureTransformRecordReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#ParquetSimpleFeatureTransformRecordReaderextendsParquetSimpleFeatureInputFormat.ParquetSimpleFeatureTransformRecordReaderBase[Void]", "kind" : "class"}, {"label" : "ParquetSimpleFeatureRecordReader", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureRecordReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#ParquetSimpleFeatureRecordReaderextendsParquetSimpleFeatureInputFormat.ParquetSimpleFeatureRecordReaderBase[Void]", "kind" : "class"}, {"label" : "createRecordReader", "tail" : "(delegate: RecordReader[Void, SimpleFeature], conf: Configuration, split: FileSplit, sft: SimpleFeatureType, filter: Option[Filter], transform: Option[(String, SimpleFeatureType)]): RecordReader[Void, SimpleFeature]", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.createRecordReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#createRecordReader(delegate:org.apache.hadoop.mapreduce.RecordReader[Void,org.geotools.api.feature.simple.SimpleFeature],conf:org.apache.hadoop.conf.Configuration,split:org.apache.hadoop.mapreduce.lib.input.FileSplit,sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:Option[org.geotools.api.filter.Filter],transform:Option[(String,org.geotools.api.feature.simple.SimpleFeatureType)]):org.apache.hadoop.mapreduce.RecordReader[Void,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat#<init>", "error" : "unsupported entity"}, {"label" : "isSplitable", "tail" : "(context: JobContext, filename: Path): Boolean", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureInputFormatBase.isSplitable", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#isSplitable(context:org.apache.hadoop.mapreduce.JobContext,filename:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"label" : "getSplits", "tail" : "(context: JobContext): List[InputSplit]", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureInputFormatBase.getSplits", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#getSplits(context:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.mapreduce.InputSplit]", "kind" : "def"}, {"label" : "createRecordReader", "tail" : "(split: InputSplit, context: TaskAttemptContext): RecordReader[Void, SimpleFeature]", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureInputFormatBase.createRecordReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#createRecordReader(split:org.apache.hadoop.mapreduce.InputSplit,context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordReader[T,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "getBlockIndex", "tail" : "(arg0: Array[BlockLocation], arg1: Long): Int", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getBlockIndex", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#getBlockIndex(x$1:Array[org.apache.hadoop.fs.BlockLocation],x$2:Long):Int", "kind" : "def"}, {"label" : "computeSplitSize", "tail" : "(arg0: Long, arg1: Long, arg2: Long): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.computeSplitSize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#computeSplitSize(x$1:Long,x$2:Long,x$3:Long):Long", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String], arg4: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String],x$5:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "makeSplit", "tail" : "(arg0: Path, arg1: Long, arg2: Long, arg3: Array[String]): FileSplit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.makeSplit", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#makeSplit(x$1:org.apache.hadoop.fs.Path,x$2:Long,x$3:Long,x$4:Array[String]):org.apache.hadoop.mapreduce.lib.input.FileSplit", "kind" : "def"}, {"label" : "addInputPathRecursively", "tail" : "(arg0: List[FileStatus], arg1: FileSystem, arg2: Path, arg3: PathFilter): Unit", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPathRecursively", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#addInputPathRecursively(x$1:java.util.List[org.apache.hadoop.fs.FileStatus],x$2:org.apache.hadoop.fs.FileSystem,x$3:org.apache.hadoop.fs.Path,x$4:org.apache.hadoop.fs.PathFilter):Unit", "kind" : "def"}, {"label" : "listStatus", "tail" : "(arg0: JobContext): List[FileStatus]", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.listStatus", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#listStatus(x$1:org.apache.hadoop.mapreduce.JobContext):java.util.List[org.apache.hadoop.fs.FileStatus]", "kind" : "def"}, {"label" : "getFormatMinSplitSize", "tail" : "(): Long", "member" : "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.getFormatMinSplitSize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#getFormatMinSplitSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ParquetSimpleFeatureTransformRecordReaderBase", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureTransformRecordReaderBase", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#ParquetSimpleFeatureTransformRecordReaderBase[T]extendsParquetSimpleFeatureInputFormat.ParquetSimpleFeatureRecordReaderBase[T]", "kind" : "abstract class"}, {"label" : "ParquetSimpleFeatureRecordReaderBase", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureRecordReaderBase", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#ParquetSimpleFeatureRecordReaderBase[T]extendsRecordReader[T,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "abstract class"}, {"label" : "ParquetSimpleFeatureInputFormatBase", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.ParquetSimpleFeatureInputFormatBase", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#ParquetSimpleFeatureInputFormatBase[T]extendsFileInputFormat[T,org.geotools.api.feature.simple.SimpleFeature]", "kind" : "abstract class"}, {"label" : "configure", "tail" : "(conf: Configuration, sft: SimpleFeatureType, query: Query): Unit", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureInputFormat.configure", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#configure(conf:org.apache.hadoop.conf.Configuration,sft:org.geotools.api.feature.simple.SimpleFeatureType,query:org.geotools.api.data.Query):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureInputFormat.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureOutputFormat", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html", "members_class" : [{"label" : "getOutputCommitter", "tail" : "(context: TaskAttemptContext): OutputCommitter", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureOutputFormat.getOutputCommitter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getOutputCommitter(context:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.OutputCommitter", "kind" : "def"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureOutputFormat#<init>", "error" : "unsupported entity"}, {"label" : "getWriteSupport", "tail" : "(arg0: Configuration): WriteSupport[SimpleFeature]", "member" : "org.apache.parquet.hadoop.ParquetOutputFormat.getWriteSupport", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getWriteSupport(x$1:org.apache.hadoop.conf.Configuration):org.apache.parquet.hadoop.api.WriteSupport[T]", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(arg0: Configuration, arg1: Path, arg2: CompressionCodecName, arg3: Mode): RecordWriter[Void, SimpleFeature]", "member" : "org.apache.parquet.hadoop.ParquetOutputFormat.getRecordWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getRecordWriter(x$1:org.apache.hadoop.conf.Configuration,x$2:org.apache.hadoop.fs.Path,x$3:org.apache.parquet.hadoop.metadata.CompressionCodecName,x$4:org.apache.parquet.hadoop.ParquetFileWriter.Mode):org.apache.hadoop.mapreduce.RecordWriter[Void,T]", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(arg0: Configuration, arg1: Path, arg2: CompressionCodecName): RecordWriter[Void, SimpleFeature]", "member" : "org.apache.parquet.hadoop.ParquetOutputFormat.getRecordWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getRecordWriter(x$1:org.apache.hadoop.conf.Configuration,x$2:org.apache.hadoop.fs.Path,x$3:org.apache.parquet.hadoop.metadata.CompressionCodecName):org.apache.hadoop.mapreduce.RecordWriter[Void,T]", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(arg0: TaskAttemptContext, arg1: Path, arg2: Mode): RecordWriter[Void, SimpleFeature]", "member" : "org.apache.parquet.hadoop.ParquetOutputFormat.getRecordWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getRecordWriter(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext,x$2:org.apache.hadoop.fs.Path,x$3:org.apache.parquet.hadoop.ParquetFileWriter.Mode):org.apache.hadoop.mapreduce.RecordWriter[Void,T]", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(arg0: TaskAttemptContext, arg1: Path): RecordWriter[Void, SimpleFeature]", "member" : "org.apache.parquet.hadoop.ParquetOutputFormat.getRecordWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getRecordWriter(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext,x$2:org.apache.hadoop.fs.Path):org.apache.hadoop.mapreduce.RecordWriter[Void,T]", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(arg0: TaskAttemptContext, arg1: Mode): RecordWriter[Void, SimpleFeature]", "member" : "org.apache.parquet.hadoop.ParquetOutputFormat.getRecordWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getRecordWriter(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext,x$2:org.apache.parquet.hadoop.ParquetFileWriter.Mode):org.apache.hadoop.mapreduce.RecordWriter[Void,T]", "kind" : "def"}, {"label" : "getRecordWriter", "tail" : "(arg0: TaskAttemptContext): RecordWriter[Void, SimpleFeature]", "member" : "org.apache.parquet.hadoop.ParquetOutputFormat.getRecordWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getRecordWriter(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordWriter[Void,T]", "kind" : "def"}, {"label" : "getDefaultWorkFile", "tail" : "(arg0: TaskAttemptContext, arg1: String): Path", "member" : "org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.getDefaultWorkFile", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getDefaultWorkFile(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext,x$2:String):org.apache.hadoop.fs.Path", "kind" : "def"}, {"label" : "checkOutputSpecs", "tail" : "(arg0: JobContext): Unit", "member" : "org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#checkOutputSpecs(x$1:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ParquetMultiFileOutputCommitter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetSimpleFeatureOutputFormat.ParquetMultiFileOutputCommitter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#ParquetMultiFileOutputCommitterextendsFileOutputCommitterwithLazyLogging", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetSimpleFeatureOutputFormat.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetStorageConfiguration", "members_trait" : [{"label" : "configureOutput", "tail" : "(sft: SimpleFeatureType, job: Job): Unit", "member" : "org.locationtech.geomesa.fs.storage.parquet.jobs.ParquetStorageConfiguration.configureOutput", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#configureOutput(sft:org.geotools.api.feature.simple.SimpleFeatureType,job:org.apache.hadoop.mapreduce.Job):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/jobs\/ParquetStorageConfiguration.html", "kind" : "trait"}], "org" : [], "org.locationtech.geomesa.fs.storage.parquet" : [{"name" : "org.locationtech.geomesa.fs.storage.parquet.FilterConverter", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html", "members_object" : [{"label" : "convert", "tail" : "(sft: SimpleFeatureType, filter: Filter): (Option[FilterPredicate], Option[Filter])", "member" : "org.locationtech.geomesa.fs.storage.parquet.FilterConverter.convert", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#convert(sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:org.geotools.api.filter.Filter):(Option[org.apache.parquet.filter2.predicate.FilterPredicate],Option[org.geotools.api.filter.Filter])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/FilterConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html", "members_class" : [{"label" : "UpdateObserver", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.UpdateObserver", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#UpdateObserverextendsAbstractFileSystemStorage.MetadataObserver", "kind" : "class"}, {"label" : "FileSystemUpdateWriterImpl", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.FileSystemUpdateWriterImpl", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#FileSystemUpdateWriterImplextendsFileSystemStorage.FileSystemUpdateWriter", "kind" : "class"}, {"label" : "ChunkedFileSystemWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.ChunkedFileSystemWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#ChunkedFileSystemWriterextendsFileSystemStorage.FileSystemWriter", "kind" : "class"}, {"label" : "createReader", "tail" : "(filter: Option[Filter], transform: Option[(String, SimpleFeatureType)]): FileSystemPathReader", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage.createReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#createReader(filter:Option[org.geotools.api.filter.Filter],transform:Option[(String,org.geotools.api.feature.simple.SimpleFeatureType)]):org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.FileSystemPathReader", "kind" : "def"}, {"label" : "createWriter", "tail" : "(file: Path, observer: FileSystemObserver): FileSystemWriter", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage.createWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#createWriter(file:org.apache.hadoop.fs.Path,observer:org.locationtech.geomesa.fs.storage.common.observer.FileSystemObserver):org.locationtech.geomesa.fs.storage.api.FileSystemStorage.FileSystemWriter", "kind" : "def"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage#<init>", "error" : "unsupported entity"}, {"label" : "compact", "tail" : "(partition: Option[String], fileSize: Option[Long], threads: Int): Unit", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.compact", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#compact(partition:Option[String],fileSize:Option[Long],threads:Int):Unit", "kind" : "def"}, {"label" : "getWriter", "tail" : "(filter: Filter, partition: Option[String], threads: Int): FileSystemUpdateWriter", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.getWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#getWriter(filter:org.geotools.api.filter.Filter,partition:Option[String],threads:Int):org.locationtech.geomesa.fs.storage.api.FileSystemStorage.FileSystemUpdateWriter", "kind" : "def"}, {"label" : "getWriter", "tail" : "(partition: String): FileSystemWriter", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.getWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#getWriter(partition:String):org.locationtech.geomesa.fs.storage.api.FileSystemStorage.FileSystemWriter", "kind" : "def"}, {"label" : "getReader", "tail" : "(original: Query, partition: Option[String], threads: Int): CloseableFeatureIterator", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.getReader", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#getReader(original:org.geotools.api.data.Query,partition:Option[String],threads:Int):org.locationtech.geomesa.fs.storage.api.CloseableFeatureIterator", "kind" : "def"}, {"label" : "getFilePaths", "tail" : "(partition: String): Seq[StorageFilePath]", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.getFilePaths", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#getFilePaths(partition:String):Seq[org.locationtech.geomesa.fs.storage.api.StorageMetadata.StorageFilePath]", "kind" : "def"}, {"label" : "metadata", "tail" : ": StorageMetadata", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.metadata", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#metadata:org.locationtech.geomesa.fs.storage.api.StorageMetadata", "kind" : "val"}, {"label" : "context", "tail" : ": FileSystemContext", "member" : "org.locationtech.geomesa.fs.storage.common.AbstractFileSystemStorage.context", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#context:org.locationtech.geomesa.fs.storage.api.FileSystemContext", "kind" : "val"}, {"label" : "profile", "tail" : "(message: String)(code: â‡’ R): R", "member" : "org.locationtech.geomesa.utils.stats.MethodProfiling.profile", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#profile[R](message:String)(code:=>R):R", "kind" : "def"}, {"label" : "profile", "tail" : "(onComplete: (R, Long) â‡’ Unit)(code: â‡’ R): R", "member" : "org.locationtech.geomesa.utils.stats.MethodProfiling.profile", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#profile[R](onComplete:(R,Long)=>Unit)(code:=>R):R", "kind" : "def"}, {"label" : "profile", "tail" : "(onComplete: (Long) â‡’ Unit)(code: â‡’ R): R", "member" : "org.locationtech.geomesa.utils.stats.MethodProfiling.profile", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#profile[R](onComplete:Long=>Unit)(code:=>R):R", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "updateFileSize", "tail" : "(estimator: FileSizeEstimator): Unit", "member" : "org.locationtech.geomesa.fs.storage.common.SizeableFileSystemStorage.updateFileSize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#updateFileSize(estimator:org.locationtech.geomesa.utils.io.FileSizeEstimator):Unit", "kind" : "def"}, {"label" : "estimator", "tail" : "(size: Long): FileSizeEstimator", "member" : "org.locationtech.geomesa.fs.storage.common.SizeableFileSystemStorage.estimator", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#estimator(size:Long):org.locationtech.geomesa.utils.io.FileSizeEstimator", "kind" : "def"}, {"label" : "fileIsSized", "tail" : "(path: Path, target: Long): Boolean", "member" : "org.locationtech.geomesa.fs.storage.common.SizeableFileSystemStorage.fileIsSized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#fileIsSized(path:org.apache.hadoop.fs.Path,target:Long):Boolean", "kind" : "def"}, {"label" : "targetSize", "tail" : "(size: Option[Long]): Option[Long]", "member" : "org.locationtech.geomesa.fs.storage.common.SizeableFileSystemStorage.targetSize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#targetSize(size:Option[Long]):Option[Long]", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.fs.storage.api.FileSystemStorage.close", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#close():Unit", "kind" : "def"}, {"label" : "getPartitionFilters", "tail" : "(filter: Filter, partition: Option[String]): Seq[PartitionFilter]", "member" : "org.locationtech.geomesa.fs.storage.api.FileSystemStorage.getPartitionFilters", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#getPartitionFilters(filter:org.geotools.api.filter.Filter,partition:Option[String]):Seq[org.locationtech.geomesa.fs.storage.api.PartitionFilter]", "kind" : "def"}, {"label" : "getPartitions", "tail" : "(filter: Filter): Seq[PartitionMetadata]", "member" : "org.locationtech.geomesa.fs.storage.api.FileSystemStorage.getPartitions", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#getPartitions(filter:org.geotools.api.filter.Filter):Seq[org.locationtech.geomesa.fs.storage.api.StorageMetadata.PartitionMetadata]", "kind" : "def"}, {"label" : "getPartitions", "tail" : "(): Seq[PartitionMetadata]", "member" : "org.locationtech.geomesa.fs.storage.api.FileSystemStorage.getPartitions", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#getPartitions:Seq[org.locationtech.geomesa.fs.storage.api.StorageMetadata.PartitionMetadata]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "validateParquetFile", "tail" : "(file: Path): Unit", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage.validateParquetFile", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#validateParquetFile(file:org.apache.hadoop.fs.Path):Unit", "kind" : "def"}, {"label" : "ParquetFileSystemWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage.ParquetFileSystemWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#ParquetFileSystemWriterextendsFileSystemStorage.FileSystemWriter", "kind" : "class"}, {"label" : "ParquetCompressionOpt", "tail" : ": String", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage.ParquetCompressionOpt", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#ParquetCompressionOpt:String", "kind" : "val"}, {"label" : "FileExtension", "tail" : ": String", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage.FileExtension", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#FileExtension:String", "kind" : "val"}, {"label" : "Encoding", "tail" : ": String", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage.Encoding", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#Encoding:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorage.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorageFactory", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(context: FileSystemContext, metadata: StorageMetadata): ParquetFileSystemStorage", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorageFactory.apply", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#apply(context:org.locationtech.geomesa.fs.storage.api.FileSystemContext,metadata:org.locationtech.geomesa.fs.storage.api.StorageMetadata):org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorage", "kind" : "def"}, {"label" : "encoding", "tail" : "(): String", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorageFactory.encoding", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#encoding:String", "kind" : "def"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetFileSystemStorageFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetFileSystemStorageFactory.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.ParquetPathReader", "shortDescription" : "", "members_class" : [{"label" : "read", "tail" : "(path: Path): CloseableIterator[SimpleFeature]", "member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetPathReader.read", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#read(path:org.apache.hadoop.fs.Path):org.locationtech.geomesa.utils.collection.CloseableIterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.ParquetPathReader#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/ParquetPathReader.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.ReadFilter", "shortDescription" : "Filter to read files", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html", "members_object" : [{"label" : "apply", "tail" : "(sft: SimpleFeatureType, filter: Option[Filter]): ReadFilter", "member" : "org.locationtech.geomesa.fs.storage.parquet.ReadFilter.apply", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#apply(sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:Option[org.geotools.api.filter.Filter]):org.locationtech.geomesa.fs.storage.parquet.package.ReadFilter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "org.locationtech.geomesa.fs.storage.parquet.ReadFilter#<init>", "error" : "unsupported entity"}, {"label" : "residual", "tail" : ": Option[Filter]", "member" : "org.locationtech.geomesa.fs.storage.parquet.ReadFilter.residual", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#residual:Option[org.geotools.api.filter.Filter]", "kind" : "val"}, {"label" : "parquet", "tail" : ": Option[FilterPredicate]", "member" : "org.locationtech.geomesa.fs.storage.parquet.ReadFilter.parquet", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#parquet:Option[org.apache.parquet.filter2.predicate.FilterPredicate]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadFilter.html", "kind" : "case class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.ReadSchema", "shortDescription" : "Schema to read and schema to return.", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html", "members_object" : [{"label" : "apply", "tail" : "(sft: SimpleFeatureType, filter: Option[Filter], transform: Option[(String, SimpleFeatureType)]): ReadSchema", "member" : "org.locationtech.geomesa.fs.storage.parquet.ReadSchema.apply", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#apply(sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:Option[org.geotools.api.filter.Filter],transform:Option[(String,org.geotools.api.feature.simple.SimpleFeatureType)]):org.locationtech.geomesa.fs.storage.parquet.package.ReadSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "org.locationtech.geomesa.fs.storage.parquet.ReadSchema#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : ": Option[(String, SimpleFeatureType)]", "member" : "org.locationtech.geomesa.fs.storage.parquet.ReadSchema.transform", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#transform:Option[(String,org.geotools.api.feature.simple.SimpleFeatureType)]", "kind" : "val"}, {"label" : "read", "tail" : ": SimpleFeatureType", "member" : "org.locationtech.geomesa.fs.storage.parquet.ReadSchema.read", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#read:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/package$$ReadSchema.html", "kind" : "case class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.SimpleFeatureParquetWriter", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html", "members_object" : [{"label" : "Builder", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.SimpleFeatureParquetWriter.Builder", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#BuilderextendsParquetWriter.Builder[org.geotools.api.feature.simple.SimpleFeature,org.locationtech.geomesa.fs.storage.parquet.SimpleFeatureParquetWriter.Builder]", "kind" : "class"}, {"label" : "builder", "tail" : "(file: Path, conf: Configuration): Builder", "member" : "org.locationtech.geomesa.fs.storage.parquet.SimpleFeatureParquetWriter.builder", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#builder(file:org.apache.hadoop.fs.Path,conf:org.apache.hadoop.conf.Configuration):org.locationtech.geomesa.fs.storage.parquet.SimpleFeatureParquetWriter.Builder", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/SimpleFeatureParquetWriter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.locationtech.geomesa.fs.storage.parquet.io" : [{"name" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema", "shortDescription" : "A paired simple feature type and parquet schema", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html", "members_object" : [{"label" : "GeoParquetMetadata", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.GeoParquetMetadata", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#GeoParquetMetadata", "kind" : "object"}, {"label" : "Binding", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.Binding", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#Binding", "kind" : "object"}, {"label" : "Binding", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.Binding", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#BindingextendsAnyRef", "kind" : "class"}, {"label" : "write", "tail" : "(conf: Configuration): Option[SimpleFeatureParquetSchema]", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.write", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#write(conf:org.apache.hadoop.conf.Configuration):Option[org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema]", "kind" : "def"}, {"label" : "read", "tail" : "(footer: FileMetaData): Option[SimpleFeatureParquetSchema]", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.read", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#read(footer:org.apache.parquet.hadoop.metadata.FileMetaData):Option[org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema]", "kind" : "def"}, {"label" : "read", "tail" : "(context: InitContext): Option[SimpleFeatureParquetSchema]", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.read", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#read(context:org.apache.parquet.hadoop.api.InitContext):Option[org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema]", "kind" : "def"}, {"label" : "GeometryColumnY", "tail" : ": String", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.GeometryColumnY", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#GeometryColumnY:String", "kind" : "val"}, {"label" : "GeometryColumnX", "tail" : ": String", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.GeometryColumnX", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#GeometryColumnX:String", "kind" : "val"}, {"label" : "CurrentSchemaVersion", "tail" : ": Int", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.CurrentSchemaVersion", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#CurrentSchemaVersion:Int", "kind" : "val"}, {"label" : "SchemaVersionKey", "tail" : ": String", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.SchemaVersionKey", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#SchemaVersionKey:String", "kind" : "val"}, {"label" : "FeatureIdField", "tail" : ": String", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.FeatureIdField", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#FeatureIdField:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "field", "tail" : "(i: Int): String", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.field", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#field(i:Int):String", "kind" : "def"}, {"label" : "metadata", "tail" : ": Map[String, String]", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.metadata", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#metadata:java.util.Map[String,String]", "kind" : "lazy val"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema#<init>", "error" : "unsupported entity"}, {"label" : "schema", "tail" : ": MessageType", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.schema", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#schema:org.apache.parquet.schema.MessageType", "kind" : "val"}, {"label" : "sft", "tail" : ": SimpleFeatureType", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchema.sft", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#sft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchema.html", "kind" : "case class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchemaV0", "shortDescription" : "Original parquet mapping - not versioned.", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html", "members_object" : [{"label" : "apply", "tail" : "(sft: SimpleFeatureType): MessageType", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureParquetSchemaV0.apply", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#apply(sft:org.geotools.api.feature.simple.SimpleFeatureType):org.apache.parquet.schema.MessageType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureParquetSchemaV0$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html", "members_class" : [{"label" : "prepareForRead", "tail" : "(configuration: Configuration, keyValueMetaData: Map[String, String], fileSchema: MessageType, readContext: ReadContext): RecordMaterializer[SimpleFeature]", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.prepareForRead", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#prepareForRead(configuration:org.apache.hadoop.conf.Configuration,keyValueMetaData:java.util.Map[String,String],fileSchema:org.apache.parquet.schema.MessageType,readContext:org.apache.parquet.hadoop.api.ReadSupport.ReadContext):org.apache.parquet.io.api.RecordMaterializer[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "init", "tail" : "(context: InitContext): ReadContext", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.init", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#init(context:org.apache.parquet.hadoop.api.InitContext):org.apache.parquet.hadoop.api.ReadSupport.ReadContext", "kind" : "def"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport#<init>", "error" : "unsupported entity"}, {"label" : "init", "tail" : "(arg0: Configuration, arg1: Map[String, String], arg2: MessageType): ReadContext", "member" : "org.apache.parquet.hadoop.api.ReadSupport.init", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#init(x$1:org.apache.hadoop.conf.Configuration,x$2:java.util.Map[String,String],x$3:org.apache.parquet.schema.MessageType):org.apache.parquet.hadoop.api.ReadSupport.ReadContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "GeometryWkbConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.GeometryWkbConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#GeometryWkbConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "MultiPolygonConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.MultiPolygonConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#MultiPolygonConverterextendsGroupConverter", "kind" : "class"}, {"label" : "MultiLineStringConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.MultiLineStringConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#MultiLineStringConverterextendsGroupConverter", "kind" : "class"}, {"label" : "PolygonConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.PolygonConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#PolygonConverterextendsGroupConverter", "kind" : "class"}, {"label" : "MultiPointConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.MultiPointConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#MultiPointConverterextendsGroupConverter", "kind" : "class"}, {"label" : "LineStringConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.LineStringConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#LineStringConverterextendsGroupConverter", "kind" : "class"}, {"label" : "PointConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.PointConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#PointConverterextendsGroupConverter", "kind" : "class"}, {"label" : "UuidConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.UuidConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#UuidConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "MapConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.MapConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#MapConverterextendsGroupConverter", "kind" : "class"}, {"label" : "ListConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.ListConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#ListConverterextendsGroupConverter", "kind" : "class"}, {"label" : "BytesConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.BytesConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#BytesConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "BooleanConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.BooleanConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#BooleanConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "DoubleConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.DoubleConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#DoubleConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "FloatConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.FloatConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#FloatConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "LongConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.LongConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#LongConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "IntConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.IntConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#IntConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "StringConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.StringConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#StringConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "DateConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.DateConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#DateConverterextendsPrimitiveConverter", "kind" : "class"}, {"label" : "SimpleFeatureGroupConverter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.SimpleFeatureGroupConverter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#SimpleFeatureGroupConverterextendsGroupConverterwithSimpleFeatureReadSupport.Settable", "kind" : "class"}, {"label" : "valueToSettable", "tail" : "(lambda: (AnyRef) â‡’ T): Settable", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.valueToSettable", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#valueToSettable[T](lambda:AnyRef=>T):org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.Settable", "kind" : "implicit def"}, {"label" : "Settable", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.Settable", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#SettableextendsAnyRef", "kind" : "trait"}, {"label" : "SimpleFeatureRecordMaterializer", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.SimpleFeatureRecordMaterializer", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#SimpleFeatureRecordMaterializerextendsRecordMaterializer[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "class"}, {"label" : "zip", "tail" : "(x: List[Double], y: List[Double]): Array[Coordinate]", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.zip", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#zip(x:java.util.List[Double],y:java.util.List[Double]):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "zip", "tail" : "(x: Array[Double], y: Array[Double]): Array[Coordinate]", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureReadSupport.zip", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#zip(x:Array[Double],y:Array[Double]):Array[org.locationtech.jts.geom.Coordinate]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureReadSupport.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html", "members_class" : [{"label" : "finalizeWrite", "tail" : "(): FinalizedWriteContext", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.finalizeWrite", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#finalizeWrite():org.apache.parquet.hadoop.api.WriteSupport.FinalizedWriteContext", "kind" : "def"}, {"label" : "write", "tail" : "(record: SimpleFeature): Unit", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.write", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#write(record:org.geotools.api.feature.simple.SimpleFeature):Unit", "kind" : "def"}, {"label" : "prepareForWrite", "tail" : "(recordConsumer: RecordConsumer): Unit", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.prepareForWrite", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#prepareForWrite(recordConsumer:org.apache.parquet.io.api.RecordConsumer):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(conf: Configuration): WriteContext", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.init", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#init(conf:org.apache.hadoop.conf.Configuration):org.apache.parquet.hadoop.api.WriteSupport.WriteContext", "kind" : "def"}, {"label" : "getName", "tail" : ": String", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.getName", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#getName:String", "kind" : "val"}, {"member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "GeometryWkbAttributeWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.GeometryWkbAttributeWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#GeometryWkbAttributeWriterextendsSimpleFeatureWriteSupport.AttributeWriter[org.locationtech.jts.geom.Geometry]", "kind" : "class"}, {"label" : "MultiPolygonAttributeWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.MultiPolygonAttributeWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#MultiPolygonAttributeWriterextendsSimpleFeatureWriteSupport.AttributeWriter[org.locationtech.jts.geom.MultiPolygon]", "kind" : "class"}, {"label" : "MultiLineStringAttributeWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.MultiLineStringAttributeWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#MultiLineStringAttributeWriterextendsSimpleFeatureWriteSupport.AbstractLinesWriter[org.locationtech.jts.geom.MultiLineString]", "kind" : "class"}, {"label" : "PolygonAttributeWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.PolygonAttributeWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#PolygonAttributeWriterextendsSimpleFeatureWriteSupport.AbstractLinesWriter[org.locationtech.jts.geom.Polygon]", "kind" : "class"}, {"label" : "AbstractLinesWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.AbstractLinesWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#AbstractLinesWriter[T<:org.locationtech.jts.geom.Geometry]extendsSimpleFeatureWriteSupport.AttributeWriter[T]", "kind" : "abstract class"}, {"label" : "MultiPointAttributeWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.MultiPointAttributeWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#MultiPointAttributeWriterextendsSimpleFeatureWriteSupport.AttributeWriter[org.locationtech.jts.geom.MultiPoint]", "kind" : "class"}, {"label" : "LineStringAttributeWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.LineStringAttributeWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#LineStringAttributeWriterextendsSimpleFeatureWriteSupport.AttributeWriter[org.locationtech.jts.geom.LineString]", "kind" : "class"}, {"label" : "PointAttributeWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.PointAttributeWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#PointAttributeWriterextendsSimpleFeatureWriteSupport.AttributeWriter[org.locationtech.jts.geom.Point]", "kind" : "class"}, {"label" : "UuidWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.UuidWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#UuidWriterextendsSimpleFeatureWriteSupport.AttributeWriter[java.util.UUID]", "kind" : "class"}, {"label" : "MapWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.MapWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#MapWriterextendsSimpleFeatureWriteSupport.AttributeWriter[java.util.Map[AnyRef,AnyRef]]", "kind" : "class"}, {"label" : "ListWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.ListWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#ListWriterextendsSimpleFeatureWriteSupport.AttributeWriter[java.util.List[AnyRef]]", "kind" : "class"}, {"label" : "BooleanWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.BooleanWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#BooleanWriterextendsSimpleFeatureWriteSupport.AttributeWriter[Boolean]", "kind" : "class"}, {"label" : "BytesWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.BytesWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#BytesWriterextendsSimpleFeatureWriteSupport.AttributeWriter[Array[Byte]]", "kind" : "class"}, {"label" : "StringWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.StringWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#StringWriterextendsSimpleFeatureWriteSupport.AttributeWriter[String]", "kind" : "class"}, {"label" : "LongWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.LongWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#LongWriterextendsSimpleFeatureWriteSupport.AttributeWriter[Long]", "kind" : "class"}, {"label" : "IntegerWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.IntegerWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#IntegerWriterextendsSimpleFeatureWriteSupport.AttributeWriter[Integer]", "kind" : "class"}, {"label" : "FloatWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.FloatWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#FloatWriterextendsSimpleFeatureWriteSupport.AttributeWriter[Float]", "kind" : "class"}, {"label" : "DoubleWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.DoubleWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#DoubleWriterextendsSimpleFeatureWriteSupport.AttributeWriter[Double]", "kind" : "class"}, {"label" : "DateWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.DateWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#DateWriterextendsSimpleFeatureWriteSupport.AttributeWriter[java.util.Date]", "kind" : "class"}, {"label" : "FidWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.FidWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#FidWriterextendsSimpleFeatureWriteSupport.AttributeWriter[String]", "kind" : "class"}, {"label" : "AttributeWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.AttributeWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#AttributeWriter[T<:AnyRef]extendsAnyRef", "kind" : "abstract class"}, {"label" : "attribute", "tail" : "(name: String, index: Int, bindings: Seq[ObjectType]): AttributeWriter[_]", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.attribute", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#attribute(name:String,index:Int,bindings:Seq[org.locationtech.geomesa.utils.geotools.ObjectType.ObjectType]):org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.AttributeWriter[_]", "kind" : "def"}, {"label" : "attribute", "tail" : "(descriptor: AttributeDescriptor, index: Int): AttributeWriter[_]", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.attribute", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#attribute(descriptor:org.geotools.api.feature.type.AttributeDescriptor,index:Int):org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.AttributeWriter[_]", "kind" : "def"}, {"label" : "SimpleFeatureWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.SimpleFeatureWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#SimpleFeatureWriter", "kind" : "object"}, {"label" : "SimpleFeatureWriter", "tail" : "", "member" : "org.locationtech.geomesa.fs.storage.parquet.io.SimpleFeatureWriteSupport.SimpleFeatureWriter", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#SimpleFeatureWriterextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/fs\/storage\/parquet\/io\/SimpleFeatureWriteSupport.html", "kind" : "class"}]};