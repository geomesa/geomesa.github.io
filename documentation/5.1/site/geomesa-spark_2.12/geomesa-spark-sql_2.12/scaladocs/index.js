Index.PACKAGES = {"org.locationtech" : [], "org.locationtech.geomesa" : [], "org.locationtech.geomesa.spark" : [], "org.locationtech.geomesa.spark.sedona" : [{"name" : "org.locationtech.geomesa.spark.sedona.SedonaGeometryLiteralRules", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html", "members_object" : [{"label" : "apply", "tail" : "(plan: LogicalPlan): LogicalPlan", "member" : "org.locationtech.geomesa.spark.sedona.SedonaGeometryLiteralRules.apply", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#apply(plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):org.apache.spark.sql.catalyst.plans.logical.LogicalPlan", "kind" : "def"}, {"label" : "isLikelySelective", "tail" : "(e: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.isLikelySelective", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#isLikelySelective(e:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "def"}, {"label" : "outputWithNullability", "tail" : "(output: Seq[Attribute], nonNullAttrExprIds: Seq[ExprId]): Seq[Attribute]", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.outputWithNullability", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#outputWithNullability(output:Seq[org.apache.spark.sql.catalyst.expressions.Attribute],nonNullAttrExprIds:Seq[org.apache.spark.sql.catalyst.expressions.ExprId]):Seq[org.apache.spark.sql.catalyst.expressions.Attribute]", "kind" : "def"}, {"label" : "isNullIntolerant", "tail" : "(expr: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.isNullIntolerant", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#isNullIntolerant(expr:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "def"}, {"label" : "extractPredicatesWithinOutputSet", "tail" : "(condition: Expression, outputSet: AttributeSet): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.extractPredicatesWithinOutputSet", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#extractPredicatesWithinOutputSet(condition:org.apache.spark.sql.catalyst.expressions.Expression,outputSet:org.apache.spark.sql.catalyst.expressions.AttributeSet):Option[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "canEvaluateWithinJoin", "tail" : "(expr: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.canEvaluateWithinJoin", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#canEvaluateWithinJoin(expr:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "def"}, {"label" : "canEvaluate", "tail" : "(expr: Expression, plan: LogicalPlan): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.canEvaluate", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#canEvaluate(expr:org.apache.spark.sql.catalyst.expressions.Expression,plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Boolean", "kind" : "def"}, {"label" : "buildBalancedPredicate", "tail" : "(expressions: Seq[Expression], op: (Expression, Expression) â‡’ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.buildBalancedPredicate", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#buildBalancedPredicate(expressions:Seq[org.apache.spark.sql.catalyst.expressions.Expression],op:(org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.expressions.Expression)=>org.apache.spark.sql.catalyst.expressions.Expression):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "splitDisjunctivePredicates", "tail" : "(condition: Expression): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.splitDisjunctivePredicates", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#splitDisjunctivePredicates(condition:org.apache.spark.sql.catalyst.expressions.Expression):Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "findExpressionAndTrackLineageDown", "tail" : "(exp: Expression, plan: LogicalPlan): Option[(Expression, LogicalPlan)]", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.findExpressionAndTrackLineageDown", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#findExpressionAndTrackLineageDown(exp:org.apache.spark.sql.catalyst.expressions.Expression,plan:org.apache.spark.sql.catalyst.plans.logical.LogicalPlan):Option[(org.apache.spark.sql.catalyst.expressions.Expression,org.apache.spark.sql.catalyst.plans.logical.LogicalPlan)]", "kind" : "def"}, {"label" : "splitConjunctivePredicates", "tail" : "(condition: Expression): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper.splitConjunctivePredicates", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#splitConjunctivePredicates(condition:org.apache.spark.sql.catalyst.expressions.Expression):Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "def"}, {"label" : "trimNonTopLevelAliases", "tail" : "(e: T): T", "member" : "org.apache.spark.sql.catalyst.expressions.AliasHelper.trimNonTopLevelAliases", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#trimNonTopLevelAliases[T<:org.apache.spark.sql.catalyst.expressions.Expression](e:T):T", "kind" : "def"}, {"label" : "trimAliases", "tail" : "(e: Expression): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.AliasHelper.trimAliases", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#trimAliases(e:org.apache.spark.sql.catalyst.expressions.Expression):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "replaceAliasButKeepName", "tail" : "(expr: NamedExpression, aliasMap: AttributeMap[Alias]): NamedExpression", "member" : "org.apache.spark.sql.catalyst.expressions.AliasHelper.replaceAliasButKeepName", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#replaceAliasButKeepName(expr:org.apache.spark.sql.catalyst.expressions.NamedExpression,aliasMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Alias]):org.apache.spark.sql.catalyst.expressions.NamedExpression", "kind" : "def"}, {"label" : "replaceAlias", "tail" : "(expr: Expression, aliasMap: AttributeMap[Alias]): Expression", "member" : "org.apache.spark.sql.catalyst.expressions.AliasHelper.replaceAlias", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#replaceAlias(expr:org.apache.spark.sql.catalyst.expressions.Expression,aliasMap:org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Alias]):org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "def"}, {"label" : "getAliasMap", "tail" : "(exprs: Seq[NamedExpression]): AttributeMap[Alias]", "member" : "org.apache.spark.sql.catalyst.expressions.AliasHelper.getAliasMap", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#getAliasMap(exprs:Seq[org.apache.spark.sql.catalyst.expressions.NamedExpression]):org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Alias]", "kind" : "def"}, {"label" : "getAliasMap", "tail" : "(plan: Aggregate): AttributeMap[Alias]", "member" : "org.apache.spark.sql.catalyst.expressions.AliasHelper.getAliasMap", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#getAliasMap(plan:org.apache.spark.sql.catalyst.plans.logical.Aggregate):org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Alias]", "kind" : "def"}, {"label" : "getAliasMap", "tail" : "(plan: Project): AttributeMap[Alias]", "member" : "org.apache.spark.sql.catalyst.expressions.AliasHelper.getAliasMap", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#getAliasMap(plan:org.apache.spark.sql.catalyst.plans.logical.Project):org.apache.spark.sql.catalyst.expressions.AttributeMap[org.apache.spark.sql.catalyst.expressions.Alias]", "kind" : "def"}, {"label" : "ruleName", "tail" : ": String", "member" : "org.apache.spark.sql.catalyst.rules.Rule.ruleName", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#ruleName:String", "kind" : "val"}, {"label" : "ruleId", "tail" : ": RuleId", "member" : "org.apache.spark.sql.catalyst.rules.Rule.ruleId", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#ruleId:org.apache.spark.sql.catalyst.rules.RuleId", "kind" : "lazy val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: â‡’ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#logName:String", "kind" : "def"}, {"label" : "conf", "tail" : "(): SQLConf", "member" : "org.apache.spark.sql.catalyst.SQLConfHelper.conf", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#conf:org.apache.spark.sql.internal.SQLConf", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sedona\/SedonaGeometryLiteralRules$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.locationtech.geomesa.spark.sql" : [{"name" : "org.locationtech.geomesa.spark.sql.Aggregates", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html", "members_object" : [{"label" : "instance", "tail" : "(args: Any*): Aggregate", "member" : "org.locationtech.geomesa.spark.sql.Aggregates.instance", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#instance(args:Any*):org.apache.spark.sql.catalyst.plans.logical.Aggregate", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/Aggregates$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.DataFrameFunctions", "shortDescription" : "DataFrame DSL functions for working with GeoTools", "object" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html", "members_object" : [{"label" : "Library", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.DataFrameFunctions.Library", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#LibraryextendsDataFrameFunctions.SpatialRelations", "kind" : "trait"}, {"label" : "SpatialRelations", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.DataFrameFunctions.SpatialRelations", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#SpatialRelationsextendsAnyRef", "kind" : "trait"}, {"label" : "jDoubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.locationtech.geomesa.spark.sql.DataFrameFunctions.jDoubleEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#jDoubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "doubleEncoder", "tail" : "(): Encoder[Double]", "member" : "org.locationtech.geomesa.spark.sql.DataFrameFunctions.doubleEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#doubleEncoder:org.apache.spark.sql.Encoder[Double]", "kind" : "implicit def"}, {"label" : "integerEncoder", "tail" : "(): Encoder[Integer]", "member" : "org.locationtech.geomesa.spark.sql.DataFrameFunctions.integerEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#integerEncoder:org.apache.spark.sql.Encoder[Integer]", "kind" : "implicit def"}, {"label" : "jtsGeometryCollectionEncoder", "tail" : "(): Encoder[GeometryCollection]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsGeometryCollectionEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#jtsGeometryCollectionEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.GeometryCollection]", "kind" : "implicit def"}, {"label" : "jtsMultiPolygonEncoder", "tail" : "(): Encoder[MultiPolygon]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsMultiPolygonEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#jtsMultiPolygonEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.MultiPolygon]", "kind" : "implicit def"}, {"label" : "jtsMultiLineStringEncoder", "tail" : "(): Encoder[MultiLineString]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsMultiLineStringEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#jtsMultiLineStringEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.MultiLineString]", "kind" : "implicit def"}, {"label" : "jtsMultiPointEncoder", "tail" : "(): Encoder[MultiPoint]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsMultiPointEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#jtsMultiPointEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.MultiPoint]", "kind" : "implicit def"}, {"label" : "jtsPolygonEncoder", "tail" : "(): Encoder[Polygon]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsPolygonEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#jtsPolygonEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.Polygon]", "kind" : "implicit def"}, {"label" : "jtsLineStringEncoder", "tail" : "(): Encoder[LineString]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsLineStringEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#jtsLineStringEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.LineString]", "kind" : "implicit def"}, {"label" : "jtsPointEncoder", "tail" : "(): Encoder[Point]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsPointEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#jtsPointEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.Point]", "kind" : "implicit def"}, {"label" : "jtsGeometryEncoder", "tail" : "(): Encoder[Geometry]", "member" : "org.locationtech.geomesa.spark.jts.encoders.SpatialEncoders.jtsGeometryEncoder", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#jtsGeometryEncoder:org.apache.spark.sql.Encoder[org.locationtech.jts.geom.Geometry]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/DataFrameFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.GeoJSONExtensions", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html", "members_object" : [{"label" : "GeoJSONDataFrame", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.GeoJSONExtensions.GeoJSONDataFrame", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#GeoJSONDataFrameextendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoJSONExtensions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.GeoMesaDataSource", "shortDescription" : "", "members_class" : [{"label" : "createRelation", "tail" : "(sqlContext: SQLContext, mode: SaveMode, parameters: Map[String, String], data: DataFrame): BaseRelation", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaDataSource.createRelation", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#createRelation(sqlContext:org.apache.spark.sql.SQLContext,mode:org.apache.spark.sql.SaveMode,parameters:Map[String,String],data:org.apache.spark.sql.DataFrame):org.apache.spark.sql.sources.BaseRelation", "kind" : "def"}, {"label" : "createRelation", "tail" : "(sqlContext: SQLContext, parameters: Map[String, String], schema: StructType): BaseRelation", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaDataSource.createRelation", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#createRelation(sqlContext:org.apache.spark.sql.SQLContext,parameters:Map[String,String],schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.sources.BaseRelation", "kind" : "def"}, {"label" : "createRelation", "tail" : "(sqlContext: SQLContext, parameters: Map[String, String]): BaseRelation", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaDataSource.createRelation", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#createRelation(sqlContext:org.apache.spark.sql.SQLContext,parameters:Map[String,String]):org.apache.spark.sql.sources.BaseRelation", "kind" : "def"}, {"label" : "shortName", "tail" : "(): String", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaDataSource.shortName", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#shortName():String", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.sql.GeoMesaDataSource#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaDataSource.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation", "shortDescription" : "", "members_case class" : [{"label" : "unhandledFilters", "tail" : "(filters: Array[Filter]): Array[Filter]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation.unhandledFilters", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#unhandledFilters(filters:Array[org.apache.spark.sql.sources.Filter]):Array[org.apache.spark.sql.sources.Filter]", "kind" : "def"}, {"label" : "buildScan", "tail" : "(requiredColumns: Array[String], filters: Array[Filter]): RDD[Row]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation.buildScan", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#buildScan(requiredColumns:Array[String],filters:Array[org.apache.spark.sql.sources.Filter]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation#<init>", "error" : "unsupported entity"}, {"label" : "props", "tail" : ": Option[Seq[String]]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation.props", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#props:Option[Seq[String]]", "kind" : "val"}, {"label" : "filt", "tail" : ": Filter", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation.filt", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#filt:org.geotools.api.filter.Filter", "kind" : "val"}, {"label" : "condition", "tail" : ": Expression", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation.condition", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#condition:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation.schema", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#schema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "rightRel", "tail" : ": GeoMesaRelation", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation.rightRel", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#rightRel:org.locationtech.geomesa.spark.sql.GeoMesaRelation", "kind" : "val"}, {"label" : "leftRel", "tail" : ": GeoMesaRelation", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation.leftRel", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#leftRel:org.locationtech.geomesa.spark.sql.GeoMesaRelation", "kind" : "val"}, {"label" : "sqlContext", "tail" : ": SQLContext", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation.sqlContext", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#sqlContext:org.apache.spark.sql.SQLContext", "kind" : "val"}, {"label" : "needConversion", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sources.BaseRelation.needConversion", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#needConversion:Boolean", "kind" : "def"}, {"label" : "sizeInBytes", "tail" : "(): Long", "member" : "org.apache.spark.sql.sources.BaseRelation.sizeInBytes", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#sizeInBytes:Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaJoinRelation.html", "kind" : "case class"}, {"name" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions", "shortDescription" : "Re-wrapping the UDFs so we can access them from PySpark without using the SQL API.", "object" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html", "members_object" : [{"label" : "st_transform", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_transform", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_transform:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_difference", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_difference", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_difference:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_intersection", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_intersection", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_intersection:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_lengthSpheroid", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_lengthSpheroid", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_lengthSpheroid:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_lengthSphere", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_lengthSphere", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_lengthSphere:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_length", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_length", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_length:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_distanceSpheroid", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_distanceSpheroid", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_distanceSpheroid:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_distanceSphere", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_distanceSphere", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_distanceSphere:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_distance", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_distance", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_distance:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_closestPoint", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_closestPoint", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_closestPoint:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_centroid", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_centroid", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_centroid:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_area", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_area", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_area:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_relateBool", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_relateBool", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_relateBool:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_relate", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_relate", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_relate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_within", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_within", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_within:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_touches", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_touches", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_touches:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_overlaps", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_overlaps", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_overlaps:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_intersects", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_intersects", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_intersects:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_equals", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_equals:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_disjoint", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_disjoint", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_disjoint:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_crosses", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_crosses", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_crosses:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_covers", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_covers", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_covers:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_contains", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_contains", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_contains:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_translate", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_translate", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_translate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_makeValid", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_makeValid", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_makeValid:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_idlSafeGeom", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_idlSafeGeom", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_idlSafeGeom:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_bufferPoint", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_bufferPoint", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_bufferPoint:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_antimeridianSafeGeom", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_antimeridianSafeGeom", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_antimeridianSafeGeom:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_geoHash", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_geoHash", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_geoHash:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_asText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_asText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_asText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_asLatLonText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_asLatLonText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_asLatLonText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_asGeoJSON", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_asGeoJSON", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_asGeoJSON:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_asBinary", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_asBinary", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_asBinary:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_polygonFromText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_polygonFromText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_polygonFromText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_polygon", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_polygon", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_polygon:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_pointFromWKB", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_pointFromWKB", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_pointFromWKB:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_pointFromText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_pointFromText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_pointFromText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_pointFromGeoHash", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_pointFromGeoHash", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_pointFromGeoHash:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_point", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_point", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_point:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_mPolyFromText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_mPolyFromText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_mPolyFromText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_mPointFromText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_mPointFromText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_mPointFromText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_mLineFromText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_mLineFromText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_mLineFromText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_makePointM", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_makePointM", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_makePointM:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_makeLine", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_makeLine", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_makeLine:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_makePoint", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_makePoint", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_makePoint:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_makePolygon", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_makePolygon", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_makePolygon:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_makeBBOX", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_makeBBOX", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_makeBBOX:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_makeBox2D", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_makeBox2D", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_makeBox2D:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_lineFromText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_lineFromText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_lineFromText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_geomFromWKB", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_geomFromWKB", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_geomFromWKB:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_geomFromWKT", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_geomFromWKT", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_geomFromWKT:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_geometryFromText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_geometryFromText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_geometryFromText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_geomFromText", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_geomFromText", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_geomFromText:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_geomFromGeoJSON", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_geomFromGeoJSON", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_geomFromGeoJSON:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_box2DFromGeoHash", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_box2DFromGeoHash", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_box2DFromGeoHash:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_geomFromGeoHash", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_geomFromGeoHash", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_geomFromGeoHash:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_byteArray", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_byteArray", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_byteArray:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_castToGeometry", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_castToGeometry", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_castToGeometry:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_castToLineString", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_castToLineString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_castToLineString:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_castToPolygon", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_castToPolygon", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_castToPolygon:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_castToPoint", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_castToPoint", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_castToPoint:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_y", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_y", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_y:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_x", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_x", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_x:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_pointN", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_pointN", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_pointN:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_numPoints", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_numPoints", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_numPoints:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_numGeometries", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_numGeometries", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_numGeometries:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_isValid", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_isValid", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_isValid:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_isSimple", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_isSimple", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_isSimple:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_isRing", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_isRing", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_isRing:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_isEmpty", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_isEmpty", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_isEmpty:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_isCollection", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_isCollection", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_isCollection:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_isClosed", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_isClosed", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_isClosed:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_interiorRingN", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_interiorRingN", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_interiorRingN:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_geometryN", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_geometryN", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_geometryN:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_exteriorRing", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_exteriorRing", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_exteriorRing:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_envelope", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_envelope", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_envelope:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_dimension", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_dimension", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_dimension:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_coordDim", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_coordDim", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_coordDim:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "st_boundary", "tail" : "(): UserDefinedFunction", "member" : "org.locationtech.geomesa.spark.sql.GeomesaPysparkFunctions.st_boundary", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#st_boundary:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeomesaPysparkFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation", "shortDescription" : "The Spark Relation that builds the scan over the GeoMesa table", "object" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html", "members_object" : [{"label" : "PartitionedIndexedRDD", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.PartitionedIndexedRDD", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#PartitionedIndexedRDDextendsGeoMesaRelation.CachedRDDwithProductwithSerializable", "kind" : "case class"}, {"label" : "IndexedRDD", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.IndexedRDD", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#IndexedRDDextendsGeoMesaRelation.CachedRDDwithProductwithSerializable", "kind" : "case class"}, {"label" : "CachedRDD", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.CachedRDD", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#CachedRDDextendsAnyRef", "kind" : "sealed trait"}, {"label" : "PartitionedRDD", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.PartitionedRDD", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#PartitionedRDDextendsProductwithSerializable", "kind" : "case class"}, {"label" : "apply", "tail" : "(sqlContext: SQLContext, params: Map[String, String], schema: StructType, sft: SimpleFeatureType): GeoMesaRelation", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.apply", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#apply(sqlContext:org.apache.spark.sql.SQLContext,params:Map[String,String],schema:org.apache.spark.sql.types.StructType,sft:org.geotools.api.feature.simple.SimpleFeatureType):org.locationtech.geomesa.spark.sql.GeoMesaRelation", "kind" : "def"}, {"label" : "apply", "tail" : "(sqlContext: SQLContext, params: Map[String, String], schema: StructType): GeoMesaRelation", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.apply", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#apply(sqlContext:org.apache.spark.sql.SQLContext,params:Map[String,String],schema:org.apache.spark.sql.types.StructType):org.locationtech.geomesa.spark.sql.GeoMesaRelation", "kind" : "def"}, {"label" : "apply", "tail" : "(sqlContext: SQLContext, params: Map[String, String]): GeoMesaRelation", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.apply", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#apply(sqlContext:org.apache.spark.sql.SQLContext,params:Map[String,String]):org.locationtech.geomesa.spark.sql.GeoMesaRelation", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "unhandledFilters", "tail" : "(filters: Array[Filter]): Array[Filter]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.unhandledFilters", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#unhandledFilters(filters:Array[org.apache.spark.sql.sources.Filter]):Array[org.apache.spark.sql.sources.Filter]", "kind" : "def"}, {"label" : "buildScan", "tail" : "(requiredColumns: Array[String], filters: Array[Filter]): RDD[Row]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.buildScan", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#buildScan(requiredColumns:Array[String],filters:Array[org.apache.spark.sql.sources.Filter]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "join", "tail" : "(other: GeoMesaRelation, condition: Expression): Option[GeoMesaJoinRelation]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.join", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#join(other:org.locationtech.geomesa.spark.sql.GeoMesaRelation,condition:org.apache.spark.sql.catalyst.expressions.Expression):Option[org.locationtech.geomesa.spark.sql.GeoMesaJoinRelation]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation#<init>", "error" : "unsupported entity"}, {"label" : "partitioned", "tail" : ": Option[PartitionedRDD]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.partitioned", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#partitioned:Option[org.locationtech.geomesa.spark.sql.GeoMesaRelation.PartitionedRDD]", "kind" : "val"}, {"label" : "cached", "tail" : ": Option[CachedRDD]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.cached", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#cached:Option[org.locationtech.geomesa.spark.sql.GeoMesaRelation.CachedRDD]", "kind" : "val"}, {"label" : "filter", "tail" : ": Option[Filter]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.filter", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#filter:Option[org.geotools.api.filter.Filter]", "kind" : "val"}, {"label" : "params", "tail" : ": Map[String, String]", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.params", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#params:Map[String,String]", "kind" : "val"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.schema", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#schema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "sft", "tail" : ": SimpleFeatureType", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.sft", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#sft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "val"}, {"label" : "sqlContext", "tail" : ": SQLContext", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaRelation.sqlContext", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#sqlContext:org.apache.spark.sql.SQLContext", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "needConversion", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.sources.BaseRelation.needConversion", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#needConversion:Boolean", "kind" : "def"}, {"label" : "sizeInBytes", "tail" : "(): Long", "member" : "org.apache.spark.sql.sources.BaseRelation.sizeInBytes", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#sizeInBytes:Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaRelation.html", "kind" : "case class"}, {"name" : "org.locationtech.geomesa.spark.sql.GeoMesaSparkSQL", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html", "members_object" : [{"label" : "GEOMESA_SQL_FEATURE", "tail" : ": String", "member" : "org.locationtech.geomesa.spark.sql.GeoMesaSparkSQL.GEOMESA_SQL_FEATURE", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#GEOMESA_SQL_FEATURE:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeoMesaSparkSQL$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.GeometricDistanceFunctions", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html", "members_object" : [{"label" : "fastDistance", "tail" : "(c1: Coordinate, c2: Coordinate): Double", "member" : "org.locationtech.geomesa.spark.sql.GeometricDistanceFunctions.fastDistance", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#fastDistance(c1:org.locationtech.jts.geom.Coordinate,c2:org.locationtech.jts.geom.Coordinate):Double", "kind" : "def"}, {"label" : "registerFunctions", "tail" : "(sqlContext: SQLContext): Unit", "member" : "org.locationtech.geomesa.spark.sql.GeometricDistanceFunctions.registerFunctions", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#registerFunctions(sqlContext:org.apache.spark.sql.SQLContext):Unit", "kind" : "def"}, {"label" : "distanceNames", "tail" : ": Map[AnyRef, String]", "member" : "org.locationtech.geomesa.spark.sql.GeometricDistanceFunctions.distanceNames", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#distanceNames:scala.collection.immutable.Map[Object,String]", "kind" : "val"}, {"label" : "ST_Transform", "tail" : ": (Geometry, String, String) â‡’ Geometry", "member" : "org.locationtech.geomesa.spark.sql.GeometricDistanceFunctions.ST_Transform", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#ST_Transform:(org.locationtech.jts.geom.Geometry,String,String)=>org.locationtech.jts.geom.Geometry", "kind" : "val"}, {"label" : "ST_LengthSpheroid", "tail" : ": (LineString) â‡’ Double", "member" : "org.locationtech.geomesa.spark.sql.GeometricDistanceFunctions.ST_LengthSpheroid", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#ST_LengthSpheroid:org.locationtech.jts.geom.LineString=>Double", "kind" : "val"}, {"label" : "ST_AggregateDistanceSpheroid", "tail" : ": (Seq[Geometry]) â‡’ Double", "member" : "org.locationtech.geomesa.spark.sql.GeometricDistanceFunctions.ST_AggregateDistanceSpheroid", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#ST_AggregateDistanceSpheroid:Seq[org.locationtech.jts.geom.Geometry]=>Double", "kind" : "val"}, {"label" : "ST_DistanceSpheroid", "tail" : ": (Geometry, Geometry) â‡’ Double", "member" : "org.locationtech.geomesa.spark.sql.GeometricDistanceFunctions.ST_DistanceSpheroid", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#ST_DistanceSpheroid:(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)=>Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/GeometricDistanceFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.IndexPartitioner", "shortDescription" : "", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "org.locationtech.geomesa.spark.sql.IndexPartitioner.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.locationtech.geomesa.spark.sql.IndexPartitioner.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "getPartition", "tail" : "(key: Any): Int", "member" : "org.locationtech.geomesa.spark.sql.IndexPartitioner.getPartition", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#getPartition(key:Any):Int", "kind" : "def"}, {"label" : "numPartitions", "tail" : "(): Int", "member" : "org.locationtech.geomesa.spark.sql.IndexPartitioner.numPartitions", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#numPartitions:Int", "kind" : "def"}, {"member" : "org.locationtech.geomesa.spark.sql.IndexPartitioner#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/sql\/IndexPartitioner.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.spark.sql.OverlapAction", "shortDescription" : "", "members_class" : [{"label" : "overlap", "tail" : "(s0: SweepLineInterval, s1: SweepLineInterval): Unit", "member" : "org.locationtech.geomesa.spark.sql.OverlapAction.overlap", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#overlap(s0:org.locationtech.jts.index.sweepline.SweepLineInterval,s1:org.locationtech.jts.index.sweepline.SweepLineInterval):Unit", "kind" : "def"}, {"label" : "joinList", "tail" : ": ListBuffer[(SimpleFeature, SimpleFeature)]", "member" : "org.locationtech.geomesa.spark.sql.OverlapAction.joinList", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#joinList:scala.collection.mutable.ListBuffer[(org.geotools.api.feature.simple.SimpleFeature,org.geotools.api.feature.simple.SimpleFeature)]", "kind" : "val"}, {"member" : "org.locationtech.geomesa.spark.sql.OverlapAction#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/spark\/sql\/OverlapAction.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.spark.sql.RelationUtils", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html", "members_object" : [{"label" : "queryBoundary", "tail" : "(node: AbstractNode, boundaries: List[Envelope], minSize: Int, maxSize: Int): Int", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.queryBoundary", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#queryBoundary(node:org.locationtech.jts.index.strtree.AbstractNode,boundaries:java.util.List[org.locationtech.jts.geom.Envelope],minSize:Int,maxSize:Int):Int", "kind" : "def"}, {"label" : "rtreePartitioning", "tail" : "(rawRDD: RDD[SimpleFeature], numPartitions: Int, sampleSize: Int, thresholdMultiplier: Double): List[Envelope]", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.rtreePartitioning", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#rtreePartitioning(rawRDD:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature],numPartitions:Int,sampleSize:Int,thresholdMultiplier:Double):List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "wholeEarthPartitioning", "tail" : "(numPartitions: Int): List[Envelope]", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.wholeEarthPartitioning", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#wholeEarthPartitioning(numPartitions:Int):List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "weightedPartitioning", "tail" : "(rawRDD: RDD[SimpleFeature], bound: Envelope, numPartitions: Int, sampleSize: Int): List[Envelope]", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.weightedPartitioning", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#weightedPartitioning(rawRDD:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature],bound:org.locationtech.jts.geom.Envelope,numPartitions:Int,sampleSize:Int):List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "equalPartitioning", "tail" : "(bound: Envelope, numPartitions: Int): List[Envelope]", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.equalPartitioning", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#equalPartitioning(bound:org.locationtech.jts.geom.Envelope,numPartitions:Int):List[org.locationtech.jts.geom.Envelope]", "kind" : "def"}, {"label" : "getBound", "tail" : "(rdd: RDD[SimpleFeature]): Envelope", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.getBound", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#getBound(rdd:org.apache.spark.rdd.RDD[org.geotools.api.feature.simple.SimpleFeature]):org.locationtech.jts.geom.Envelope", "kind" : "def"}, {"label" : "gridIdMapper", "tail" : "(geom: Geometry, envelopes: List[Envelope]): List[Int]", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.gridIdMapper", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#gridIdMapper(geom:org.locationtech.jts.geom.Geometry,envelopes:List[org.locationtech.jts.geom.Envelope]):List[Int]", "kind" : "def"}, {"label" : "gridIdMapper", "tail" : "(sf: SimpleFeature, envelopes: List[Envelope], geometryOrdinal: Int): List[(Int, SimpleFeature)]", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.gridIdMapper", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#gridIdMapper(sf:org.geotools.api.feature.simple.SimpleFeature,envelopes:List[org.locationtech.jts.geom.Envelope],geometryOrdinal:Int):List[(Int,org.geotools.api.feature.simple.SimpleFeature)]", "kind" : "def"}, {"label" : "grid", "tail" : "(rdd: SpatialRDD, envelopes: List[Envelope], parallelism: Int): RDD[(Int, Iterable[SimpleFeature])]", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.grid", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#grid(rdd:org.locationtech.geomesa.spark.SpatialRDD,envelopes:List[org.locationtech.jts.geom.Envelope],parallelism:Int):org.apache.spark.rdd.RDD[(Int,Iterable[org.geotools.api.feature.simple.SimpleFeature])]", "kind" : "def"}, {"label" : "CoordinateOrdering", "tail" : ": Ordering[Coordinate]", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.CoordinateOrdering", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#CoordinateOrdering:Ordering[org.locationtech.jts.geom.Coordinate]", "kind" : "implicit val"}, {"label" : "ff", "tail" : ": FilterFactory", "member" : "org.locationtech.geomesa.spark.sql.RelationUtils.ff", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#ff:org.geotools.api.filter.FilterFactory", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/RelationUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.SparkUtils", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html", "members_object" : [{"label" : "SimpleFeatureRowMapping", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.SimpleFeatureRowMapping", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#SimpleFeatureRowMappingextendsProductwithSerializable", "kind" : "case class"}, {"label" : "joinedSf2row", "tail" : "(schema: StructType, sf1: SimpleFeature, sf2: SimpleFeature, extractors: Array[(SimpleFeature) â‡’ AnyRef]): Row", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.joinedSf2row", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#joinedSf2row(schema:org.apache.spark.sql.types.StructType,sf1:org.geotools.api.feature.simple.SimpleFeature,sf2:org.geotools.api.feature.simple.SimpleFeature,extractors:Array[org.geotools.api.feature.simple.SimpleFeature=>AnyRef]):org.apache.spark.sql.Row", "kind" : "def"}, {"label" : "sf2row", "tail" : "(schema: StructType, sf: SimpleFeature, extractors: Array[(SimpleFeature) â‡’ AnyRef]): Row", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.sf2row", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#sf2row(schema:org.apache.spark.sql.types.StructType,sf:org.geotools.api.feature.simple.SimpleFeature,extractors:Array[org.geotools.api.feature.simple.SimpleFeature=>AnyRef]):org.apache.spark.sql.Row", "kind" : "def"}, {"label" : "rowsToFeatures", "tail" : "(name: String, schema: StructType): SimpleFeatureRowMapping", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.rowsToFeatures", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#rowsToFeatures(name:String,schema:org.apache.spark.sql.types.StructType):org.locationtech.geomesa.spark.sql.SparkUtils.SimpleFeatureRowMapping", "kind" : "def"}, {"label" : "rowsToFeatures", "tail" : "(sft: SimpleFeatureType, schema: StructType): SimpleFeatureRowMapping", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.rowsToFeatures", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#rowsToFeatures(sft:org.geotools.api.feature.simple.SimpleFeatureType,schema:org.apache.spark.sql.types.StructType):org.locationtech.geomesa.spark.sql.SparkUtils.SimpleFeatureRowMapping", "kind" : "def"}, {"label" : "createStructType", "tail" : "(sft: SimpleFeatureType): StructType", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.createStructType", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#createStructType(sft:org.geotools.api.feature.simple.SimpleFeatureType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "createFeatureType", "tail" : "(name: String, struct: StructType): SimpleFeatureType", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.createFeatureType", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#createFeatureType(name:String,struct:org.apache.spark.sql.types.StructType):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "sparkFilterToCQLFilter", "tail" : "(filt: Filter): Option[Filter]", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.sparkFilterToCQLFilter", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#sparkFilterToCQLFilter(filt:org.apache.spark.sql.sources.Filter):Option[org.geotools.api.filter.Filter]", "kind" : "def"}, {"label" : "getExtractors", "tail" : "(requiredColumns: Array[String], schema: StructType): Array[(SimpleFeature) â‡’ AnyRef]", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.getExtractors", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#getExtractors(requiredColumns:Array[String],schema:org.apache.spark.sql.types.StructType):Array[org.geotools.api.feature.simple.SimpleFeature=>AnyRef]", "kind" : "def"}, {"label" : "ff", "tail" : ": FilterFactory", "member" : "org.locationtech.geomesa.spark.sql.SparkUtils.ff", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#ff:org.geotools.api.filter.FilterFactory", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.SparkVersions", "shortDescription" : "Utility to smooth over differences in spark API versions using reflection", "object" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html", "members_object" : [{"label" : "copy", "tail" : "(j: Join): CopyJoin", "member" : "org.locationtech.geomesa.spark.sql.SparkVersions.copy", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#copy(j:org.apache.spark.sql.catalyst.plans.logical.Join):org.locationtech.geomesa.spark.sql.SparkVersions.CopyJoin", "kind" : "def"}, {"label" : "copy", "tail" : "(r: LogicalRelation): CopyLogicalRelation", "member" : "org.locationtech.geomesa.spark.sql.SparkVersions.copy", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#copy(r:org.apache.spark.sql.execution.datasources.LogicalRelation):org.locationtech.geomesa.spark.sql.SparkVersions.CopyLogicalRelation", "kind" : "def"}, {"label" : "CopyJoin", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.SparkVersions.CopyJoin", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#CopyJoinextendsAnyVal", "kind" : "final class"}, {"label" : "CopyLogicalRelation", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.SparkVersions.CopyLogicalRelation", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#CopyLogicalRelationextendsAnyVal", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SparkVersions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.SQLRules", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html", "members_object" : [{"label" : "registerOptimizations", "tail" : "(sqlContext: SQLContext): Unit", "member" : "org.locationtech.geomesa.spark.sql.SQLRules.registerOptimizations", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#registerOptimizations(sqlContext:org.apache.spark.sql.SQLContext):Unit", "kind" : "def"}, {"label" : "SpatialJoinStrategy", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.SQLRules.SpatialJoinStrategy", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#SpatialJoinStrategy", "kind" : "object"}, {"label" : "SpatialOptimizationsRule", "tail" : "", "member" : "org.locationtech.geomesa.spark.sql.SQLRules.SpatialOptimizationsRule", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#SpatialOptimizationsRule", "kind" : "object"}, {"label" : "sparkExprToGTExpr", "tail" : "(expression: Expression): Option[Expression]", "member" : "org.locationtech.geomesa.spark.sql.SQLRules.sparkExprToGTExpr", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#sparkExprToGTExpr(expression:org.apache.spark.sql.catalyst.expressions.Expression):Option[org.geotools.api.filter.expression.Expression]", "kind" : "def"}, {"label" : "sparkFilterToGTFilter", "tail" : "(expr: Expression): Option[Filter]", "member" : "org.locationtech.geomesa.spark.sql.SQLRules.sparkFilterToGTFilter", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#sparkFilterToGTFilter(expr:org.apache.spark.sql.catalyst.expressions.Expression):Option[org.geotools.api.filter.Filter]", "kind" : "def"}, {"label" : "sedonaExprToGTFilter", "tail" : "(pred: ST_Predicate): Option[Filter]", "member" : "org.locationtech.geomesa.spark.sql.SQLRules.sedonaExprToGTFilter", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#sedonaExprToGTFilter(pred:org.apache.spark.sql.sedona_sql.expressions.ST_Predicate):Option[org.geotools.api.filter.Filter]", "kind" : "def"}, {"label" : "funcToFF", "tail" : "(func: AnyRef): Option[(Expression, Expression) â‡’ Filter]", "member" : "org.locationtech.geomesa.spark.sql.SQLRules.funcToFF", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#funcToFF(func:AnyRef):Option[(org.geotools.api.filter.expression.Expression,org.geotools.api.filter.expression.Expression)=>org.geotools.api.filter.Filter]", "kind" : "def"}, {"label" : "scalaUDFtoGTFilter", "tail" : "(udf: Expression): Option[Filter]", "member" : "org.locationtech.geomesa.spark.sql.SQLRules.scalaUDFtoGTFilter", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#scalaUDFtoGTFilter(udf:org.apache.spark.sql.catalyst.expressions.Expression):Option[org.geotools.api.filter.Filter]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLRules$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.spark.sql.SQLTypes", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html", "members_object" : [{"label" : "init", "tail" : "(sqlContext: SQLContext): Unit", "member" : "org.locationtech.geomesa.spark.sql.SQLTypes.init", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#init(sqlContext:org.apache.spark.sql.SQLContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/spark\/sql\/SQLTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org" : []};