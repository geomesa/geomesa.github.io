Index.PACKAGES = {"org.locationtech" : [], "org.locationtech.geomesa" : [], "org.locationtech.geomesa.lambda.stream.kafka" : [{"name" : "org.locationtech.geomesa.lambda.stream.kafka.DataStorePersistence", "shortDescription" : "Persists expired entries to the data store", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.DataStorePersistence.close", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#close():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.DataStorePersistence.run", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#run():Unit", "kind" : "def"}, {"member" : "org.locationtech.geomesa.lambda.stream.kafka.DataStorePersistence#<init>", "error" : "unsupported entity"}, {"label" : "profile", "tail" : "(message: String)(code: ⇒ R): R", "member" : "org.locationtech.geomesa.utils.stats.MethodProfiling.profile", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#profile[R](message:String)(code:=>R):R", "kind" : "def"}, {"label" : "profile", "tail" : "(onComplete: (R, Long) ⇒ Unit)(code: ⇒ R): R", "member" : "org.locationtech.geomesa.utils.stats.MethodProfiling.profile", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#profile[R](onComplete:(R,Long)=>Unit)(code:=>R):R", "kind" : "def"}, {"label" : "profile", "tail" : "(onComplete: (Long) ⇒ Unit)(code: ⇒ R): R", "member" : "org.locationtech.geomesa.utils.stats.MethodProfiling.profile", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#profile[R](onComplete:Long=>Unit)(code:=>R):R", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/DataStorePersistence.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaCacheLoader", "shortDescription" : "Consumes from kakfa and populates the local cache", "members_class" : [{"label" : "ConsumerRunnable", "tail" : "", "member" : "org.locationtech.geomesa.kafka.consumer.ThreadedConsumer.ConsumerRunnable", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#ConsumerRunnableextendsRunnable", "kind" : "class"}, {"label" : "consume", "tail" : "(record: ConsumerRecord[Array[Byte], Array[Byte]]): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaCacheLoader.consume", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#consume(record:org.apache.kafka.clients.consumer.ConsumerRecord[Array[Byte],Array[Byte]]):Unit", "kind" : "def"}, {"member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaCacheLoader#<init>", "error" : "unsupported entity"}, {"label" : "createConsumerRunnable", "tail" : "(id: String, consumer: Consumer[Array[Byte], Array[Byte]], handler: ConsumerErrorHandler): Runnable", "member" : "org.locationtech.geomesa.kafka.consumer.ThreadedConsumer.createConsumerRunnable", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#createConsumerRunnable(id:String,consumer:org.apache.kafka.clients.consumer.Consumer[Array[Byte],Array[Byte]],handler:org.locationtech.geomesa.kafka.consumer.ThreadedConsumer.ConsumerErrorHandler):Runnable", "kind" : "def"}, {"label" : "isOpen", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.kafka.consumer.BaseThreadedConsumer.isOpen", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#isOpen:Boolean", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.consumer.BaseThreadedConsumer.close", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#close():Unit", "kind" : "def"}, {"label" : "startConsumers", "tail" : "(handler: Option[ConsumerErrorHandler]): Unit", "member" : "org.locationtech.geomesa.kafka.consumer.BaseThreadedConsumer.startConsumers", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#startConsumers(handler:Option[org.locationtech.geomesa.kafka.consumer.ThreadedConsumer.ConsumerErrorHandler]):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaCacheLoader.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache", "shortDescription" : "Locally cached features", "object" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html", "members_class" : [{"label" : "offsetChanged", "tail" : "(partition: Int, offset: Long): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.offsetChanged", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#offsetChanged(partition:Int,offset:Long):Unit", "kind" : "def"}, {"label" : "expired", "tail" : "(partition: Int, expiry: Long): ExpiredFeatures", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.expired", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#expired(partition:Int,expiry:Long):org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.ExpiredFeatures", "kind" : "def"}, {"label" : "expired", "tail" : "(expiry: Long): Seq[Int]", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.expired", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#expired(expiry:Long):Seq[Int]", "kind" : "def"}, {"label" : "delete", "tail" : "(feature: SimpleFeature, partition: Int, offset: Long, created: Long): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.delete", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#delete(feature:org.geotools.api.feature.simple.SimpleFeature,partition:Int,offset:Long,created:Long):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(feature: SimpleFeature, partition: Int, offset: Long, created: Long): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.add", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#add(feature:org.geotools.api.feature.simple.SimpleFeature,partition:Int,offset:Long,created:Long):Unit", "kind" : "def"}, {"label" : "all", "tail" : "(): Iterator[SimpleFeature]", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.all", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#all():Iterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String): SimpleFeature", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.get", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#get(id:String):org.geotools.api.feature.simple.SimpleFeature", "kind" : "def"}, {"label" : "partitionAssigned", "tail" : "(partition: Int, offset: Long): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.partitionAssigned", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#partitionAssigned(partition:Int,offset:Long):Unit", "kind" : "def"}, {"member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "OffsetFeature", "tail" : "", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.OffsetFeature", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#OffsetFeatureextendsAnyRef", "kind" : "trait"}, {"label" : "ExpiredFeatures", "tail" : "", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.ExpiredFeatures", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#ExpiredFeaturesextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ExpiringFeatureCache", "tail" : "", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.ExpiringFeatureCache", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#ExpiringFeatureCacheextendsAnyRef", "kind" : "trait"}, {"label" : "WritableFeatureCache", "tail" : "", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.WritableFeatureCache", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#WritableFeatureCacheextendsAnyRef", "kind" : "trait"}, {"label" : "ReadableFeatureCache", "tail" : "", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaFeatureCache.ReadableFeatureCache", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#ReadableFeatureCacheextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaFeatureCache.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaQueryRunner", "shortDescription" : "", "members_class" : [{"label" : "features", "tail" : "(sft: SimpleFeatureType, filter: Option[Filter]): CloseableIterator[SimpleFeature]", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaQueryRunner.features", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#features(sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:Option[org.geotools.api.filter.Filter]):org.locationtech.geomesa.utils.collection.CloseableIterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaQueryRunner.name", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#name:String", "kind" : "val"}, {"member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaQueryRunner#<init>", "error" : "unsupported entity"}, {"label" : "interceptors", "tail" : ": QueryInterceptorFactory", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaQueryRunner.interceptors", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#interceptors:org.locationtech.geomesa.index.planning.QueryInterceptor.QueryInterceptorFactory", "kind" : "val"}, {"label" : "getReturnSft", "tail" : "(sft: SimpleFeatureType, hints: Hints): SimpleFeatureType", "member" : "org.locationtech.geomesa.index.planning.LocalQueryRunner.getReturnSft", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#getReturnSft(sft:org.geotools.api.feature.simple.SimpleFeatureType,hints:org.geotools.util.factory.Hints):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "runQuery", "tail" : "(sft: SimpleFeatureType, original: Query, explain: Explainer): QueryResult", "member" : "org.locationtech.geomesa.index.planning.LocalQueryRunner.runQuery", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#runQuery(sft:org.geotools.api.feature.simple.SimpleFeatureType,original:org.geotools.api.data.Query,explain:org.locationtech.geomesa.index.utils.Explainer):org.locationtech.geomesa.index.planning.QueryRunner.QueryResult", "kind" : "def"}, {"label" : "configureQuery", "tail" : "(sft: SimpleFeatureType, original: Query): Query", "member" : "org.locationtech.geomesa.index.planning.QueryRunner.configureQuery", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#configureQuery(sft:org.geotools.api.feature.simple.SimpleFeatureType,original:org.geotools.api.data.Query):org.geotools.api.data.Query", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaQueryRunner.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.close", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#close():Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.flush", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#flush():Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.persist", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#persist():Unit", "kind" : "def"}, {"label" : "delete", "tail" : "(original: SimpleFeature): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.delete", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#delete(original:org.geotools.api.feature.simple.SimpleFeature):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(original: SimpleFeature): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.write", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#write(original:org.geotools.api.feature.simple.SimpleFeature):Unit", "kind" : "def"}, {"label" : "read", "tail" : "(filter: Option[Filter], transforms: Option[Array[String]], hints: Option[Hints], explain: Explainer): QueryResult", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.read", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#read(filter:Option[org.geotools.api.filter.Filter],transforms:Option[Array[String]],hints:Option[org.geotools.util.factory.Hints],explain:org.locationtech.geomesa.index.utils.Explainer):org.locationtech.geomesa.index.planning.QueryRunner.QueryResult", "kind" : "def"}, {"label" : "removeSchema", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.removeSchema", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#removeSchema():Unit", "kind" : "def"}, {"label" : "createSchema", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.createSchema", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#createSchema():Unit", "kind" : "def"}, {"member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore#<init>", "error" : "unsupported entity"}, {"label" : "sft", "tail" : ": SimpleFeatureType", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.sft", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#sft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "stats", "tail" : ": GeoMesaStats", "member" : "org.locationtech.geomesa.lambda.stream.TransientStore.stats", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#stats:org.locationtech.geomesa.index.stats.GeoMesaStats", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "FeatureIdPartitioner", "tail" : "", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.FeatureIdPartitioner", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#FeatureIdPartitionerextendsPartitioner", "kind" : "class"}, {"label" : "consumer", "tail" : "(connect: Map[String, String], group: String): Consumer[Array[Byte], Array[Byte]]", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.consumer", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#consumer(connect:Map[String,String],group:String):org.apache.kafka.clients.consumer.Consumer[Array[Byte],Array[Byte]]", "kind" : "def"}, {"label" : "producer", "tail" : "(sft: SimpleFeatureType, connect: Map[String, String]): Producer[Array[Byte], Array[Byte]]", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.producer", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#producer(sft:org.geotools.api.feature.simple.SimpleFeatureType,connect:Map[String,String]):org.apache.kafka.clients.producer.Producer[Array[Byte],Array[Byte]]", "kind" : "def"}, {"label" : "topic", "tail" : "(ns: String, typeName: String): String", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.topic", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#topic(ns:String,typeName:String):String", "kind" : "def"}, {"label" : "topic", "tail" : "(ns: String, sft: SimpleFeatureType): String", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.topic", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#topic(ns:String,sft:org.geotools.api.feature.simple.SimpleFeatureType):String", "kind" : "def"}, {"label" : "MessageTypes", "tail" : "", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.MessageTypes", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#MessageTypes", "kind" : "object"}, {"label" : "LoadIntervalProperty", "tail" : ": SystemProperty", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.LoadIntervalProperty", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#LoadIntervalProperty:org.locationtech.geomesa.utils.conf.GeoMesaSystemProperties.SystemProperty", "kind" : "val"}, {"label" : "SimpleFeatureSpecConfig", "tail" : ": String", "member" : "org.locationtech.geomesa.lambda.stream.kafka.KafkaStore.SimpleFeatureSpecConfig", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#SimpleFeatureSpecConfig:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/stream\/kafka\/KafkaStore.html", "kind" : "class"}], "org.locationtech.geomesa.lambda.stream" : [{"name" : "org.locationtech.geomesa.lambda.stream.OffsetManager", "members_trait" : [{"label" : "acquireLock", "tail" : "(topic: String, partition: Int, timeOut: Long): Option[Closeable]", "member" : "org.locationtech.geomesa.lambda.stream.OffsetManager.acquireLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#acquireLock(topic:String,partition:Int,timeOut:Long):Option[java.io.Closeable]", "kind" : "def"}, {"label" : "withLock", "tail" : "(key: String, timeOut: Long, fn: ⇒ T, fallback: ⇒ T): T", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.withLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#withLock[T](key:String,timeOut:Long,fn:=>T,fallback:=>T):T", "kind" : "def"}, {"label" : "withLock", "tail" : "(key: String, timeOut: Long, fn: ⇒ T): T", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.withLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#withLock[T](key:String,timeOut:Long,fn:=>T):T", "kind" : "def"}, {"label" : "withLock", "tail" : "(key: String, fn: ⇒ T): T", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.withLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#withLock[T](key:String,fn:=>T):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "removeOffsetListener", "tail" : "(topic: String, listener: OffsetListener): Unit", "member" : "org.locationtech.geomesa.lambda.stream.OffsetManager.removeOffsetListener", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#removeOffsetListener(topic:String,listener:org.locationtech.geomesa.lambda.stream.OffsetManager.OffsetListener):Unit", "kind" : "abstract def"}, {"label" : "addOffsetListener", "tail" : "(topic: String, listener: OffsetListener): Unit", "member" : "org.locationtech.geomesa.lambda.stream.OffsetManager.addOffsetListener", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#addOffsetListener(topic:String,listener:org.locationtech.geomesa.lambda.stream.OffsetManager.OffsetListener):Unit", "kind" : "abstract def"}, {"label" : "deleteOffsets", "tail" : "(topic: String): Unit", "member" : "org.locationtech.geomesa.lambda.stream.OffsetManager.deleteOffsets", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#deleteOffsets(topic:String):Unit", "kind" : "abstract def"}, {"label" : "setOffset", "tail" : "(topic: String, partition: Int, offset: Long): Unit", "member" : "org.locationtech.geomesa.lambda.stream.OffsetManager.setOffset", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#setOffset(topic:String,partition:Int,offset:Long):Unit", "kind" : "abstract def"}, {"label" : "getOffset", "tail" : "(topic: String, partition: Int): Long", "member" : "org.locationtech.geomesa.lambda.stream.OffsetManager.getOffset", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#getOffset(topic:String,partition:Int):Long", "kind" : "abstract def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.io.Closeable.close", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#close():Unit", "kind" : "abstract def"}, {"label" : "acquireDistributedLock", "tail" : "(key: String, timeOut: Long): Option[Closeable]", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.acquireDistributedLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#acquireDistributedLock(key:String,timeOut:Long):Option[java.io.Closeable]", "kind" : "abstract def"}, {"label" : "acquireDistributedLock", "tail" : "(key: String): Closeable", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.acquireDistributedLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html#acquireDistributedLock(key:String):java.io.Closeable", "kind" : "abstract def"}], "shortDescription" : "Manages storing and watching distributed offsets", "object" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html", "members_object" : [{"label" : "OffsetListener", "tail" : "", "member" : "org.locationtech.geomesa.lambda.stream.OffsetManager.OffsetListener", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#OffsetListenerextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/lambda\/stream\/OffsetManager.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.lambda.stream.TransientStore", "members_trait" : [{"label" : "stats", "tail" : ": GeoMesaStats", "member" : "org.locationtech.geomesa.lambda.stream.TransientStore.stats", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#stats:org.locationtech.geomesa.index.stats.GeoMesaStats", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "persist", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.TransientStore.persist", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#persist():Unit", "kind" : "abstract def"}, {"label" : "delete", "tail" : "(feature: SimpleFeature): Unit", "member" : "org.locationtech.geomesa.lambda.stream.TransientStore.delete", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#delete(feature:org.geotools.api.feature.simple.SimpleFeature):Unit", "kind" : "abstract def"}, {"label" : "write", "tail" : "(feature: SimpleFeature): Unit", "member" : "org.locationtech.geomesa.lambda.stream.TransientStore.write", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#write(feature:org.geotools.api.feature.simple.SimpleFeature):Unit", "kind" : "abstract def"}, {"label" : "read", "tail" : "(filter: Option[Filter], transforms: Option[Array[String]], hints: Option[Hints], explain: Explainer): QueryResult", "member" : "org.locationtech.geomesa.lambda.stream.TransientStore.read", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#read(filter:Option[org.geotools.api.filter.Filter],transforms:Option[Array[String]],hints:Option[org.geotools.util.factory.Hints],explain:org.locationtech.geomesa.index.utils.Explainer):org.locationtech.geomesa.index.planning.QueryRunner.QueryResult", "kind" : "abstract def"}, {"label" : "removeSchema", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.TransientStore.removeSchema", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#removeSchema():Unit", "kind" : "abstract def"}, {"label" : "createSchema", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.TransientStore.createSchema", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#createSchema():Unit", "kind" : "abstract def"}, {"label" : "sft", "tail" : "(): SimpleFeatureType", "member" : "org.locationtech.geomesa.lambda.stream.TransientStore.sft", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#sft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "abstract def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.io.Closeable.close", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html#close():Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/locationtech\/geomesa\/lambda\/stream\/TransientStore.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html", "members_class" : [{"label" : "acquireDistributedLock", "tail" : "(path: String, timeOut: Long): Option[Closeable]", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.acquireDistributedLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#acquireDistributedLock(path:String,timeOut:Long):Option[java.io.Closeable]", "kind" : "def"}, {"label" : "acquireDistributedLock", "tail" : "(path: String): Closeable", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.acquireDistributedLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#acquireDistributedLock(path:String):java.io.Closeable", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.close", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#close():Unit", "kind" : "def"}, {"label" : "removeOffsetListener", "tail" : "(topic: String, listener: OffsetListener): Unit", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.removeOffsetListener", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#removeOffsetListener(topic:String,listener:org.locationtech.geomesa.lambda.stream.OffsetManager.OffsetListener):Unit", "kind" : "def"}, {"label" : "addOffsetListener", "tail" : "(topic: String, listener: OffsetListener): Unit", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.addOffsetListener", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#addOffsetListener(topic:String,listener:org.locationtech.geomesa.lambda.stream.OffsetManager.OffsetListener):Unit", "kind" : "def"}, {"label" : "deleteOffsets", "tail" : "(topic: String): Unit", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.deleteOffsets", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#deleteOffsets(topic:String):Unit", "kind" : "def"}, {"label" : "setOffset", "tail" : "(topic: String, partition: Int, offset: Long): Unit", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.setOffset", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#setOffset(topic:String,partition:Int,offset:Long):Unit", "kind" : "def"}, {"label" : "getOffset", "tail" : "(topic: String, partition: Int): Long", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.getOffset", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#getOffset(topic:String,partition:Int):Long", "kind" : "def"}, {"member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager#<init>", "error" : "unsupported entity"}, {"label" : "acquireLock", "tail" : "(topic: String, partition: Int, timeOut: Long): Option[Closeable]", "member" : "org.locationtech.geomesa.lambda.stream.OffsetManager.acquireLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#acquireLock(topic:String,partition:Int,timeOut:Long):Option[java.io.Closeable]", "kind" : "def"}, {"label" : "withLock", "tail" : "(key: String, timeOut: Long, fn: ⇒ T, fallback: ⇒ T): T", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.withLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#withLock[T](key:String,timeOut:Long,fn:=>T,fallback:=>T):T", "kind" : "def"}, {"label" : "withLock", "tail" : "(key: String, timeOut: Long, fn: ⇒ T): T", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.withLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#withLock[T](key:String,timeOut:Long,fn:=>T):T", "kind" : "def"}, {"label" : "withLock", "tail" : "(key: String, fn: ⇒ T): T", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.withLock", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#withLock[T](key:String,fn:=>T):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "deserializeOffsets", "tail" : "(bytes: Array[Byte]): Long", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.deserializeOffsets", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#deserializeOffsets(bytes:Array[Byte]):Long", "kind" : "def"}, {"label" : "serializeOffset", "tail" : "(offset: Long): Array[Byte]", "member" : "org.locationtech.geomesa.lambda.stream.ZookeeperOffsetManager.serializeOffset", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#serializeOffset(offset:Long):Array[Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/stream\/ZookeeperOffsetManager.html", "kind" : "class"}], "org.locationtech.geomesa.lambda" : [], "org.locationtech.geomesa.lambda.stream.stats" : [{"name" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.close", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#close():Unit", "kind" : "def"}, {"label" : "getStat", "tail" : "(sft: SimpleFeatureType, query: String, filter: Filter, exact: Boolean): Option[T]", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.getStat", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getStat[T<:org.locationtech.geomesa.utils.stats.Stat](sft:org.geotools.api.feature.simple.SimpleFeatureType,query:String,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[T]", "kind" : "def"}, {"label" : "getZ3Histogram", "tail" : "(sft: SimpleFeatureType, geom: String, dtg: String, period: TimePeriod, bins: Int, filter: Filter, exact: Boolean): Option[Z3Histogram]", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.getZ3Histogram", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getZ3Histogram(sft:org.geotools.api.feature.simple.SimpleFeatureType,geom:String,dtg:String,period:org.locationtech.geomesa.curve.TimePeriod.TimePeriod,bins:Int,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.Z3Histogram]", "kind" : "def"}, {"label" : "getHistogram", "tail" : "(sft: SimpleFeatureType, attribute: String, bins: Int, min: T, max: T, filter: Filter, exact: Boolean): Option[Histogram[T]]", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.getHistogram", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getHistogram[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,bins:Int,min:T,max:T,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.Histogram[T]]", "kind" : "def"}, {"label" : "getTopK", "tail" : "(sft: SimpleFeatureType, attribute: String, filter: Filter, exact: Boolean): Option[TopK[T]]", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.getTopK", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getTopK[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.TopK[T]]", "kind" : "def"}, {"label" : "getFrequency", "tail" : "(sft: SimpleFeatureType, attribute: String, precision: Int, filter: Filter, exact: Boolean): Option[Frequency[T]]", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.getFrequency", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getFrequency[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,precision:Int,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.Frequency[T]]", "kind" : "def"}, {"label" : "getEnumeration", "tail" : "(sft: SimpleFeatureType, attribute: String, filter: Filter, exact: Boolean): Option[EnumerationStat[T]]", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.getEnumeration", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getEnumeration[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.EnumerationStat[T]]", "kind" : "def"}, {"label" : "getMinMax", "tail" : "(sft: SimpleFeatureType, attribute: String, filter: Filter, exact: Boolean): Option[MinMax[T]]", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.getMinMax", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getMinMax[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.MinMax[T]]", "kind" : "def"}, {"label" : "getCount", "tail" : "(sft: SimpleFeatureType, filter: Filter, exact: Boolean, queryHints: Hints): Option[Long]", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.getCount", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getCount(sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:org.geotools.api.filter.Filter,exact:Boolean,queryHints:org.geotools.util.factory.Hints):Option[Long]", "kind" : "def"}, {"label" : "writer", "tail" : ": GeoMesaStatWriter", "member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats.writer", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#writer:org.locationtech.geomesa.index.stats.GeoMesaStats.GeoMesaStatWriter", "kind" : "val"}, {"member" : "org.locationtech.geomesa.lambda.stream.stats.TransientStats#<init>", "error" : "unsupported entity"}, {"label" : "getSeqStat", "tail" : "(sft: SimpleFeatureType, queries: Seq[String], filter: Filter, exact: Boolean): Seq[T]", "member" : "org.locationtech.geomesa.index.stats.GeoMesaStats.getSeqStat", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getSeqStat[T<:org.locationtech.geomesa.utils.stats.Stat](sft:org.geotools.api.feature.simple.SimpleFeatureType,queries:Seq[String],filter:org.geotools.api.filter.Filter,exact:Boolean):Seq[T]", "kind" : "def"}, {"label" : "getBounds", "tail" : "(sft: SimpleFeatureType, filter: Filter, exact: Boolean): ReferencedEnvelope", "member" : "org.locationtech.geomesa.index.stats.GeoMesaStats.getBounds", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getBounds(sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:org.geotools.api.filter.Filter,exact:Boolean):org.geotools.geometry.jts.ReferencedEnvelope", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/stream\/stats\/TransientStats.html", "kind" : "class"}], "org" : [], "org.locationtech.geomesa.lambda.data" : [{"name" : "org.locationtech.geomesa.lambda.data.LambdaDataStore", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html", "members_class" : [{"label" : "getLockingManager", "tail" : "(): LockingManager", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getLockingManager", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getLockingManager():org.geotools.api.data.LockingManager", "kind" : "def"}, {"label" : "getInfo", "tail" : "(): ServiceInfo", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getInfo", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getInfo():org.geotools.api.data.ServiceInfo", "kind" : "def"}, {"label" : "dispose", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.dispose", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#dispose():Unit", "kind" : "def"}, {"label" : "getFeatureWriter", "tail" : "(typeName: String, filter: Filter, transaction: Transaction): SimpleFeatureWriter", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getFeatureWriter", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getFeatureWriter(typeName:String,filter:org.geotools.api.filter.Filter,transaction:org.geotools.api.data.Transaction):org.geotools.api.data.SimpleFeatureWriter", "kind" : "def"}, {"label" : "getFeatureWriter", "tail" : "(typeName: String, transaction: Transaction): SimpleFeatureWriter", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getFeatureWriter", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getFeatureWriter(typeName:String,transaction:org.geotools.api.data.Transaction):org.geotools.api.data.SimpleFeatureWriter", "kind" : "def"}, {"label" : "getFeatureWriterAppend", "tail" : "(typeName: String, transaction: Transaction): SimpleFeatureWriter", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getFeatureWriterAppend", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getFeatureWriterAppend(typeName:String,transaction:org.geotools.api.data.Transaction):org.geotools.api.data.SimpleFeatureWriter", "kind" : "def"}, {"label" : "getFeatureReader", "tail" : "(query: Query, transaction: Transaction): SimpleFeatureReader", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getFeatureReader", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getFeatureReader(query:org.geotools.api.data.Query,transaction:org.geotools.api.data.Transaction):org.geotools.api.data.SimpleFeatureReader", "kind" : "def"}, {"label" : "getFeatureSource", "tail" : "(typeName: String): SimpleFeatureSource", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getFeatureSource", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getFeatureSource(typeName:String):org.geotools.api.data.SimpleFeatureSource", "kind" : "def"}, {"label" : "getFeatureSource", "tail" : "(typeName: Name): SimpleFeatureSource", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getFeatureSource", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getFeatureSource(typeName:org.geotools.api.feature.type.Name):org.geotools.api.data.SimpleFeatureSource", "kind" : "def"}, {"label" : "removeSchema", "tail" : "(typeName: String): Unit", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.removeSchema", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#removeSchema(typeName:String):Unit", "kind" : "def"}, {"label" : "removeSchema", "tail" : "(typeName: Name): Unit", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.removeSchema", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#removeSchema(typeName:org.geotools.api.feature.type.Name):Unit", "kind" : "def"}, {"label" : "updateSchema", "tail" : "(typeName: String, featureType: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.updateSchema", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#updateSchema(typeName:String,featureType:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "updateSchema", "tail" : "(typeName: Name, featureType: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.updateSchema", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#updateSchema(typeName:org.geotools.api.feature.type.Name,featureType:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "getSchema", "tail" : "(typeName: String): SimpleFeatureType", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getSchema", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getSchema(typeName:String):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "getSchema", "tail" : "(typeName: Name): SimpleFeatureType", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getSchema", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getSchema(typeName:org.geotools.api.feature.type.Name):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "createSchema", "tail" : "(sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.createSchema", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#createSchema(sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "getNames", "tail" : "(): List[Name]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getNames", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getNames():java.util.List[org.geotools.api.feature.type.Name]", "kind" : "def"}, {"label" : "getTypeNames", "tail" : "(): Array[String]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.getTypeNames", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getTypeNames():Array[String]", "kind" : "def"}, {"label" : "persist", "tail" : "(typeName: String): Unit", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.persist", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#persist(typeName:String):Unit", "kind" : "def"}, {"label" : "stats", "tail" : ": GeoMesaStats", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.stats", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#stats:org.locationtech.geomesa.index.stats.GeoMesaStats", "kind" : "val"}, {"member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore#<init>", "error" : "unsupported entity"}, {"label" : "persistence", "tail" : ": DataStore", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.persistence", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#persistence:org.geotools.api.data.DataStore", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "LambdaConfig", "tail" : "", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.LambdaConfig", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#LambdaConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "topic", "tail" : "(sft: SimpleFeatureType, namespace: String): String", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.topic", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#topic(sft:org.geotools.api.feature.simple.SimpleFeatureType,namespace:String):String", "kind" : "def"}, {"label" : "TopicKey", "tail" : ": String", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStore.TopicKey", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#TopicKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStore.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html", "members_class" : [{"label" : "getImplementationHints", "tail" : "(): Map[Key, _]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.getImplementationHints", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#getImplementationHints():java.util.Map[java.awt.RenderingHints.Key,_]", "kind" : "def"}, {"label" : "canProcess", "tail" : "(params: Map[String, _]): Boolean", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.canProcess", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#canProcess(params:java.util.Map[String,_]):Boolean", "kind" : "def"}, {"label" : "getParametersInfo", "tail" : "(): Array[Param]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.getParametersInfo", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#getParametersInfo():Array[org.geotools.api.data.DataAccessFactory.Param]", "kind" : "def"}, {"label" : "getDescription", "tail" : "(): String", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.getDescription", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#getDescription():String", "kind" : "def"}, {"label" : "getDisplayName", "tail" : "(): String", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.getDisplayName", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#getDisplayName():String", "kind" : "def"}, {"label" : "isAvailable", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.isAvailable", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#isAvailable():Boolean", "kind" : "def"}, {"label" : "createNewDataStore", "tail" : "(params: Map[String, _]): DataStore", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.createNewDataStore", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#createNewDataStore(params:java.util.Map[String,_]):org.geotools.api.data.DataStore", "kind" : "def"}, {"label" : "createDataStore", "tail" : "(params: Map[String, _]): DataStore", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.createDataStore", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#createDataStore(params:java.util.Map[String,_]):org.geotools.api.data.DataStore", "kind" : "def"}, {"member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Params", "tail" : "", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.Params", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#Params", "kind" : "object"}, {"label" : "canProcess", "tail" : "(params: Map[String, _]): Boolean", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.canProcess", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#canProcess(params:java.util.Map[String,_]):Boolean", "kind" : "def"}, {"label" : "ParameterInfo", "tail" : ": Array[GeoMesaParam[_ <: AnyRef]]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.ParameterInfo", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#ParameterInfo:Array[org.locationtech.geomesa.utils.geotools.GeoMesaParam[_<:AnyRef]]", "kind" : "val"}, {"label" : "Description", "tail" : ": String", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.Description", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#Description:String", "kind" : "val"}, {"label" : "DisplayName", "tail" : ": String", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreFactory.DisplayName", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#DisplayName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreFactory.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html", "members_object" : [{"label" : "parse", "tail" : "(params: Map[String, _], namespace: String): LambdaConfig", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.parse", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#parse(params:java.util.Map[String,_],namespace:String):org.locationtech.geomesa.lambda.data.LambdaDataStore.LambdaConfig", "kind" : "def"}, {"label" : "OffsetManagerParam", "tail" : ": GeoMesaParam[OffsetManager]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.OffsetManagerParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#OffsetManagerParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[org.locationtech.geomesa.lambda.stream.OffsetManager]", "kind" : "val"}, {"label" : "ClockParam", "tail" : ": GeoMesaParam[Clock]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.ClockParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#ClockParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[java.time.Clock]", "kind" : "val"}, {"label" : "PersistParam", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.PersistParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#PersistParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "ExpiryParam", "tail" : ": GeoMesaParam[Duration]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.ExpiryParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#ExpiryParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "ConsumerOptsParam", "tail" : ": GeoMesaParam[Properties]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.ConsumerOptsParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#ConsumerOptsParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[java.util.Properties]", "kind" : "val"}, {"label" : "ProducerOptsParam", "tail" : ": GeoMesaParam[Properties]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.ProducerOptsParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#ProducerOptsParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[java.util.Properties]", "kind" : "val"}, {"label" : "ConsumersParam", "tail" : ": GeoMesaParam[Integer]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.ConsumersParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#ConsumersParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Integer]", "kind" : "val"}, {"label" : "PartitionsParam", "tail" : ": GeoMesaParam[Integer]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.PartitionsParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#PartitionsParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Integer]", "kind" : "val"}, {"label" : "ZookeepersParam", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.ZookeepersParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#ZookeepersParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "BrokersParam", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.lambda.data.LambdaDataStoreParams.BrokersParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#BrokersParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "ForceEmptyAuthsParam", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.security.SecurityParams.ForceEmptyAuthsParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#ForceEmptyAuthsParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "AuthsParam", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.security.SecurityParams.AuthsParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#AuthsParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "LooseBBoxParam", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaDataStoreFactory.GeoMesaDataStoreParams.LooseBBoxParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#LooseBBoxParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "PartitionParallelScansParam", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaDataStoreFactory.GeoMesaDataStoreParams.PartitionParallelScansParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#PartitionParallelScansParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "QueryTimeoutParam", "tail" : ": GeoMesaParam[Duration]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaDataStoreFactory.GeoMesaDataStoreParams.QueryTimeoutParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#QueryTimeoutParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "QueryThreadsParam", "tail" : ": GeoMesaParam[Integer]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaDataStoreFactory.GeoMesaDataStoreParams.QueryThreadsParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#QueryThreadsParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Integer]", "kind" : "val"}, {"label" : "GenerateStatsParam", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaDataStoreFactory.GeoMesaDataStoreParams.GenerateStatsParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#GenerateStatsParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "AuditQueriesParam", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaDataStoreFactory.GeoMesaDataStoreParams.AuditQueriesParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#AuditQueriesParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "looseBBoxDefault", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaDataStoreFactory.GeoMesaDataStoreParams.looseBBoxDefault", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#looseBBoxDefault:Boolean", "kind" : "def"}, {"label" : "NamespaceParam", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaDataStoreFactory.NamespaceParams.NamespaceParam", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#NamespaceParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaDataStoreParams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.lambda.data.LambdaFeatureWriter", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html", "members_object" : [{"label" : "RequiredVisibilityWriter", "tail" : "", "member" : "org.locationtech.geomesa.lambda.data.LambdaFeatureWriter.RequiredVisibilityWriter", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#RequiredVisibilityWriterextendsLambdaFeatureWriter.AppendLambdaFeatureWriterwithVisibilityChecker", "kind" : "trait"}, {"label" : "ModifyLambdaFeatureWriter", "tail" : "", "member" : "org.locationtech.geomesa.lambda.data.LambdaFeatureWriter.ModifyLambdaFeatureWriter", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#ModifyLambdaFeatureWriterextendsLambdaFeatureWriter.AppendLambdaFeatureWriter", "kind" : "class"}, {"label" : "AppendLambdaFeatureWriter", "tail" : "", "member" : "org.locationtech.geomesa.lambda.data.LambdaFeatureWriter.AppendLambdaFeatureWriter", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#AppendLambdaFeatureWriterextendsSimpleFeatureWriter", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaFeatureWriter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.lambda.data.LambdaQueryRunner", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html", "members_class" : [{"label" : "runQuery", "tail" : "(sft: SimpleFeatureType, original: Query, explain: Explainer): QueryResult", "member" : "org.locationtech.geomesa.lambda.data.LambdaQueryRunner.runQuery", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#runQuery(sft:org.geotools.api.feature.simple.SimpleFeatureType,original:org.geotools.api.data.Query,explain:org.locationtech.geomesa.index.utils.Explainer):org.locationtech.geomesa.index.planning.QueryRunner.QueryResult", "kind" : "def"}, {"member" : "org.locationtech.geomesa.lambda.data.LambdaQueryRunner#<init>", "error" : "unsupported entity"}, {"label" : "getReturnSft", "tail" : "(sft: SimpleFeatureType, hints: Hints): SimpleFeatureType", "member" : "org.locationtech.geomesa.index.view.MergedQueryRunner.getReturnSft", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#getReturnSft(sft:org.geotools.api.feature.simple.SimpleFeatureType,hints:org.geotools.util.factory.Hints):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "configureQuery", "tail" : "(sft: SimpleFeatureType, original: Query): Query", "member" : "org.locationtech.geomesa.index.view.MergedQueryRunner.configureQuery", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#configureQuery(sft:org.geotools.api.feature.simple.SimpleFeatureType,original:org.geotools.api.data.Query):org.geotools.api.data.Query", "kind" : "def"}, {"label" : "interceptors", "tail" : ": QueryInterceptorFactory", "member" : "org.locationtech.geomesa.index.view.MergedQueryRunner.interceptors", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#interceptors:org.locationtech.geomesa.index.planning.QueryInterceptor.QueryInterceptorFactory", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "TransientQueryable", "tail" : "", "member" : "org.locationtech.geomesa.lambda.data.LambdaQueryRunner.TransientQueryable", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#TransientQueryableextendsMergedQueryRunner.QueryablewithStrictLoggingwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaQueryRunner.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.lambda.data.LambdaStats", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.close", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#close():Unit", "kind" : "def"}, {"label" : "getStat", "tail" : "(sft: SimpleFeatureType, query: String, filter: Filter, exact: Boolean): Option[T]", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.getStat", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getStat[T<:org.locationtech.geomesa.utils.stats.Stat](sft:org.geotools.api.feature.simple.SimpleFeatureType,query:String,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[T]", "kind" : "def"}, {"label" : "getZ3Histogram", "tail" : "(sft: SimpleFeatureType, geom: String, dtg: String, period: TimePeriod, bins: Int, filter: Filter, exact: Boolean): Option[Z3Histogram]", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.getZ3Histogram", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getZ3Histogram(sft:org.geotools.api.feature.simple.SimpleFeatureType,geom:String,dtg:String,period:org.locationtech.geomesa.curve.TimePeriod.TimePeriod,bins:Int,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.Z3Histogram]", "kind" : "def"}, {"label" : "getHistogram", "tail" : "(sft: SimpleFeatureType, attribute: String, bins: Int, min: T, max: T, filter: Filter, exact: Boolean): Option[Histogram[T]]", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.getHistogram", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getHistogram[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,bins:Int,min:T,max:T,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.Histogram[T]]", "kind" : "def"}, {"label" : "getTopK", "tail" : "(sft: SimpleFeatureType, attribute: String, filter: Filter, exact: Boolean): Option[TopK[T]]", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.getTopK", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getTopK[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.TopK[T]]", "kind" : "def"}, {"label" : "getFrequency", "tail" : "(sft: SimpleFeatureType, attribute: String, precision: Int, filter: Filter, exact: Boolean): Option[Frequency[T]]", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.getFrequency", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getFrequency[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,precision:Int,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.Frequency[T]]", "kind" : "def"}, {"label" : "getEnumeration", "tail" : "(sft: SimpleFeatureType, attribute: String, filter: Filter, exact: Boolean): Option[EnumerationStat[T]]", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.getEnumeration", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getEnumeration[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.EnumerationStat[T]]", "kind" : "def"}, {"label" : "getMinMax", "tail" : "(sft: SimpleFeatureType, attribute: String, filter: Filter, exact: Boolean): Option[MinMax[T]]", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.getMinMax", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getMinMax[T](sft:org.geotools.api.feature.simple.SimpleFeatureType,attribute:String,filter:org.geotools.api.filter.Filter,exact:Boolean):Option[org.locationtech.geomesa.utils.stats.MinMax[T]]", "kind" : "def"}, {"label" : "getCount", "tail" : "(sft: SimpleFeatureType, filter: Filter, exact: Boolean, queryHints: Hints): Option[Long]", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.getCount", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getCount(sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:org.geotools.api.filter.Filter,exact:Boolean,queryHints:org.geotools.util.factory.Hints):Option[Long]", "kind" : "def"}, {"label" : "writer", "tail" : "(): GeoMesaStatWriter", "member" : "org.locationtech.geomesa.lambda.data.LambdaStats.writer", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#writer:org.locationtech.geomesa.index.stats.GeoMesaStats.GeoMesaStatWriter", "kind" : "def"}, {"member" : "org.locationtech.geomesa.lambda.data.LambdaStats#<init>", "error" : "unsupported entity"}, {"label" : "getSeqStat", "tail" : "(sft: SimpleFeatureType, queries: Seq[String], filter: Filter, exact: Boolean): Seq[T]", "member" : "org.locationtech.geomesa.index.stats.GeoMesaStats.getSeqStat", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getSeqStat[T<:org.locationtech.geomesa.utils.stats.Stat](sft:org.geotools.api.feature.simple.SimpleFeatureType,queries:Seq[String],filter:org.geotools.api.filter.Filter,exact:Boolean):Seq[T]", "kind" : "def"}, {"label" : "getBounds", "tail" : "(sft: SimpleFeatureType, filter: Filter, exact: Boolean): ReferencedEnvelope", "member" : "org.locationtech.geomesa.index.stats.GeoMesaStats.getBounds", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getBounds(sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:org.geotools.api.filter.Filter,exact:Boolean):org.geotools.geometry.jts.ReferencedEnvelope", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/lambda\/data\/LambdaStats.html", "kind" : "class"}]};