Index.PACKAGES = {"org.locationtech" : [], "org.locationtech.geomesa.kafka.utils.interop" : [{"name" : "org.locationtech.geomesa.kafka.utils.interop.GeoMessageProcessor", "members_trait" : [{"label" : "consume", "tail" : "(records: Seq[GeoMessage]): Value", "member" : "org.locationtech.geomesa.kafka.utils.interop.GeoMessageProcessor.consume", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#consume(records:scala.collection.immutable.Seq[org.locationtech.geomesa.kafka.utils.GeoMessage]):Enumeration#Value", "kind" : "def"}, {"label" : "consume", "tail" : "(records: Seq[GeoMessage]): Value", "member" : "org.locationtech.geomesa.kafka.utils.interop.GeoMessageProcessor.consume", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#consume(records:Seq[org.locationtech.geomesa.kafka.utils.GeoMessage]):Enumeration#Value", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.utils.interop.GeoMessageProcessor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "consume", "tail" : "(records: List[GeoMessage]): BatchResult", "member" : "org.locationtech.geomesa.kafka.utils.interop.GeoMessageProcessor.consume", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html#consume(records:java.util.List[org.locationtech.geomesa.kafka.utils.GeoMessage]):org.locationtech.geomesa.kafka.utils.interop.GeoMessageProcessor.BatchResult", "kind" : "abstract def"}], "shortDescription" : "Message processor class.", "trait" : "org\/locationtech\/geomesa\/kafka\/utils\/interop\/GeoMessageProcessor.html", "kind" : "trait"}], "org.locationtech.geomesa" : [], "org.locationtech.geomesa.kafka.jstreams" : [{"name" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder", "shortDescription" : "Wrapper for a kafka streams builder that will configure serialization based on a GeoMesa Kafka feature store", "members_class" : [{"label" : "serde", "tail" : "(typeName: String): Serde[GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder.serde", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#serde(typeName:String):org.apache.kafka.common.serialization.Serde[org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(): StreamsBuilder", "member" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder.wrapped", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#wrapped():org.apache.kafka.streams.StreamsBuilder", "kind" : "def"}, {"label" : "build", "tail" : "(): Topology", "member" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder.build", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#build():org.apache.kafka.streams.Topology", "kind" : "def"}, {"label" : "to", "tail" : "(typeName: String, stream: KStream[String, GeoMesaMessage]): Unit", "member" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder.to", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#to(typeName:String,stream:org.apache.kafka.streams.kstream.KStream[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]):Unit", "kind" : "def"}, {"label" : "globalTable", "tail" : "(typeName: String, materialized: Materialized[String, GeoMesaMessage, KeyValueStore[Bytes, Array[Byte]]]): GlobalKTable[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder.globalTable", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#globalTable(typeName:String,materialized:org.apache.kafka.streams.kstream.Materialized[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage,org.apache.kafka.streams.state.KeyValueStore[org.apache.kafka.common.utils.Bytes,Array[Byte]]]):org.apache.kafka.streams.kstream.GlobalKTable[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "globalTable", "tail" : "(typeName: String): GlobalKTable[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder.globalTable", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#globalTable(typeName:String):org.apache.kafka.streams.kstream.GlobalKTable[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "table", "tail" : "(typeName: String, materialized: Materialized[String, GeoMesaMessage, KeyValueStore[Bytes, Array[Byte]]]): KTable[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder.table", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#table(typeName:String,materialized:org.apache.kafka.streams.kstream.Materialized[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage,org.apache.kafka.streams.state.KeyValueStore[org.apache.kafka.common.utils.Bytes,Array[Byte]]]):org.apache.kafka.streams.kstream.KTable[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "table", "tail" : "(typeName: String): KTable[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder.table", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#table(typeName:String):org.apache.kafka.streams.kstream.KTable[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "stream", "tail" : "(typeName: String): KStream[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.jstreams.GeoMesaStreamsBuilder.stream", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#stream(typeName:String):org.apache.kafka.streams.kstream.KStream[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/jstreams\/GeoMesaStreamsBuilder.html", "kind" : "class"}], "org.locationtech.geomesa.kafka.data" : [{"name" : "org.locationtech.geomesa.kafka.data.KafkaCacheLoader", "members_trait" : [{"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cache", "tail" : "(): KafkaFeatureCache", "member" : "org.locationtech.geomesa.kafka.data.KafkaCacheLoader.cache", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#cache:org.locationtech.geomesa.kafka.index.KafkaFeatureCache", "kind" : "abstract def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.io.Closeable.close", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html#close():Unit", "kind" : "abstract def"}], "shortDescription" : "Reads from Kafka and populates a KafkaFeatureCache.", "object" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html", "members_object" : [{"label" : "KafkaCacheLoaderImpl", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaCacheLoader.KafkaCacheLoaderImpl", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#KafkaCacheLoaderImplextendsThreadedConsumerwithKafkaCacheLoader", "kind" : "class"}, {"label" : "NoOpLoader", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaCacheLoader.NoOpLoader", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#NoOpLoader", "kind" : "object"}, {"label" : "LoaderStatus", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaCacheLoader.LoaderStatus", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#LoaderStatus", "kind" : "object"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaCacheLoader.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.kafka.data.KafkaDataStore", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html", "members_class" : [{"label" : "dispose", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.dispose", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#dispose():Unit", "kind" : "def"}, {"label" : "getFeatureSource", "tail" : "(typeName: String): SimpleFeatureStore", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.getFeatureSource", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getFeatureSource(typeName:String):org.geotools.api.data.SimpleFeatureStore", "kind" : "def"}, {"label" : "onSchemaDeleted", "tail" : "(sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.onSchemaDeleted", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#onSchemaDeleted(sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "onSchemaUpdated", "tail" : "(sft: SimpleFeatureType, previous: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.onSchemaUpdated", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#onSchemaUpdated(sft:org.geotools.api.feature.simple.SimpleFeatureType,previous:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "onSchemaCreated", "tail" : "(sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.onSchemaCreated", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#onSchemaCreated(sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "preSchemaUpdate", "tail" : "(sft: SimpleFeatureType, previous: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.preSchemaUpdate", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#preSchemaUpdate(sft:org.geotools.api.feature.simple.SimpleFeatureType,previous:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "preSchemaCreate", "tail" : "(sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.preSchemaCreate", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#preSchemaCreate(sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "getTypeNames", "tail" : "(): Array[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.getTypeNames", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getTypeNames():Array[String]", "kind" : "def"}, {"label" : "getSchema", "tail" : "(typeName: String): SimpleFeatureType", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.getSchema", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getSchema(typeName:String):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "createConsumer", "tail" : "(typeName: String, groupId: String, processor: GeoMessageProcessor, errorHandler: Option[ConsumerErrorHandler]): Closeable", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.createConsumer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#createConsumer(typeName:String,groupId:String,processor:org.locationtech.geomesa.kafka.utils.GeoMessageProcessor,errorHandler:Option[org.locationtech.geomesa.kafka.consumer.ThreadedConsumer.ConsumerErrorHandler]):java.io.Closeable", "kind" : "def"}, {"label" : "createConsumer", "tail" : "(typeName: String, groupId: String, processor: GeoMessageProcessor): Closeable", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.createConsumer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#createConsumer(typeName:String,groupId:String,processor:org.locationtech.geomesa.kafka.utils.GeoMessageProcessor):java.io.Closeable", "kind" : "def"}, {"label" : "startAllConsumers", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.startAllConsumers", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#startAllConsumers():Unit", "kind" : "def"}, {"label" : "stats", "tail" : ": GeoMesaStats", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.stats", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#stats:org.locationtech.geomesa.index.stats.GeoMesaStats", "kind" : "val"}, {"member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": GeoMesaMetadata[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.metadata", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#metadata:org.locationtech.geomesa.index.metadata.GeoMesaMetadata[String]", "kind" : "val"}, {"label" : "config", "tail" : ": KafkaDataStoreConfig", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.config", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#config:org.locationtech.geomesa.kafka.data.KafkaDataStore.KafkaDataStoreConfig", "kind" : "val"}, {"label" : "acquireDistributedLock", "tail" : "(key: String, timeOut: Long): Option[Closeable]", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.LocalLocking.acquireDistributedLock", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#acquireDistributedLock(key:String,timeOut:Long):Option[java.io.Closeable]", "kind" : "def"}, {"label" : "acquireDistributedLock", "tail" : "(key: String): Closeable", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.LocalLocking.acquireDistributedLock", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#acquireDistributedLock(key:String):java.io.Closeable", "kind" : "def"}, {"label" : "acquireCatalogLock", "tail" : "(): Closeable", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.acquireCatalogLock", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#acquireCatalogLock():java.io.Closeable", "kind" : "def"}, {"label" : "validateSchemaUpdate", "tail" : "(existing: SimpleFeatureType, schema: SimpleFeatureType): Either[UnsupportedOperationException, Compatible]", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.validateSchemaUpdate", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#validateSchemaUpdate(existing:org.geotools.api.feature.simple.SimpleFeatureType,schema:org.geotools.api.feature.simple.SimpleFeatureType):Either[UnsupportedOperationException,org.locationtech.geomesa.utils.geotools.SimpleFeatureTypeComparator.TypeComparison.Compatible]", "kind" : "def"}, {"label" : "getLockingManager", "tail" : "(): LockingManager", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.getLockingManager", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getLockingManager():org.geotools.api.data.LockingManager", "kind" : "def"}, {"label" : "getInfo", "tail" : "(): ServiceInfo", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.getInfo", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getInfo():org.geotools.api.data.ServiceInfo", "kind" : "def"}, {"label" : "getFeatureWriterAppend", "tail" : "(typeName: String, transaction: Transaction): FlushableFeatureWriter", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.getFeatureWriterAppend", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getFeatureWriterAppend(typeName:String,transaction:org.geotools.api.data.Transaction):org.locationtech.geomesa.index.FlushableFeatureWriter", "kind" : "def"}, {"label" : "getFeatureWriter", "tail" : "(typeName: String, filter: Filter, transaction: Transaction): FlushableFeatureWriter", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.getFeatureWriter", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getFeatureWriter(typeName:String,filter:org.geotools.api.filter.Filter,transaction:org.geotools.api.data.Transaction):org.locationtech.geomesa.index.FlushableFeatureWriter", "kind" : "def"}, {"label" : "getFeatureWriter", "tail" : "(typeName: String, transaction: Transaction): FlushableFeatureWriter", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.getFeatureWriter", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getFeatureWriter(typeName:String,transaction:org.geotools.api.data.Transaction):org.locationtech.geomesa.index.FlushableFeatureWriter", "kind" : "def"}, {"label" : "getFeatureReader", "tail" : "(query: Query, transaction: Transaction): SimpleFeatureReader", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.getFeatureReader", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getFeatureReader(query:org.geotools.api.data.Query,transaction:org.geotools.api.data.Transaction):org.geotools.api.data.SimpleFeatureReader", "kind" : "def"}, {"label" : "getFeatureSource", "tail" : "(typeName: Name): SimpleFeatureSource", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.getFeatureSource", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getFeatureSource(typeName:org.geotools.api.feature.type.Name):org.geotools.api.data.SimpleFeatureSource", "kind" : "def"}, {"label" : "removeSchema", "tail" : "(typeName: Name): Unit", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.removeSchema", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#removeSchema(typeName:org.geotools.api.feature.type.Name):Unit", "kind" : "def"}, {"label" : "removeSchema", "tail" : "(typeName: String): Unit", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.removeSchema", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#removeSchema(typeName:String):Unit", "kind" : "def"}, {"label" : "updateSchema", "tail" : "(typeName: Name, schema: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.updateSchema", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#updateSchema(typeName:org.geotools.api.feature.type.Name,schema:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "updateSchema", "tail" : "(typeName: String, sft: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.updateSchema", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#updateSchema(typeName:String,sft:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "getSchema", "tail" : "(name: Name): SimpleFeatureType", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.getSchema", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getSchema(name:org.geotools.api.feature.type.Name):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "createSchema", "tail" : "(schema: SimpleFeatureType): Unit", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.createSchema", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#createSchema(schema:org.geotools.api.feature.simple.SimpleFeatureType):Unit", "kind" : "def"}, {"label" : "getNames", "tail" : "(): List[Name]", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.getNames", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getNames():java.util.List[org.geotools.api.feature.type.Name]", "kind" : "def"}, {"label" : "interceptors", "tail" : ": QueryInterceptorFactory", "member" : "org.locationtech.geomesa.index.geotools.MetadataBackedDataStore.interceptors", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#interceptors:org.locationtech.geomesa.index.planning.QueryInterceptor.QueryInterceptorFactory", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "withLock", "tail" : "(key: String, timeOut: Long, fn: ⇒ T, fallback: ⇒ T): T", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.withLock", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#withLock[T](key:String,timeOut:Long,fn:=>T,fallback:=>T):T", "kind" : "def"}, {"label" : "withLock", "tail" : "(key: String, timeOut: Long, fn: ⇒ T): T", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.withLock", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#withLock[T](key:String,timeOut:Long,fn:=>T):T", "kind" : "def"}, {"label" : "withLock", "tail" : "(key: String, fn: ⇒ T): T", "member" : "org.locationtech.geomesa.index.utils.DistributedLocking.withLock", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#withLock[T](key:String,fn:=>T):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "LayerView", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.LayerView", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#LayerViewextendsProductwithSerializable", "kind" : "case class"}, {"label" : "LayerViewConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.LayerViewConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#LayerViewConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "FilteredExpiryConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.FilteredExpiryConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#FilteredExpiryConfigextendsKafkaDataStore.ExpiryTimeConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "EventTimeConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.EventTimeConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#EventTimeConfigextendsKafkaDataStore.ExpiryTimeConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "IngestTimeConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.IngestTimeConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#IngestTimeConfigextendsKafkaDataStore.ExpiryTimeConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "ImmediatelyExpireConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.ImmediatelyExpireConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#ImmediatelyExpireConfig", "kind" : "object"}, {"label" : "NeverExpireConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.NeverExpireConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#NeverExpireConfig", "kind" : "object"}, {"label" : "ExpiryTimeConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.ExpiryTimeConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#ExpiryTimeConfigextendsAnyRef", "kind" : "sealed trait"}, {"label" : "IndexResolution", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.IndexResolution", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#IndexResolutionextendsProductwithSerializable", "kind" : "case class"}, {"label" : "IndexConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.IndexConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#IndexConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "TopicConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.TopicConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#TopicConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ProducerConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.ProducerConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#ProducerConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ConsumerConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.ConsumerConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#ConsumerConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "KafkaDataStoreConfig", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.KafkaDataStoreConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#KafkaDataStoreConfigextendsGeoMesaDataStoreFactory.NamespaceConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "KafkaDataStoreWithZk", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.KafkaDataStoreWithZk", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#KafkaDataStoreWithZkextendsKafkaDataStorewithZookeeperLocking", "kind" : "class"}, {"label" : "consumer", "tail" : "(brokers: String, properties: Map[String, String]): Consumer[Array[Byte], Array[Byte]]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.consumer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#consumer(brokers:String,properties:Map[String,String]):org.apache.kafka.clients.consumer.Consumer[Array[Byte],Array[Byte]]", "kind" : "def"}, {"label" : "consumer", "tail" : "(config: KafkaDataStoreConfig, group: String): Consumer[Array[Byte], Array[Byte]]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.consumer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#consumer(config:org.locationtech.geomesa.kafka.data.KafkaDataStore.KafkaDataStoreConfig,group:String):org.apache.kafka.clients.consumer.Consumer[Array[Byte],Array[Byte]]", "kind" : "def"}, {"label" : "producer", "tail" : "(bootstrapServers: String, properties: Map[String, String]): Producer[Array[Byte], Array[Byte]]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.producer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#producer(bootstrapServers:String,properties:Map[String,String]):org.apache.kafka.clients.producer.Producer[Array[Byte],Array[Byte]]", "kind" : "def"}, {"label" : "producer", "tail" : "(config: KafkaDataStoreConfig): Producer[Array[Byte], Array[Byte]]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.producer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#producer(config:org.locationtech.geomesa.kafka.data.KafkaDataStore.KafkaDataStoreConfig):org.apache.kafka.clients.producer.Producer[Array[Byte],Array[Byte]]", "kind" : "def"}, {"label" : "usesDefaultPartitioning", "tail" : "(sft: SimpleFeatureType): Boolean", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.usesDefaultPartitioning", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#usesDefaultPartitioning(sft:org.geotools.api.feature.simple.SimpleFeatureType):Boolean", "kind" : "def"}, {"label" : "topicConfig", "tail" : "(sft: SimpleFeatureType): Map[String, String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.topicConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#topicConfig(sft:org.geotools.api.feature.simple.SimpleFeatureType):java.util.Map[String,String]", "kind" : "def"}, {"label" : "setTopic", "tail" : "(sft: SimpleFeatureType, topic: String): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.setTopic", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#setTopic(sft:org.geotools.api.feature.simple.SimpleFeatureType,topic:String):Unit", "kind" : "def"}, {"label" : "topic", "tail" : "(sft: SimpleFeatureType): String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.topic", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#topic(sft:org.geotools.api.feature.simple.SimpleFeatureType):String", "kind" : "def"}, {"label" : "LoadIntervalProperty", "tail" : ": SystemProperty", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.LoadIntervalProperty", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#LoadIntervalProperty:org.locationtech.geomesa.utils.conf.GeoMesaSystemProperties.SystemProperty", "kind" : "val"}, {"label" : "PartitioningDefault", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.PartitioningDefault", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#PartitioningDefault:String", "kind" : "val"}, {"label" : "TransactionStateKey", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.TransactionStateKey", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#TransactionStateKey:String", "kind" : "val"}, {"label" : "MetadataPath", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.MetadataPath", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#MetadataPath:String", "kind" : "val"}, {"label" : "PartitioningKey", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.PartitioningKey", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#PartitioningKey:String", "kind" : "val"}, {"label" : "TopicConfigKey", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.TopicConfigKey", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#TopicConfigKey:String", "kind" : "val"}, {"label" : "TopicKey", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStore.TopicKey", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#TopicKey:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStore.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html", "members_class" : [{"label" : "getImplementationHints", "tail" : "(): Map[Key, _]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.getImplementationHints", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#getImplementationHints():java.util.Map[java.awt.RenderingHints.Key,_]", "kind" : "def"}, {"label" : "isAvailable", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.isAvailable", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#isAvailable():Boolean", "kind" : "def"}, {"label" : "canProcess", "tail" : "(params: Map[String, _]): Boolean", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.canProcess", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#canProcess(params:java.util.Map[String,_]):Boolean", "kind" : "def"}, {"label" : "getParametersInfo", "tail" : "(): Array[Param]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.getParametersInfo", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#getParametersInfo():Array[org.geotools.api.data.DataAccessFactory.Param]", "kind" : "def"}, {"label" : "getDescription", "tail" : "(): String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.getDescription", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#getDescription():String", "kind" : "def"}, {"label" : "getDisplayName", "tail" : "(): String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.getDisplayName", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#getDisplayName():String", "kind" : "def"}, {"label" : "createDataStore", "tail" : "(params: Map[String, _]): KafkaDataStore", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.createDataStore", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#createDataStore(params:java.util.Map[String,_]):org.locationtech.geomesa.kafka.data.KafkaDataStore", "kind" : "def"}, {"label" : "createNewDataStore", "tail" : "(params: Map[String, _]): KafkaDataStore", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.createNewDataStore", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#createNewDataStore(params:java.util.Map[String,_]):org.locationtech.geomesa.kafka.data.KafkaDataStore", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "buildSerializer", "tail" : "(params: Map[String, _]): GeoMessageSerializerFactory", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.buildSerializer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#buildSerializer(params:java.util.Map[String,_]):org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.GeoMessageSerializerFactory", "kind" : "def"}, {"label" : "buildConfig", "tail" : "(params: Map[String, _]): KafkaDataStoreConfig", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.buildConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#buildConfig(params:java.util.Map[String,_]):org.locationtech.geomesa.kafka.data.KafkaDataStore.KafkaDataStoreConfig", "kind" : "def"}, {"label" : "canProcess", "tail" : "(params: Map[String, _]): Boolean", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.canProcess", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#canProcess(params:java.util.Map[String,_]):Boolean", "kind" : "def"}, {"label" : "ParameterInfo", "tail" : ": Array[GeoMesaParam[_ <: AnyRef]]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.ParameterInfo", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#ParameterInfo:Array[org.locationtech.geomesa.utils.geotools.GeoMesaParam[_<:AnyRef]]", "kind" : "val"}, {"label" : "Description", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.Description", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#Description:String", "kind" : "val"}, {"label" : "DisplayName", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.DisplayName", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#DisplayName:String", "kind" : "val"}, {"label" : "DefaultZkPath", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.DefaultZkPath", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#DefaultZkPath:String", "kind" : "val"}, {"label" : "DefaultCatalog", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreFactory.DefaultCatalog", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#DefaultCatalog:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreFactory.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html", "members_object" : [{"label" : "CacheTicker", "tail" : ": GeoMesaParam[AnyRef]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.CacheTicker", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#CacheTicker:org.locationtech.geomesa.utils.geotools.GeoMesaParam[AnyRef]", "kind" : "val"}, {"label" : "CacheConsistency", "tail" : ": GeoMesaParam[Duration]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.CacheConsistency", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#CacheConsistency:org.locationtech.geomesa.utils.geotools.GeoMesaParam[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "CacheCleanup", "tail" : ": GeoMesaParam[Duration]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.CacheCleanup", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#CacheCleanup:org.locationtech.geomesa.utils.geotools.GeoMesaParam[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "CqEngineCache", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.CqEngineCache", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#CqEngineCache:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "ExecutorTicker", "tail" : ": GeoMesaParam[(ScheduledExecutorService, Ticker)]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.ExecutorTicker", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ExecutorTicker:org.locationtech.geomesa.utils.geotools.GeoMesaParam[(java.util.concurrent.ScheduledExecutorService,com.github.benmanes.caffeine.cache.Ticker)]", "kind" : "val"}, {"label" : "Authorizations", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.Authorizations", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#Authorizations:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "AuditQueries", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.AuditQueries", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#AuditQueries:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "LooseBBox", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.LooseBBox", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#LooseBBox:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "MetricsReporters", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.MetricsReporters", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#MetricsReporters:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "LazyFeatures", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.LazyFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#LazyFeatures:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "LazyLoad", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.LazyLoad", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#LazyLoad:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "EventTimeOrdering", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.EventTimeOrdering", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#EventTimeOrdering:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "CqEngineIndices", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.CqEngineIndices", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#CqEngineIndices:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "IndexTiers", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.IndexTiers", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#IndexTiers:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "IndexResolutionY", "tail" : ": GeoMesaParam[Integer]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.IndexResolutionY", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#IndexResolutionY:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Integer]", "kind" : "val"}, {"label" : "IndexResolutionX", "tail" : ": GeoMesaParam[Integer]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.IndexResolutionX", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#IndexResolutionX:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Integer]", "kind" : "val"}, {"label" : "EventTime", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.EventTime", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#EventTime:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "DynamicCacheExpiry", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.DynamicCacheExpiry", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#DynamicCacheExpiry:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "CacheExpiry", "tail" : ": GeoMesaParam[Duration]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.CacheExpiry", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#CacheExpiry:org.locationtech.geomesa.utils.geotools.GeoMesaParam[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "LayerViews", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.LayerViews", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#LayerViews:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "SerializationTypes", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.SerializationTypes", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#SerializationTypes", "kind" : "object"}, {"label" : "SerializationType", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.SerializationType", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#SerializationType:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "ConsumerGroupPrefix", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.ConsumerGroupPrefix", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ConsumerGroupPrefix:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "ConsumerCount", "tail" : ": GeoMesaParam[Integer]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.ConsumerCount", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ConsumerCount:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Integer]", "kind" : "val"}, {"label" : "TopicReplication", "tail" : ": GeoMesaParam[Integer]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.TopicReplication", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#TopicReplication:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Integer]", "kind" : "val"}, {"label" : "TopicPartitions", "tail" : ": GeoMesaParam[Integer]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.TopicPartitions", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#TopicPartitions:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Integer]", "kind" : "val"}, {"label" : "ConsumerOffsetCommitInterval", "tail" : ": GeoMesaParam[FiniteDuration]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.ConsumerOffsetCommitInterval", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ConsumerOffsetCommitInterval:org.locationtech.geomesa.utils.geotools.GeoMesaParam[scala.concurrent.duration.FiniteDuration]", "kind" : "val"}, {"label" : "ConsumerReadBack", "tail" : ": GeoMesaParam[Duration]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.ConsumerReadBack", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ConsumerReadBack:org.locationtech.geomesa.utils.geotools.GeoMesaParam[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "ClearOnStart", "tail" : ": GeoMesaParam[Boolean]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.ClearOnStart", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ClearOnStart:org.locationtech.geomesa.utils.geotools.GeoMesaParam[Boolean]", "kind" : "val"}, {"label" : "ConsumerConfig", "tail" : ": GeoMesaParam[Properties]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.ConsumerConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ConsumerConfig:org.locationtech.geomesa.utils.geotools.GeoMesaParam[java.util.Properties]", "kind" : "val"}, {"label" : "ProducerConfig", "tail" : ": GeoMesaParam[Properties]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.ProducerConfig", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ProducerConfig:org.locationtech.geomesa.utils.geotools.GeoMesaParam[java.util.Properties]", "kind" : "val"}, {"label" : "ZkPath", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.ZkPath", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ZkPath:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "Catalog", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.Catalog", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#Catalog:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "Zookeepers", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.Zookeepers", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#Zookeepers:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "Brokers", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.kafka.data.KafkaDataStoreParams.Brokers", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#Brokers:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "NamespaceParam", "tail" : ": GeoMesaParam[String]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaDataStoreFactory.NamespaceParams.NamespaceParam", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#NamespaceParam:org.locationtech.geomesa.utils.geotools.GeoMesaParam[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaDataStoreParams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.kafka.data.KafkaFeatureStore", "shortDescription" : "", "members_class" : [{"label" : "removeFeatureListener", "tail" : "(listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureStore.removeFeatureListener", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#removeFeatureListener(listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "addFeatureListener", "tail" : "(listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureStore.addFeatureListener", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#addFeatureListener(listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "removeFeatures", "tail" : "(filter: Filter): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureStore.removeFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#removeFeatures(filter:org.geotools.api.filter.Filter):Unit", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureStore#<init>", "error" : "unsupported entity"}, {"label" : "modifyFeatures", "tail" : "(attributes: Array[AttributeDescriptor], values: Array[AnyRef], filter: Filter): Unit", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.modifyFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#modifyFeatures(attributes:Array[org.geotools.api.feature.type.AttributeDescriptor],values:Array[AnyRef],filter:org.geotools.api.filter.Filter):Unit", "kind" : "def"}, {"label" : "modifyFeatures", "tail" : "(attribute: AttributeDescriptor, value: AnyRef, filter: Filter): Unit", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.modifyFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#modifyFeatures(attribute:org.geotools.api.feature.type.AttributeDescriptor,value:AnyRef,filter:org.geotools.api.filter.Filter):Unit", "kind" : "def"}, {"label" : "getTransaction", "tail" : "(): Transaction", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.getTransaction", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getTransaction():org.geotools.api.data.Transaction", "kind" : "def"}, {"label" : "setTransaction", "tail" : "(transaction: Transaction): Unit", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.setTransaction", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#setTransaction(transaction:org.geotools.api.data.Transaction):Unit", "kind" : "def"}, {"label" : "modifyFeatures", "tail" : "(attributes: Array[Name], values: Array[AnyRef], filter: Filter): Unit", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.modifyFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#modifyFeatures(attributes:Array[org.geotools.api.feature.type.Name],values:Array[AnyRef],filter:org.geotools.api.filter.Filter):Unit", "kind" : "def"}, {"label" : "modifyFeatures", "tail" : "(attribute: Name, value: AnyRef, filter: Filter): Unit", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.modifyFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#modifyFeatures(attribute:org.geotools.api.feature.type.Name,value:AnyRef,filter:org.geotools.api.filter.Filter):Unit", "kind" : "def"}, {"label" : "modifyFeatures", "tail" : "(attribute: String, value: AnyRef, filter: Filter): Unit", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.modifyFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#modifyFeatures(attribute:String,value:AnyRef,filter:org.geotools.api.filter.Filter):Unit", "kind" : "def"}, {"label" : "modifyFeatures", "tail" : "(attributes: Array[String], values: Array[AnyRef], filter: Filter): Unit", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.modifyFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#modifyFeatures(attributes:Array[String],values:Array[AnyRef],filter:org.geotools.api.filter.Filter):Unit", "kind" : "def"}, {"label" : "setFeatures", "tail" : "(reader: FeatureReader[SimpleFeatureType, SimpleFeature]): Unit", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.setFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#setFeatures(reader:org.geotools.api.data.FeatureReader[org.geotools.api.feature.simple.SimpleFeatureType,org.geotools.api.feature.simple.SimpleFeature]):Unit", "kind" : "def"}, {"label" : "addFeatures", "tail" : "(collection: FeatureCollection[SimpleFeatureType, SimpleFeature]): List[FeatureId]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureStore.addFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#addFeatures(collection:org.geotools.feature.FeatureCollection[org.geotools.api.feature.simple.SimpleFeatureType,org.geotools.api.feature.simple.SimpleFeature]):java.util.List[org.geotools.api.filter.identity.FeatureId]", "kind" : "def"}, {"label" : "getInfo", "tail" : "(): ResourceInfo", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.getInfo", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getInfo():org.geotools.api.data.ResourceInfo", "kind" : "def"}, {"label" : "getSupportedHints", "tail" : "(): Set[Key]", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.getSupportedHints", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getSupportedHints():java.util.Set[java.awt.RenderingHints.Key]", "kind" : "def"}, {"label" : "getDataStore", "tail" : "(): DataStore", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.getDataStore", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getDataStore():org.geotools.api.data.DataStore", "kind" : "def"}, {"label" : "getName", "tail" : "(): Name", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.getName", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getName():org.geotools.api.feature.type.Name", "kind" : "def"}, {"label" : "getQueryCapabilities", "tail" : "(): QueryCapabilities", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.getQueryCapabilities", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getQueryCapabilities():org.geotools.api.data.QueryCapabilities", "kind" : "def"}, {"label" : "getBounds", "tail" : "(query: Query): ReferencedEnvelope", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.getBounds", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getBounds(query:org.geotools.api.data.Query):org.geotools.geometry.jts.ReferencedEnvelope", "kind" : "def"}, {"label" : "getBounds", "tail" : "(): ReferencedEnvelope", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.getBounds", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getBounds():org.geotools.geometry.jts.ReferencedEnvelope", "kind" : "def"}, {"label" : "getCount", "tail" : "(query: Query): Int", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.getCount", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getCount(query:org.geotools.api.data.Query):Int", "kind" : "def"}, {"label" : "getSchema", "tail" : "(): SimpleFeatureType", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.getSchema", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getSchema():org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "sft", "tail" : ": SimpleFeatureType", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.sft", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#sft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "val"}, {"label" : "ds", "tail" : ": GeoMeasBaseStore", "member" : "org.locationtech.geomesa.index.geotools.GeoMesaFeatureSource.ds", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#ds:org.locationtech.geomesa.index.geotools.GeoMeasBaseStore", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getFeatures", "tail" : "(arg0: Query): SimpleFeatureCollection", "member" : "org.geotools.api.data.SimpleFeatureStore.getFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getFeatures(x$1:org.geotools.api.data.Query):org.geotools.data.simple.SimpleFeatureCollection", "kind" : "abstract def"}, {"label" : "getFeatures", "tail" : "(arg0: Filter): SimpleFeatureCollection", "member" : "org.geotools.api.data.SimpleFeatureStore.getFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getFeatures(x$1:org.geotools.api.filter.Filter):org.geotools.data.simple.SimpleFeatureCollection", "kind" : "abstract def"}, {"label" : "getFeatures", "tail" : "(): SimpleFeatureCollection", "member" : "org.geotools.api.data.SimpleFeatureStore.getFeatures", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html#getFeatures():org.geotools.data.simple.SimpleFeatureCollection", "kind" : "abstract def"}], "class" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureStore.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.data.KafkaFeatureWriter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureWriter.clear", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#clear():Unit", "kind" : "abstract def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "java.io.Flushable.flush", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#flush():Unit", "kind" : "abstract def"}, {"label" : "next", "tail" : "(): FastSettableFeature", "member" : "org.locationtech.geomesa.index.geotools.FastSettableFeatureWriter.next", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#next():org.locationtech.geomesa.features.FastSettableFeature", "kind" : "abstract def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.geotools.api.data.FeatureWriter.close", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#close():Unit", "kind" : "abstract def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "org.geotools.api.data.FeatureWriter.hasNext", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#hasNext():Boolean", "kind" : "abstract def"}, {"label" : "write", "tail" : "(): Unit", "member" : "org.geotools.api.data.FeatureWriter.write", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#write():Unit", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "org.geotools.api.data.FeatureWriter.remove", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#remove():Unit", "kind" : "abstract def"}, {"label" : "getFeatureType", "tail" : "(): SimpleFeatureType", "member" : "org.geotools.api.data.FeatureWriter.getFeatureType", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html#getFeatureType():T", "kind" : "abstract def"}], "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html", "members_object" : [{"label" : "KafkaTransactionState", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureWriter.KafkaTransactionState", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#KafkaTransactionStateextendsTransaction.StatewithKafkaFeatureWriter.KafkaFeatureProducerwithProductwithSerializable", "kind" : "case class"}, {"label" : "AutoCommitProducer", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureWriter.AutoCommitProducer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#AutoCommitProducerextendsKafkaFeatureWriter.KafkaFeatureProducerwithProductwithSerializable", "kind" : "case class"}, {"label" : "KafkaFeatureProducer", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureWriter.KafkaFeatureProducer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#KafkaFeatureProducerextendsFlushable", "kind" : "trait"}, {"label" : "RequiredVisibilityWriter", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureWriter.RequiredVisibilityWriter", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#RequiredVisibilityWriterextendsKafkaFeatureWriter.AppendKafkaFeatureWriterwithVisibilityChecker", "kind" : "trait"}, {"label" : "ModifyKafkaFeatureWriter", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureWriter.ModifyKafkaFeatureWriter", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#ModifyKafkaFeatureWriterextendsKafkaFeatureWriter.AppendKafkaFeatureWriter", "kind" : "class"}, {"label" : "AppendKafkaFeatureWriter", "tail" : "", "member" : "org.locationtech.geomesa.kafka.data.KafkaFeatureWriter.AppendKafkaFeatureWriter", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#AppendKafkaFeatureWriterextendsKafkaFeatureWriterwithLazyLogging", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaFeatureWriter.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.kafka.data.KafkaMetadata", "shortDescription" : "Stores metadata in a Kafka topic", "object" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.close", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#close():Unit", "kind" : "def"}, {"label" : "scanRows", "tail" : "(prefix: Option[Array[Byte]]): CloseableIterator[(Array[Byte], Array[Byte])]", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.scanRows", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#scanRows(prefix:Option[Array[Byte]]):org.locationtech.geomesa.utils.collection.CloseableIterator[(Array[Byte],Array[Byte])]", "kind" : "def"}, {"label" : "scanValue", "tail" : "(row: Array[Byte]): Option[Array[Byte]]", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.scanValue", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#scanValue(row:Array[Byte]):Option[Array[Byte]]", "kind" : "def"}, {"label" : "delete", "tail" : "(rows: Seq[Array[Byte]]): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.delete", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#delete(rows:Seq[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(rows: Seq[(Array[Byte], Array[Byte])]): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.write", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#write(rows:Seq[(Array[Byte],Array[Byte])]):Unit", "kind" : "def"}, {"label" : "createEmptyBackup", "tail" : "(timestamp: String): KafkaMetadata[T]", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.createEmptyBackup", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#createEmptyBackup(timestamp:String):org.locationtech.geomesa.kafka.data.KafkaMetadata[T]", "kind" : "def"}, {"label" : "createTable", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.createTable", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#createTable():Unit", "kind" : "def"}, {"label" : "checkIfTableExists", "tail" : "(): Boolean", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.checkIfTableExists", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#checkIfTableExists:Boolean", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata#<init>", "error" : "unsupported entity"}, {"label" : "serializer", "tail" : ": MetadataSerializer[T]", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.serializer", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#serializer:org.locationtech.geomesa.index.metadata.MetadataSerializer[T]", "kind" : "val"}, {"label" : "config", "tail" : ": KafkaDataStoreConfig", "member" : "org.locationtech.geomesa.kafka.data.KafkaMetadata.config", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#config:org.locationtech.geomesa.kafka.data.KafkaDataStore.KafkaDataStoreConfig", "kind" : "val"}, {"label" : "scanKeys", "tail" : "(): CloseableIterator[(String, String)]", "member" : "org.locationtech.geomesa.index.metadata.KeyValueStoreMetadata.scanKeys", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#scanKeys():org.locationtech.geomesa.utils.collection.CloseableIterator[(String,String)]", "kind" : "def"}, {"label" : "scanValues", "tail" : "(typeName: String, prefix: String): CloseableIterator[(String, Array[Byte])]", "member" : "org.locationtech.geomesa.index.metadata.KeyValueStoreMetadata.scanValues", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#scanValues(typeName:String,prefix:String):org.locationtech.geomesa.utils.collection.CloseableIterator[(String,Array[Byte])]", "kind" : "def"}, {"label" : "scanValue", "tail" : "(typeName: String, key: String): Option[Array[Byte]]", "member" : "org.locationtech.geomesa.index.metadata.KeyValueStoreMetadata.scanValue", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#scanValue(typeName:String,key:String):Option[Array[Byte]]", "kind" : "def"}, {"label" : "delete", "tail" : "(typeName: String, keys: Seq[String]): Unit", "member" : "org.locationtech.geomesa.index.metadata.KeyValueStoreMetadata.delete", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#delete(typeName:String,keys:Seq[String]):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(typeName: String, rows: Seq[(String, Array[Byte])]): Unit", "member" : "org.locationtech.geomesa.index.metadata.KeyValueStoreMetadata.write", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#write(typeName:String,rows:Seq[(String,Array[Byte])]):Unit", "kind" : "def"}, {"label" : "encodeRow", "tail" : "(typeName: String, key: String): Array[Byte]", "member" : "org.locationtech.geomesa.index.metadata.KeyValueStoreMetadata.encodeRow", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#encodeRow(typeName:String,key:String):Array[Byte]", "kind" : "def"}, {"label" : "typeNameSeparator", "tail" : ": Char", "member" : "org.locationtech.geomesa.index.metadata.KeyValueStoreMetadata.typeNameSeparator", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#typeNameSeparator:Char", "kind" : "val"}, {"label" : "resetCache", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.resetCache", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#resetCache():Unit", "kind" : "def"}, {"label" : "ensureTableExists", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.ensureTableExists", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#ensureTableExists():Unit", "kind" : "def"}, {"label" : "backup", "tail" : "(typeName: String): Unit", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.backup", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#backup(typeName:String):Unit", "kind" : "def"}, {"label" : "delete", "tail" : "(typeName: String): Unit", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.delete", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#delete(typeName:String):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(typeName: String, keys: Seq[String]): Unit", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.remove", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#remove(typeName:String,keys:Seq[String]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(typeName: String, key: String): Unit", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.remove", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#remove(typeName:String,key:String):Unit", "kind" : "def"}, {"label" : "invalidateCache", "tail" : "(typeName: String, key: String): Unit", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.invalidateCache", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#invalidateCache(typeName:String,key:String):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(typeName: String, kvPairs: Map[String, T]): Unit", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.insert", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#insert(typeName:String,kvPairs:Map[String,T]):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(typeName: String, key: String, value: T): Unit", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.insert", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#insert(typeName:String,key:String,value:T):Unit", "kind" : "def"}, {"label" : "scan", "tail" : "(typeName: String, prefix: String, cache: Boolean): Seq[(String, T)]", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.scan", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#scan(typeName:String,prefix:String,cache:Boolean):Seq[(String,T)]", "kind" : "def"}, {"label" : "read", "tail" : "(typeName: String, key: String, cache: Boolean): Option[T]", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.read", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#read(typeName:String,key:String,cache:Boolean):Option[T]", "kind" : "def"}, {"label" : "getFeatureTypes", "tail" : "(): Array[String]", "member" : "org.locationtech.geomesa.index.metadata.TableBasedMetadata.getFeatureTypes", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#getFeatureTypes:Array[String]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "readRequired", "tail" : "(typeName: String, key: String): T", "member" : "org.locationtech.geomesa.index.metadata.GeoMesaMetadata.readRequired", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#readRequired(typeName:String,key:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/data\/KafkaMetadata.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.data.LazyProducer", "shortDescription" : "", "members_class" : [{"member" : "org.locationtech.geomesa.kafka.data.LazyProducer#<init>", "error" : "unsupported entity"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.utils.concurrent.LazyCloseable.close", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#close():Unit", "kind" : "def"}, {"label" : "instance", "tail" : ": Producer[Array[Byte], Array[Byte]]", "member" : "org.locationtech.geomesa.utils.concurrent.LazyCloseable.instance", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#instance:T", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/data\/package$$LazyProducer.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.data.MetadataMigration", "shortDescription" : "Migrates kafka data store metadata from geomesa 1.3.x to 1.4.x", "members_class" : [{"label" : "run", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.data.MetadataMigration.run", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#run():Unit", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.data.MetadataMigration#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/data\/MetadataMigration.html", "kind" : "class"}], "org.locationtech.geomesa.kafka" : [], "org.locationtech.geomesa.kafka.index" : [{"name" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createState", "tail" : "(feature: SimpleFeature): FeatureState", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.createState", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#createState(feature:org.geotools.api.feature.simple.SimpleFeature):org.locationtech.geomesa.kafka.index.FeatureStateFactory.FeatureState", "kind" : "abstract def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.io.Closeable.close", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html#close():Unit", "kind" : "abstract def"}], "shortDescription" : "Factory trait for creating feature states", "object" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html", "members_object" : [{"label" : "CurrentTimeTicker", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.CurrentTimeTicker", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#CurrentTimeTicker", "kind" : "object"}, {"label" : "FilteredExpiryFactory", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.FilteredExpiryFactory", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#FilteredExpiryFactoryextendsFeatureStateFactory", "kind" : "class"}, {"label" : "EventTimeOrderedExpiryFactory", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.EventTimeOrderedExpiryFactory", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#EventTimeOrderedExpiryFactoryextendsFeatureStateFactory", "kind" : "class"}, {"label" : "EventTimeExpiryFactory", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.EventTimeExpiryFactory", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#EventTimeExpiryFactoryextendsFeatureStateFactory", "kind" : "class"}, {"label" : "EventTimeFactory", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.EventTimeFactory", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#EventTimeFactoryextendsFeatureStateFactorywithLazyLogging", "kind" : "class"}, {"label" : "ExpiryFactory", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.ExpiryFactory", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#ExpiryFactoryextendsFeatureStateFactory", "kind" : "class"}, {"label" : "BasicFactory", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.BasicFactory", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#BasicFactoryextendsFeatureStateFactory", "kind" : "class"}, {"label" : "ExpiredState", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.ExpiredState", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#ExpiredStateextendsFeatureStateFactory.FeatureState", "kind" : "class"}, {"label" : "ExpiryState", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.ExpiryState", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#ExpiryStateextendsFeatureStateFactory.BasicStatewithRunnable", "kind" : "class"}, {"label" : "BasicState", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.BasicState", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#BasicStateextendsFeatureStateFactory.FeatureState", "kind" : "class"}, {"label" : "FeatureState", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.FeatureState", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#FeatureStateextendsAnyRef", "kind" : "trait"}, {"label" : "FeatureExpiration", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.FeatureExpiration", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#FeatureExpirationextendsAnyRef", "kind" : "trait"}, {"label" : "time", "tail" : "(expression: Expression, feature: SimpleFeature): Long", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.time", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#time(expression:org.geotools.api.filter.expression.Expression,feature:org.geotools.api.feature.simple.SimpleFeature):Long", "kind" : "def"}, {"label" : "apply", "tail" : "(sft: SimpleFeatureType, index: SpatialIndex[SimpleFeature], expiry: ExpiryTimeConfig, expiration: FeatureExpiration, executor: Option[(ScheduledExecutorService, Ticker)]): FeatureStateFactory", "member" : "org.locationtech.geomesa.kafka.index.FeatureStateFactory.apply", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#apply(sft:org.geotools.api.feature.simple.SimpleFeatureType,index:org.locationtech.geomesa.utils.index.SpatialIndex[org.geotools.api.feature.simple.SimpleFeature],expiry:org.locationtech.geomesa.kafka.data.KafkaDataStore.ExpiryTimeConfig,expiration:org.locationtech.geomesa.kafka.index.FeatureStateFactory.FeatureExpiration,executor:Option[(java.util.concurrent.ScheduledExecutorService,com.github.benmanes.caffeine.cache.Ticker)]):org.locationtech.geomesa.kafka.index.FeatureStateFactory", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/kafka\/index\/FeatureStateFactory.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache", "members_trait" : [{"label" : "removeListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.removeListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#removeListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "addListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.addListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#addListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "views", "tail" : "(): Seq[KafkaFeatureCacheView]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.views", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#views:Seq[org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView]", "kind" : "abstract def"}, {"label" : "query", "tail" : "(filter: Filter): Iterator[SimpleFeature]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.query", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#query(filter:org.geotools.api.filter.Filter):Iterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "abstract def"}, {"label" : "query", "tail" : "(id: String): Option[SimpleFeature]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.query", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#query(id:String):Option[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(filter: Filter): Int", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.size", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#size(filter:org.geotools.api.filter.Filter):Int", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.size", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#size():Int", "kind" : "abstract def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.clear", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#clear():Unit", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(id: String): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.remove", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#remove(id:String):Unit", "kind" : "abstract def"}, {"label" : "put", "tail" : "(feature: SimpleFeature): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.put", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#put(feature:org.geotools.api.feature.simple.SimpleFeature):Unit", "kind" : "abstract def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.io.Closeable.close", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html#close():Unit", "kind" : "abstract def"}], "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html", "members_object" : [{"label" : "NoOpFeatureCache", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.NoOpFeatureCache", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#NoOpFeatureCacheextendsKafkaFeatureCache", "kind" : "class"}, {"label" : "EmptyFeatureCache", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.EmptyFeatureCache", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#EmptyFeatureCacheextendsKafkaFeatureCache", "kind" : "class"}, {"label" : "NonIndexingEventTimeFeatureCache", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.NonIndexingEventTimeFeatureCache", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#NonIndexingEventTimeFeatureCacheextendsKafkaFeatureCache", "kind" : "class"}, {"label" : "NonIndexingFeatureCache", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.NonIndexingFeatureCache", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#NonIndexingFeatureCacheextendsKafkaFeatureCache", "kind" : "class"}, {"label" : "nonIndexing", "tail" : "(sft: SimpleFeatureType, ordering: ExpiryTimeConfig): KafkaFeatureCache", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.nonIndexing", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#nonIndexing(sft:org.geotools.api.feature.simple.SimpleFeatureType,ordering:org.locationtech.geomesa.kafka.data.KafkaDataStore.ExpiryTimeConfig):org.locationtech.geomesa.kafka.index.KafkaFeatureCache", "kind" : "def"}, {"label" : "empty", "tail" : "(views: Seq[LayerView]): KafkaFeatureCache", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.empty", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#empty(views:Seq[org.locationtech.geomesa.kafka.data.KafkaDataStore.LayerView]):org.locationtech.geomesa.kafka.index.KafkaFeatureCache", "kind" : "def"}, {"label" : "apply", "tail" : "(sft: SimpleFeatureType, config: IndexConfig, views: Seq[LayerView], metrics: Option[GeoMesaMetrics]): KafkaFeatureCache", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.apply", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#apply(sft:org.geotools.api.feature.simple.SimpleFeatureType,config:org.locationtech.geomesa.kafka.data.KafkaDataStore.IndexConfig,views:Seq[org.locationtech.geomesa.kafka.data.KafkaDataStore.LayerView],metrics:Option[org.locationtech.geomesa.metrics.core.GeoMesaMetrics]):org.locationtech.geomesa.kafka.index.KafkaFeatureCache", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCache.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl", "shortDescription" : "Feature cache implementation", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.close", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#close():Unit", "kind" : "def"}, {"label" : "query", "tail" : "(filter: Filter): Iterator[SimpleFeature]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.query", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#query(filter:org.geotools.api.filter.Filter):Iterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "query", "tail" : "(id: String): Option[SimpleFeature]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.query", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#query(id:String):Option[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "size", "tail" : "(f: Filter): Int", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.size", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#size(f:org.geotools.api.filter.Filter):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.size", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#size():Int", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.clear", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#clear():Unit", "kind" : "def"}, {"label" : "expire", "tail" : "(featureState: FeatureState): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.expire", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#expire(featureState:org.locationtech.geomesa.kafka.index.FeatureStateFactory.FeatureState):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(id: String): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.remove", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#remove(id:String):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(feature: SimpleFeature): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.put", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#put(feature:org.geotools.api.feature.simple.SimpleFeature):Unit", "kind" : "def"}, {"label" : "views", "tail" : ": Seq[KafkaFeatureCacheView]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.views", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#views:Seq[org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView]", "kind" : "val"}, {"member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl#<init>", "error" : "unsupported entity"}, {"label" : "removeListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.removeListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#removeListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "addListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.addListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#addListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheImpl.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView", "members_trait" : [{"label" : "views", "tail" : ": Seq[KafkaFeatureCacheView]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView.views", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#views:Seq[org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView]", "kind" : "val"}, {"label" : "removeListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.removeListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#removeListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "addListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.addListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#addListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sft", "tail" : "(): SimpleFeatureType", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView.sft", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#sft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "abstract def"}, {"label" : "query", "tail" : "(filter: Filter): Iterator[SimpleFeature]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.query", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#query(filter:org.geotools.api.filter.Filter):Iterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "abstract def"}, {"label" : "query", "tail" : "(id: String): Option[SimpleFeature]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.query", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#query(id:String):Option[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(filter: Filter): Int", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.size", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#size(filter:org.geotools.api.filter.Filter):Int", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.size", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#size():Int", "kind" : "abstract def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.clear", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#clear():Unit", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(id: String): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.remove", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#remove(id:String):Unit", "kind" : "abstract def"}, {"label" : "put", "tail" : "(feature: SimpleFeature): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCache.put", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#put(feature:org.geotools.api.feature.simple.SimpleFeature):Unit", "kind" : "abstract def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.io.Closeable.close", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html#close():Unit", "kind" : "abstract def"}], "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html", "members_object" : [{"label" : "BaseFeatureCacheView", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView.BaseFeatureCacheView", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#BaseFeatureCacheViewextendsKafkaFeatureCacheView", "kind" : "abstract class"}, {"label" : "KafkaFeatureCacheFilterTransformView", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView.KafkaFeatureCacheFilterTransformView", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#KafkaFeatureCacheFilterTransformViewextendsKafkaFeatureCacheView.BaseFeatureCacheView", "kind" : "class"}, {"label" : "KafkaFeatureCacheTransformView", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView.KafkaFeatureCacheTransformView", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#KafkaFeatureCacheTransformViewextendsKafkaFeatureCacheView.BaseFeatureCacheView", "kind" : "class"}, {"label" : "KafkaFeatureCacheFilterView", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView.KafkaFeatureCacheFilterView", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#KafkaFeatureCacheFilterViewextendsKafkaFeatureCacheView.BaseFeatureCacheView", "kind" : "class"}, {"label" : "KafkaFeatureCacheEmptyView", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView.KafkaFeatureCacheEmptyView", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#KafkaFeatureCacheEmptyViewextendsKafkaFeatureCache.EmptyFeatureCachewithKafkaFeatureCacheView", "kind" : "class"}, {"label" : "empty", "tail" : "(sft: SimpleFeatureType): KafkaFeatureCacheView", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView.empty", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#empty(sft:org.geotools.api.feature.simple.SimpleFeatureType):org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView", "kind" : "def"}, {"label" : "apply", "tail" : "(view: LayerView, index: SpatialIndexSupport): KafkaFeatureCacheView", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView.apply", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#apply(view:org.locationtech.geomesa.kafka.data.KafkaDataStore.LayerView,index:org.locationtech.geomesa.filter.index.SpatialIndexSupport):org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheView.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheWithMetrics", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html", "members_class" : [{"label" : "expire", "tail" : "(featureState: FeatureState): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheWithMetrics.expire", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#expire(featureState:org.locationtech.geomesa.kafka.index.FeatureStateFactory.FeatureState):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(id: String): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheWithMetrics.remove", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#remove(id:String):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(feature: SimpleFeature): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheWithMetrics.put", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#put(feature:org.geotools.api.feature.simple.SimpleFeature):Unit", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheWithMetrics#<init>", "error" : "unsupported entity"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.close", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#close():Unit", "kind" : "def"}, {"label" : "query", "tail" : "(filter: Filter): Iterator[SimpleFeature]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.query", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#query(filter:org.geotools.api.filter.Filter):Iterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "query", "tail" : "(id: String): Option[SimpleFeature]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.query", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#query(id:String):Option[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "size", "tail" : "(f: Filter): Int", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.size", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#size(f:org.geotools.api.filter.Filter):Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.size", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#size():Int", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.clear", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#clear():Unit", "kind" : "def"}, {"label" : "views", "tail" : ": Seq[KafkaFeatureCacheView]", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheImpl.views", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#views:Seq[org.locationtech.geomesa.kafka.index.KafkaFeatureCacheView]", "kind" : "val"}, {"label" : "removeListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.removeListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#removeListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "addListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.addListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#addListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "LastDateGauge", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheWithMetrics.LastDateGauge", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#LastDateGaugeextendsGauge[java.util.Date]", "kind" : "class"}, {"label" : "SizeGauge", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheWithMetrics.SizeGauge", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#SizeGaugeextendsGauge[Int]", "kind" : "class"}, {"label" : "DateMetrics", "tail" : "", "member" : "org.locationtech.geomesa.kafka.index.KafkaFeatureCacheWithMetrics.DateMetrics", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#DateMetricsextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaFeatureCacheWithMetrics.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.index.KafkaListeners", "members_trait" : [{"label" : "removeListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.removeListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#removeListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "addListener", "tail" : "(source: SimpleFeatureSource, listener: FeatureListener): Unit", "member" : "org.locationtech.geomesa.kafka.index.KafkaListeners.addListener", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#addListener(source:org.geotools.api.data.SimpleFeatureSource,listener:org.geotools.api.data.FeatureListener):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaListeners.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.kafka.index.KafkaQueryRunner", "shortDescription" : "", "members_class" : [{"label" : "features", "tail" : "(sft: SimpleFeatureType, filter: Option[Filter]): CloseableIterator[SimpleFeature]", "member" : "org.locationtech.geomesa.kafka.index.KafkaQueryRunner.features", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#features(sft:org.geotools.api.feature.simple.SimpleFeatureType,filter:Option[org.geotools.api.filter.Filter]):org.locationtech.geomesa.utils.collection.CloseableIterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "interceptors", "tail" : ": QueryInterceptorFactory", "member" : "org.locationtech.geomesa.kafka.index.KafkaQueryRunner.interceptors", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#interceptors:org.locationtech.geomesa.index.planning.QueryInterceptor.QueryInterceptorFactory", "kind" : "val"}, {"label" : "name", "tail" : "(): String", "member" : "org.locationtech.geomesa.kafka.index.KafkaQueryRunner.name", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#name:String", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.index.KafkaQueryRunner#<init>", "error" : "unsupported entity"}, {"label" : "getReturnSft", "tail" : "(sft: SimpleFeatureType, hints: Hints): SimpleFeatureType", "member" : "org.locationtech.geomesa.index.planning.LocalQueryRunner.getReturnSft", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#getReturnSft(sft:org.geotools.api.feature.simple.SimpleFeatureType,hints:org.geotools.util.factory.Hints):org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "runQuery", "tail" : "(sft: SimpleFeatureType, original: Query, explain: Explainer): QueryResult", "member" : "org.locationtech.geomesa.index.planning.LocalQueryRunner.runQuery", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#runQuery(sft:org.geotools.api.feature.simple.SimpleFeatureType,original:org.geotools.api.data.Query,explain:org.locationtech.geomesa.index.utils.Explainer):org.locationtech.geomesa.index.planning.QueryRunner.QueryResult", "kind" : "def"}, {"label" : "configureQuery", "tail" : "(sft: SimpleFeatureType, original: Query): Query", "member" : "org.locationtech.geomesa.index.planning.QueryRunner.configureQuery", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#configureQuery(sft:org.geotools.api.feature.simple.SimpleFeatureType,original:org.geotools.api.data.Query):org.geotools.api.data.Query", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/index\/KafkaQueryRunner.html", "kind" : "class"}], "org" : [], "org.locationtech.geomesa.kafka.utils" : [{"name" : "org.locationtech.geomesa.kafka.utils.GeoMessage", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html", "members_object" : [{"label" : "Clear", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessage.Clear", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#Clear", "kind" : "object"}, {"label" : "Clear", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessage.Clear", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#ClearextendsGeoMessage", "kind" : "trait"}, {"label" : "Delete", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessage.Delete", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#DeleteextendsGeoMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "Change", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessage.Change", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#ChangeextendsGeoMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "change", "tail" : "(sf: SimpleFeature): GeoMessage", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessage.change", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#change(sf:org.geotools.api.feature.simple.SimpleFeature):org.locationtech.geomesa.kafka.utils.GeoMessage", "kind" : "def"}, {"label" : "delete", "tail" : "(id: String): GeoMessage", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessage.delete", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#delete(id:String):org.locationtech.geomesa.kafka.utils.GeoMessage", "kind" : "def"}, {"label" : "clear", "tail" : "(): Clear", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessage.clear", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#clear():org.locationtech.geomesa.kafka.utils.GeoMessage.Clear", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessage.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.kafka.utils.GeoMessageProcessor", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "consume", "tail" : "(records: Seq[GeoMessage]): BatchResult", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageProcessor.consume", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html#consume(records:Seq[org.locationtech.geomesa.kafka.utils.GeoMessage]):org.locationtech.geomesa.kafka.consumer.BatchConsumer.BatchResult.BatchResult", "kind" : "abstract def"}], "shortDescription" : "Message processor class.", "object" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html", "members_object" : [{"label" : "GeoMessageConsumer", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageProcessor.GeoMessageConsumer", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#GeoMessageConsumerextendsBatchConsumer", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageProcessor.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer", "shortDescription" : "Serialized GeoMessages", "object" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html", "members_class" : [{"label" : "deserialize", "tail" : "(key: Array[Byte], value: Array[Byte], deserializer: SimpleFeatureSerializer): GeoMessage", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.deserialize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#deserialize(key:Array[Byte],value:Array[Byte],deserializer:org.locationtech.geomesa.features.SimpleFeatureSerializer):org.locationtech.geomesa.kafka.utils.GeoMessage", "kind" : "def"}, {"label" : "deserialize", "tail" : "(key: Array[Byte], value: Array[Byte], headers: Map[String, Array[Byte]], timestamp: Long): GeoMessage", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.deserialize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#deserialize(key:Array[Byte],value:Array[Byte],headers:Map[String,Array[Byte]],timestamp:Long):org.locationtech.geomesa.kafka.utils.GeoMessage", "kind" : "def"}, {"label" : "serialize", "tail" : "(msg: GeoMessage): (Array[Byte], Array[Byte], Map[String, Array[Byte]])", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.serialize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#serialize(msg:org.locationtech.geomesa.kafka.utils.GeoMessage):(Array[Byte],Array[Byte],Map[String,Array[Byte]])", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer#<init>", "error" : "unsupported entity"}, {"label" : "serializer", "tail" : ": SimpleFeatureSerializer", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.serializer", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#serializer:org.locationtech.geomesa.features.SimpleFeatureSerializer", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "GeoMessageSerializerFactory", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.GeoMessageSerializerFactory", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#GeoMessageSerializerFactoryextendsAnyRef", "kind" : "class"}, {"label" : "GeoMessagePartitioner", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.GeoMessagePartitioner", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#GeoMessagePartitionerextendsPartitioner", "kind" : "class"}, {"label" : "partition", "tail" : "(numPartitions: Int, toKey: ⇒ Array[Byte]): Int", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.partition", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#partition(numPartitions:Int,toKey:=>Array[Byte]):Int", "kind" : "def"}, {"label" : "apply", "tail" : "(sft: SimpleFeatureType, serialization: SerializationType, opts: Set[SerializationOption]): GeoMessageSerializer", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.apply", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#apply(sft:org.geotools.api.feature.simple.SimpleFeatureType,serialization:org.locationtech.geomesa.features.SerializationType.SerializationType,opts:Set[org.locationtech.geomesa.features.SerializationOption.SerializationOption]):org.locationtech.geomesa.kafka.utils.GeoMessageSerializer", "kind" : "def"}, {"label" : "apply", "tail" : "(sft: SimpleFeatureType, serialization: SerializationType, lazy: Boolean): GeoMessageSerializer", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.apply", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#apply(sft:org.geotools.api.feature.simple.SimpleFeatureType,serialization:org.locationtech.geomesa.features.SerializationType.SerializationType,lazy:Boolean):org.locationtech.geomesa.kafka.utils.GeoMessageSerializer", "kind" : "def"}, {"label" : "VersionHeader", "tail" : ": String", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.VersionHeader", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#VersionHeader:String", "kind" : "val"}, {"label" : "AvroVersion", "tail" : ": Byte", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.AvroVersion", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#AvroVersion:Byte", "kind" : "val"}, {"label" : "KryoVersion", "tail" : ": Byte", "member" : "org.locationtech.geomesa.kafka.utils.GeoMessageSerializer.KryoVersion", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#KryoVersion:Byte", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/utils\/GeoMessageSerializer.html", "kind" : "object"}, {"name" : "org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html", "members_class" : [{"label" : "time", "tail" : ": Long", "member" : "org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent.time", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#time:Long", "kind" : "val"}, {"label" : "getFilter", "tail" : "(): Filter", "member" : "org.geotools.api.data.FeatureEvent.getFilter", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#getFilter():org.geotools.api.filter.Filter", "kind" : "def"}, {"label" : "getBounds", "tail" : "(): ReferencedEnvelope", "member" : "org.geotools.api.data.FeatureEvent.getBounds", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#getBounds():org.geotools.geometry.jts.ReferencedEnvelope", "kind" : "def"}, {"label" : "getType", "tail" : "(): Type", "member" : "org.geotools.api.data.FeatureEvent.getType", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#getType():org.geotools.api.data.FeatureEvent.Type", "kind" : "def"}, {"label" : "getEventType", "tail" : "(): Int", "member" : "org.geotools.api.data.FeatureEvent.getEventType", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#getEventType():Int", "kind" : "def"}, {"label" : "setFeatureSource", "tail" : "(arg0: FeatureSource[_ <: FeatureType, _ <: Feature]): Unit", "member" : "org.geotools.api.data.FeatureEvent.setFeatureSource", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#setFeatureSource(x$1:org.geotools.api.data.FeatureSource[_<:org.geotools.api.feature.type.FeatureType,_<:org.geotools.api.feature.Feature]):Unit", "kind" : "def"}, {"label" : "getFeatureSource", "tail" : "(): FeatureSource[_ <: FeatureType, _ <: Feature]", "member" : "org.geotools.api.data.FeatureEvent.getFeatureSource", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#getFeatureSource():org.geotools.api.data.FeatureSource[_<:org.geotools.api.feature.type.FeatureType,_<:org.geotools.api.feature.Feature]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.util.EventObject.toString", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#toString():String", "kind" : "def"}, {"label" : "getSource", "tail" : "(): AnyRef", "member" : "java.util.EventObject.getSource", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#getSource():Object", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "KafkaFeatureCleared", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent.KafkaFeatureCleared", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#KafkaFeatureClearedextendsKafkaFeatureEvent", "kind" : "class"}, {"label" : "KafkaFeatureRemoved", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent.KafkaFeatureRemoved", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#KafkaFeatureRemovedextendsKafkaFeatureEvent", "kind" : "class"}, {"label" : "KafkaFeatureChanged", "tail" : "", "member" : "org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent.KafkaFeatureChanged", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#KafkaFeatureChangedextendsKafkaFeatureEvent", "kind" : "class"}, {"label" : "cleared", "tail" : "(source: SimpleFeatureSource, ts: Long): KafkaFeatureEvent", "member" : "org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent.cleared", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#cleared(source:org.geotools.api.data.SimpleFeatureSource,ts:Long):org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent", "kind" : "def"}, {"label" : "removed", "tail" : "(source: SimpleFeatureSource, id: String, feature: SimpleFeature, ts: Long): KafkaFeatureEvent", "member" : "org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent.removed", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#removed(source:org.geotools.api.data.SimpleFeatureSource,id:String,feature:org.geotools.api.feature.simple.SimpleFeature,ts:Long):org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent", "kind" : "def"}, {"label" : "changed", "tail" : "(source: SimpleFeatureSource, feature: SimpleFeature, ts: Long): KafkaFeatureEvent", "member" : "org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent.changed", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#changed(source:org.geotools.api.data.SimpleFeatureSource,feature:org.geotools.api.feature.simple.SimpleFeature,ts:Long):org.locationtech.geomesa.kafka.utils.KafkaFeatureEvent", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/utils\/KafkaFeatureEvent.html", "kind" : "class"}], "org.locationtech.geomesa.kafka.streams" : [{"name" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage", "shortDescription" : "Data model for a GeoMesa data store message, used as the value in a Kafka record", "object" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html", "members_object" : [{"label" : "delete", "tail" : "(): GeoMesaMessage", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage.delete", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#delete():org.locationtech.geomesa.kafka.streams.GeoMesaMessage", "kind" : "def"}, {"label" : "upsert", "tail" : "(attributes: List[AnyRef], userData: Map[String, String]): GeoMesaMessage", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage.upsert", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#upsert(attributes:java.util.List[AnyRef],userData:java.util.Map[String,String]):org.locationtech.geomesa.kafka.streams.GeoMesaMessage", "kind" : "def"}, {"label" : "upsert", "tail" : "(attributes: Seq[AnyRef], userData: Map[String, String]): GeoMesaMessage", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage.upsert", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#upsert(attributes:Seq[AnyRef],userData:Map[String,String]):org.locationtech.geomesa.kafka.streams.GeoMesaMessage", "kind" : "def"}, {"label" : "upsert", "tail" : "(attributes: List[AnyRef]): GeoMesaMessage", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage.upsert", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#upsert(attributes:java.util.List[AnyRef]):org.locationtech.geomesa.kafka.streams.GeoMesaMessage", "kind" : "def"}, {"label" : "upsert", "tail" : "(attributes: Seq[AnyRef]): GeoMesaMessage", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage.upsert", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#upsert(attributes:Seq[AnyRef]):org.locationtech.geomesa.kafka.streams.GeoMesaMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "asJava", "tail" : "(): List[AnyRef]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage.asJava", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#asJava():java.util.List[AnyRef]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage#<init>", "error" : "unsupported entity"}, {"label" : "userData", "tail" : ": Map[String, String]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage.userData", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#userData:Map[String,String]", "kind" : "val"}, {"label" : "attributes", "tail" : ": Seq[AnyRef]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage.attributes", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#attributes:Seq[AnyRef]", "kind" : "val"}, {"label" : "action", "tail" : ": MessageAction", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessage.action", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#action:org.locationtech.geomesa.kafka.streams.MessageAction.MessageAction", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaMessage.html", "kind" : "case class"}, {"name" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessageSerializer", "shortDescription" : "Serializer for GeoMesaMessages", "members_class" : [{"label" : "wrap", "tail" : "(message: GeoMesaMessage): SimpleFeature", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessageSerializer.wrap", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#wrap(message:org.locationtech.geomesa.kafka.streams.GeoMesaMessage):org.geotools.api.feature.simple.SimpleFeature", "kind" : "def"}, {"label" : "deserialize", "tail" : "(data: Array[Byte]): GeoMesaMessage", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessageSerializer.deserialize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#deserialize(data:Array[Byte]):org.locationtech.geomesa.kafka.streams.GeoMesaMessage", "kind" : "def"}, {"label" : "serialize", "tail" : "(data: GeoMesaMessage): Array[Byte]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessageSerializer.serialize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#serialize(data:org.locationtech.geomesa.kafka.streams.GeoMesaMessage):Array[Byte]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessageSerializer#<init>", "error" : "unsupported entity"}, {"label" : "internal", "tail" : ": SimpleFeatureSerializer", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessageSerializer.internal", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#internal:org.locationtech.geomesa.features.SimpleFeatureSerializer", "kind" : "val"}, {"label" : "sft", "tail" : ": SimpleFeatureType", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaMessageSerializer.sft", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#sft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMesaMessageSerializer.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde", "shortDescription" : "Serde for reading and writing to GeoMesa Kafka topics", "object" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.close", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#close():Unit", "kind" : "def"}, {"label" : "deserialize", "tail" : "(topic: String, data: Array[Byte]): GeoMesaMessage", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.deserialize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#deserialize(topic:String,data:Array[Byte]):org.locationtech.geomesa.kafka.streams.GeoMesaMessage", "kind" : "def"}, {"label" : "serialize", "tail" : "(topic: String, data: GeoMesaMessage): Array[Byte]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.serialize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#serialize(topic:String,data:org.locationtech.geomesa.kafka.streams.GeoMesaMessage):Array[Byte]", "kind" : "def"}, {"label" : "deserializer", "tail" : "(): Deserializer[GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.deserializer", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#deserializer():org.apache.kafka.common.serialization.Deserializer[org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "serializer", "tail" : "(): Serializer[GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.serializer", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#serializer():org.apache.kafka.common.serialization.Serializer[org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "forType", "tail" : "(typeName: String): Serde[GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.forType", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#forType(typeName:String):org.apache.kafka.common.serialization.Serde[org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "configure", "tail" : "(configs: Map[String, _], isKey: Boolean): Unit", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.configure", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#configure(configs:java.util.Map[String,_],isKey:Boolean):Unit", "kind" : "def"}, {"label" : "usesDefaultPartitioning", "tail" : "(typeName: String): Boolean", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.usesDefaultPartitioning", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#usesDefaultPartitioning(typeName:String):Boolean", "kind" : "def"}, {"label" : "topic", "tail" : "(typeName: String): String", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.topic", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#topic(typeName:String):String", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde#<init>", "error" : "unsupported entity"}, {"label" : "deserialize", "tail" : "(arg0: String, arg1: Headers, arg2: ByteBuffer): GeoMesaMessage", "member" : "org.apache.kafka.common.serialization.Deserializer.deserialize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#deserialize(x$1:String,x$2:org.apache.kafka.common.header.Headers,x$3:java.nio.ByteBuffer):T", "kind" : "def"}, {"label" : "deserialize", "tail" : "(arg0: String, arg1: Headers, arg2: Array[Byte]): GeoMesaMessage", "member" : "org.apache.kafka.common.serialization.Deserializer.deserialize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#deserialize(x$1:String,x$2:org.apache.kafka.common.header.Headers,x$3:Array[Byte]):T", "kind" : "def"}, {"label" : "serialize", "tail" : "(arg0: String, arg1: Headers, arg2: GeoMesaMessage): Array[Byte]", "member" : "org.apache.kafka.common.serialization.Serializer.serialize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#serialize(x$1:String,x$2:org.apache.kafka.common.header.Headers,x$3:T):Array[Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "TypeSpecificSerde", "tail" : "", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaSerde.TypeSpecificSerde", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#TypeSpecificSerdeextendsSerde[org.locationtech.geomesa.kafka.streams.GeoMesaMessage]withSerializer[org.locationtech.geomesa.kafka.streams.GeoMesaMessage]withDeserializer[org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaSerde.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "shortDescription" : "Wrapper for a kafka streams builder that will configure serialization based on a GeoMesa Kafka feature store", "object" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html", "members_class" : [{"label" : "build", "tail" : "(): Topology", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.build", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#build():org.apache.kafka.streams.Topology", "kind" : "def"}, {"label" : "to", "tail" : "(typeName: String, stream: KStream[String, GeoMesaMessage]): Unit", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.to", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#to(typeName:String,stream:org.apache.kafka.streams.scala.kstream.KStream[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]):Unit", "kind" : "def"}, {"label" : "globalTable", "tail" : "(typeName: String, materialized: Materialized[String, GeoMesaMessage, ByteArrayKeyValueStore]): GlobalKTable[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.globalTable", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#globalTable(typeName:String,materialized:org.apache.kafka.streams.scala.kstream.Materialized[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage,org.apache.kafka.streams.scala.ByteArrayKeyValueStore]):org.apache.kafka.streams.kstream.GlobalKTable[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "globalTable", "tail" : "(typeName: String): GlobalKTable[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.globalTable", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#globalTable(typeName:String):org.apache.kafka.streams.kstream.GlobalKTable[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "table", "tail" : "(typeName: String, materialized: Materialized[String, GeoMesaMessage, ByteArrayKeyValueStore]): KTable[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.table", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#table(typeName:String,materialized:org.apache.kafka.streams.scala.kstream.Materialized[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage,org.apache.kafka.streams.scala.ByteArrayKeyValueStore]):org.apache.kafka.streams.scala.kstream.KTable[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "table", "tail" : "(typeName: String): KTable[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.table", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#table(typeName:String):org.apache.kafka.streams.scala.kstream.KTable[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "stream", "tail" : "(typeName: String): KStream[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.stream", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#stream(typeName:String):org.apache.kafka.streams.scala.kstream.KStream[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "serde", "tail" : "(typeName: String): Serde[GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.serde", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#serde(typeName:String):org.apache.kafka.common.serialization.Serde[org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "def"}, {"label" : "consumed", "tail" : ": Consumed[String, GeoMesaMessage]", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.consumed", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#consumed:org.apache.kafka.streams.scala.kstream.Consumed[String,org.locationtech.geomesa.kafka.streams.GeoMesaMessage]", "kind" : "implicit val"}, {"member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder#<init>", "error" : "unsupported entity"}, {"label" : "wrapped", "tail" : ": StreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.wrapped", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#wrapped:org.apache.kafka.streams.scala.StreamsBuilder", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(params: Map[String, String], timestampExtractor: TimestampExtractor, resetPolicy: AutoOffsetReset, streamsBuilder: StreamsBuilder): GeoMesaStreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#apply(params:java.util.Map[String,String],timestampExtractor:org.apache.kafka.streams.processor.TimestampExtractor,resetPolicy:org.apache.kafka.streams.Topology.AutoOffsetReset,streamsBuilder:org.apache.kafka.streams.scala.StreamsBuilder):org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(params: Map[String, String], timestampExtractor: TimestampExtractor, resetPolicy: AutoOffsetReset, streamsBuilder: StreamsBuilder): GeoMesaStreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#apply(params:Map[String,String],timestampExtractor:org.apache.kafka.streams.processor.TimestampExtractor,resetPolicy:org.apache.kafka.streams.Topology.AutoOffsetReset,streamsBuilder:org.apache.kafka.streams.scala.StreamsBuilder):org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(params: Map[String, String], timestampExtractor: TimestampExtractor, resetPolicy: AutoOffsetReset): GeoMesaStreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#apply(params:Map[String,String],timestampExtractor:org.apache.kafka.streams.processor.TimestampExtractor,resetPolicy:org.apache.kafka.streams.Topology.AutoOffsetReset):org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(params: Map[String, String], resetPolicy: AutoOffsetReset, streamsBuilder: StreamsBuilder): GeoMesaStreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#apply(params:Map[String,String],resetPolicy:org.apache.kafka.streams.Topology.AutoOffsetReset,streamsBuilder:org.apache.kafka.streams.scala.StreamsBuilder):org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(params: Map[String, String], resetPolicy: AutoOffsetReset): GeoMesaStreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#apply(params:Map[String,String],resetPolicy:org.apache.kafka.streams.Topology.AutoOffsetReset):org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(params: Map[String, String], timestampExtractor: TimestampExtractor, streamsBuilder: StreamsBuilder): GeoMesaStreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#apply(params:Map[String,String],timestampExtractor:org.apache.kafka.streams.processor.TimestampExtractor,streamsBuilder:org.apache.kafka.streams.scala.StreamsBuilder):org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(params: Map[String, String], timestampExtractor: TimestampExtractor): GeoMesaStreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#apply(params:Map[String,String],timestampExtractor:org.apache.kafka.streams.processor.TimestampExtractor):org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(params: Map[String, String], streamsBuilder: StreamsBuilder): GeoMesaStreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#apply(params:Map[String,String],streamsBuilder:org.apache.kafka.streams.scala.StreamsBuilder):org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(params: Map[String, String]): GeoMesaStreamsBuilder", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#apply(params:Map[String,String]):org.locationtech.geomesa.kafka.streams.GeoMesaStreamsBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaStreamsBuilder.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.streams.GeoMesaTimestampExtractor", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html", "members_object" : [{"label" : "DefaultDateExtractor", "tail" : "", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaTimestampExtractor.DefaultDateExtractor", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#DefaultDateExtractorextendsGeoMesaTimestampExtractor.FeatureTimestampExtractor", "kind" : "class"}, {"label" : "EventTimestampExtractor", "tail" : "", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaTimestampExtractor.EventTimestampExtractor", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#EventTimestampExtractorextendsGeoMesaTimestampExtractor.FeatureTimestampExtractor", "kind" : "class"}, {"label" : "apply", "tail" : "(params: Map[String, _]): TimestampExtractor", "member" : "org.locationtech.geomesa.kafka.streams.GeoMesaTimestampExtractor.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#apply(params:java.util.Map[String,_]):org.apache.kafka.streams.processor.TimestampExtractor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/GeoMesaTimestampExtractor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.kafka.streams.GeoMessageStreamPartitioner", "shortDescription" : "Kafka partitioner for GeoMesa messages, to make sure all updates for a givenfeature go to the same partition", "members_class" : [{"label" : "partition", "tail" : "(topic: String, key: String, value: GeoMesaMessage, numPartitions: Int): Integer", "member" : "org.locationtech.geomesa.kafka.streams.GeoMessageStreamPartitioner.partition", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#partition(topic:String,key:String,value:org.locationtech.geomesa.kafka.streams.GeoMesaMessage,numPartitions:Int):Integer", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.streams.GeoMessageStreamPartitioner#<init>", "error" : "unsupported entity"}, {"label" : "partitions", "tail" : "(arg0: String, arg1: String, arg2: GeoMesaMessage, arg3: Int): Optional[Set[Integer]]", "member" : "org.apache.kafka.streams.processor.StreamPartitioner.partitions", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#partitions(x$1:String,x$2:K,x$3:V,x$4:Int):java.util.Optional[java.util.Set[Integer]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$GeoMessageStreamPartitioner.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.kafka.streams.HasTopicMetadata", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "usesDefaultPartitioning", "tail" : "(typeName: String): Boolean", "member" : "org.locationtech.geomesa.kafka.streams.HasTopicMetadata.usesDefaultPartitioning", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#usesDefaultPartitioning(typeName:String):Boolean", "kind" : "abstract def"}, {"label" : "topic", "tail" : "(typeName: String): String", "member" : "org.locationtech.geomesa.kafka.streams.HasTopicMetadata.topic", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html#topic(typeName:String):String", "kind" : "abstract def"}], "shortDescription" : "Trait for provided metadata about a feature type topic", "trait" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$HasTopicMetadata.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.kafka.streams.MessageAction", "shortDescription" : "Types of messages", "object" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Delete", "tail" : ": Value", "member" : "org.locationtech.geomesa.kafka.streams.MessageAction.Delete", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#Delete:org.locationtech.geomesa.kafka.streams.MessageAction.Value", "kind" : "val"}, {"label" : "Upsert", "tail" : ": Value", "member" : "org.locationtech.geomesa.kafka.streams.MessageAction.Upsert", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#Upsert:org.locationtech.geomesa.kafka.streams.MessageAction.Value", "kind" : "val"}, {"label" : "MessageAction", "tail" : "", "member" : "org.locationtech.geomesa.kafka.streams.MessageAction.MessageAction", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#MessageAction=org.locationtech.geomesa.kafka.streams.MessageAction.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/MessageAction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.locationtech.geomesa.kafka.streams.SerializerCache", "shortDescription" : "Cache for serializers and topic names", "members_class" : [{"label" : "serializer", "tail" : "(topic: String): GeoMesaMessageSerializer", "member" : "org.locationtech.geomesa.kafka.streams.SerializerCache.serializer", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#serializer(topic:String):org.locationtech.geomesa.kafka.streams.package.GeoMesaMessageSerializer", "kind" : "def"}, {"label" : "usesDefaultPartitioning", "tail" : "(typeName: String): Boolean", "member" : "org.locationtech.geomesa.kafka.streams.SerializerCache.usesDefaultPartitioning", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#usesDefaultPartitioning(typeName:String):Boolean", "kind" : "def"}, {"label" : "topic", "tail" : "(typeName: String): String", "member" : "org.locationtech.geomesa.kafka.streams.SerializerCache.topic", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#topic(typeName:String):String", "kind" : "def"}, {"member" : "org.locationtech.geomesa.kafka.streams.SerializerCache#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/kafka\/streams\/package$$SerializerCache.html", "kind" : "class"}]};