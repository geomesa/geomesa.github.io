Index.PACKAGES = {"org.locationtech" : [], "org.locationtech.geomesa" : [], "org.locationtech.geomesa.convert.json" : [{"name" : "org.locationtech.geomesa.convert.json.GeoJsonParsing", "members_trait" : [{"label" : "parseElement", "tail" : "(elem: JsonElement, path: String): Seq[(String, Any)]", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseElement", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#parseElement(elem:com.google.gson.JsonElement,path:String):Seq[(String,Any)]", "kind" : "def"}, {"label" : "parseGeometry", "tail" : "(el: JsonElement): Geometry", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseGeometry", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#parseGeometry(el:com.google.gson.JsonElement):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "parseFeature", "tail" : "(el: JsonElement): GeoJsonFeature", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseFeature", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#parseFeature(el:com.google.gson.JsonElement):org.locationtech.geomesa.convert.json.GeoJsonParsing.GeoJsonFeature", "kind" : "def"}, {"label" : "parseFeatureCollection", "tail" : "(el: JsonElement): Seq[GeoJsonFeature]", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseFeatureCollection", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#parseFeatureCollection(el:com.google.gson.JsonElement):Seq[org.locationtech.geomesa.convert.json.GeoJsonParsing.GeoJsonFeature]", "kind" : "def"}, {"label" : "isFeature", "tail" : "(el: JsonElement): Boolean", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.isFeature", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#isFeature(el:com.google.gson.JsonElement):Boolean", "kind" : "def"}, {"label" : "isFeatureCollection", "tail" : "(el: JsonElement): Boolean", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.isFeatureCollection", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#isFeatureCollection(el:com.google.gson.JsonElement):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html", "members_object" : [{"label" : "GeoJsonFeature", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.GeoJsonFeature", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#GeoJsonFeatureextendsProductwithSerializable", "kind" : "case class"}, {"label" : "parseElement", "tail" : "(elem: JsonElement, path: String): Seq[(String, Any)]", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseElement", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#parseElement(elem:com.google.gson.JsonElement,path:String):Seq[(String,Any)]", "kind" : "def"}, {"label" : "parseGeometry", "tail" : "(el: JsonElement): Geometry", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseGeometry", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#parseGeometry(el:com.google.gson.JsonElement):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "parseFeature", "tail" : "(el: JsonElement): GeoJsonFeature", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseFeature", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#parseFeature(el:com.google.gson.JsonElement):org.locationtech.geomesa.convert.json.GeoJsonParsing.GeoJsonFeature", "kind" : "def"}, {"label" : "parseFeatureCollection", "tail" : "(el: JsonElement): Seq[GeoJsonFeature]", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseFeatureCollection", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#parseFeatureCollection(el:com.google.gson.JsonElement):Seq[org.locationtech.geomesa.convert.json.GeoJsonParsing.GeoJsonFeature]", "kind" : "def"}, {"label" : "isFeature", "tail" : "(el: JsonElement): Boolean", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.isFeature", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#isFeature(el:com.google.gson.JsonElement):Boolean", "kind" : "def"}, {"label" : "isFeatureCollection", "tail" : "(el: JsonElement): Boolean", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.isFeatureCollection", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#isFeatureCollection(el:com.google.gson.JsonElement):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/locationtech\/geomesa\/convert\/json\/GeoJsonParsing.html", "kind" : "trait"}, {"name" : "org.locationtech.geomesa.convert.json.JsonCompositeConverter", "shortDescription" : "", "members_class" : [{"label" : "parse", "tail" : "(is: InputStream, ec: EvaluationContext): CloseableIterator[JsonElement]", "member" : "org.locationtech.geomesa.convert.json.JsonCompositeConverter.parse", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#parse(is:java.io.InputStream,ec:org.locationtech.geomesa.convert.EvaluationContext):org.locationtech.geomesa.utils.collection.CloseableIterator[com.google.gson.JsonElement]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.convert.json.JsonCompositeConverter#<init>", "error" : "unsupported entity"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.convert2.AbstractCompositeConverter.close", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#close():Unit", "kind" : "def"}, {"label" : "process", "tail" : "(is: InputStream, ec: EvaluationContext): CloseableIterator[SimpleFeature]", "member" : "org.locationtech.geomesa.convert2.AbstractCompositeConverter.process", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#process(is:java.io.InputStream,ec:org.locationtech.geomesa.convert.EvaluationContext):org.locationtech.geomesa.utils.collection.CloseableIterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "createEvaluationContext", "tail" : "(globalParams: Map[String, Any], success: Counter, failure: Counter): EvaluationContext", "member" : "org.locationtech.geomesa.convert2.AbstractCompositeConverter.createEvaluationContext", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#createEvaluationContext(globalParams:Map[String,Any],success:com.codahale.metrics.Counter,failure:com.codahale.metrics.Counter):org.locationtech.geomesa.convert.EvaluationContext", "kind" : "def"}, {"label" : "createEvaluationContext", "tail" : "(globalParams: Map[String, Any]): EvaluationContext", "member" : "org.locationtech.geomesa.convert2.AbstractCompositeConverter.createEvaluationContext", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#createEvaluationContext(globalParams:Map[String,Any]):org.locationtech.geomesa.convert.EvaluationContext", "kind" : "def"}, {"label" : "targetSft", "tail" : "(): SimpleFeatureType", "member" : "org.locationtech.geomesa.convert2.AbstractCompositeConverter.targetSft", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#targetSft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "createEvaluationContext", "tail" : "(globalParams: Map[String, Any]): EvaluationContext", "member" : "org.locationtech.geomesa.convert2.SimpleFeatureConverter.createEvaluationContext", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#createEvaluationContext(globalParams:java.util.Map[String,Any]):org.locationtech.geomesa.convert.EvaluationContext", "kind" : "final def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverter.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.convert.json.JsonCompositeConverterFactory", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html", "members_class" : [{"label" : "infer", "tail" : "(is: InputStream, sft: Option[SimpleFeatureType], hints: Map[String, AnyRef]): Try[(SimpleFeatureType, Config)]", "member" : "org.locationtech.geomesa.convert.json.JsonCompositeConverterFactory.infer", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#infer(is:java.io.InputStream,sft:Option[org.geotools.api.feature.simple.SimpleFeatureType],hints:Map[String,AnyRef]):scala.util.Try[(org.geotools.api.feature.simple.SimpleFeatureType,com.typesafe.config.Config)]", "kind" : "def"}, {"label" : "apply", "tail" : "(sft: SimpleFeatureType, conf: Config): Option[SimpleFeatureConverter]", "member" : "org.locationtech.geomesa.convert.json.JsonCompositeConverterFactory.apply", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#apply(sft:org.geotools.api.feature.simple.SimpleFeatureType,conf:com.typesafe.config.Config):Option[org.locationtech.geomesa.convert2.SimpleFeatureConverter]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.convert.json.JsonCompositeConverterFactory#<init>", "error" : "unsupported entity"}, {"label" : "infer", "tail" : "(is: InputStream, sft: Option[SimpleFeatureType], path: Option[String]): Option[(SimpleFeatureType, Config)]", "member" : "org.locationtech.geomesa.convert2.SimpleFeatureConverterFactory.infer", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#infer(is:java.io.InputStream,sft:Option[org.geotools.api.feature.simple.SimpleFeatureType],path:Option[String]):Option[(org.geotools.api.feature.simple.SimpleFeatureType,com.typesafe.config.Config)]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "TypeToProcess", "tail" : ": String", "member" : "org.locationtech.geomesa.convert.json.JsonCompositeConverterFactory.TypeToProcess", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#TypeToProcess:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/convert\/json\/JsonCompositeConverterFactory.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.convert.json.JsonConverter", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html", "members_class" : [{"label" : "values", "tail" : "(parsed: CloseableIterator[JsonElement], ec: EvaluationContext): CloseableIterator[Array[Any]]", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.values", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#values(parsed:org.locationtech.geomesa.utils.collection.CloseableIterator[com.google.gson.JsonElement],ec:org.locationtech.geomesa.convert.EvaluationContext):org.locationtech.geomesa.utils.collection.CloseableIterator[Array[Any]]", "kind" : "def"}, {"label" : "parse", "tail" : "(is: InputStream, ec: EvaluationContext): CloseableIterator[JsonElement]", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.parse", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#parse(is:java.io.InputStream,ec:org.locationtech.geomesa.convert.EvaluationContext):org.locationtech.geomesa.utils.collection.CloseableIterator[com.google.gson.JsonElement]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.convert.json.JsonConverter#<init>", "error" : "unsupported entity"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.close", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#close():Unit", "kind" : "def"}, {"label" : "convert", "tail" : "(values: CloseableIterator[JsonElement], ec: EvaluationContext): CloseableIterator[SimpleFeature]", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.convert", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#convert(values:org.locationtech.geomesa.utils.collection.CloseableIterator[T],ec:org.locationtech.geomesa.convert.EvaluationContext):org.locationtech.geomesa.utils.collection.CloseableIterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "process", "tail" : "(is: InputStream, ec: EvaluationContext): CloseableIterator[SimpleFeature]", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.process", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#process(is:java.io.InputStream,ec:org.locationtech.geomesa.convert.EvaluationContext):org.locationtech.geomesa.utils.collection.CloseableIterator[org.geotools.api.feature.simple.SimpleFeature]", "kind" : "def"}, {"label" : "createEvaluationContext", "tail" : "(globalParams: Map[String, Any], success: Counter, failure: Counter): EvaluationContext", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.createEvaluationContext", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#createEvaluationContext(globalParams:Map[String,Any],success:com.codahale.metrics.Counter,failure:com.codahale.metrics.Counter):org.locationtech.geomesa.convert.EvaluationContext", "kind" : "def"}, {"label" : "createEvaluationContext", "tail" : "(globalParams: Map[String, Any]): EvaluationContext", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.createEvaluationContext", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#createEvaluationContext(globalParams:Map[String,Any]):org.locationtech.geomesa.convert.EvaluationContext", "kind" : "def"}, {"label" : "targetSft", "tail" : "(): SimpleFeatureType", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.targetSft", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#targetSft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "def"}, {"label" : "options", "tail" : ": BasicOptions", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.options", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#options:O", "kind" : "val"}, {"label" : "fields", "tail" : ": Seq[JsonField]", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.fields", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#fields:Seq[F]", "kind" : "val"}, {"label" : "config", "tail" : ": JsonConfig", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.config", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#config:C", "kind" : "val"}, {"label" : "sft", "tail" : ": SimpleFeatureType", "member" : "org.locationtech.geomesa.convert2.AbstractConverter.sft", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#sft:org.geotools.api.feature.simple.SimpleFeatureType", "kind" : "val"}, {"label" : "createEvaluationContext", "tail" : "(globalParams: Map[String, Any]): EvaluationContext", "member" : "org.locationtech.geomesa.convert2.SimpleFeatureConverter.createEvaluationContext", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#createEvaluationContext(globalParams:java.util.Map[String,Any]):org.locationtech.geomesa.convert.EvaluationContext", "kind" : "final def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "JsonIterator", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.JsonIterator", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#JsonIteratorextendsCloseableIterator[com.google.gson.JsonElement]", "kind" : "class"}, {"label" : "ObjectJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.ObjectJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#ObjectJsonFieldextendsJsonConverter.TypedJsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "ArrayJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.ArrayJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#ArrayJsonFieldextendsJsonConverter.TypedJsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "GeometryJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.GeometryJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#GeometryJsonFieldextendsJsonConverter.TypedJsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "LongJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.LongJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#LongJsonFieldextendsJsonConverter.TypedJsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "BooleanJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.BooleanJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#BooleanJsonFieldextendsJsonConverter.TypedJsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "IntJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.IntJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#IntJsonFieldextendsJsonConverter.TypedJsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "DoubleJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.DoubleJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#DoubleJsonFieldextendsJsonConverter.TypedJsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "FloatJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.FloatJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#FloatJsonFieldextendsJsonConverter.TypedJsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "StringJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.StringJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#StringJsonFieldextendsJsonConverter.TypedJsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "TypedJsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.TypedJsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#TypedJsonFieldextendsJsonConverter.JsonField", "kind" : "abstract class"}, {"label" : "DerivedField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.DerivedField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#DerivedFieldextendsJsonConverter.JsonFieldwithProductwithSerializable", "kind" : "case class"}, {"label" : "JsonField", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.JsonField", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#JsonFieldextendsField", "kind" : "sealed trait"}, {"label" : "JsonConfig", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverter.JsonConfig", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#JsonConfigextendsConverterConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "parseElement", "tail" : "(elem: JsonElement, path: String): Seq[(String, Any)]", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseElement", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#parseElement(elem:com.google.gson.JsonElement,path:String):Seq[(String,Any)]", "kind" : "def"}, {"label" : "parseGeometry", "tail" : "(el: JsonElement): Geometry", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseGeometry", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#parseGeometry(el:com.google.gson.JsonElement):org.locationtech.jts.geom.Geometry", "kind" : "def"}, {"label" : "parseFeature", "tail" : "(el: JsonElement): GeoJsonFeature", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseFeature", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#parseFeature(el:com.google.gson.JsonElement):org.locationtech.geomesa.convert.json.GeoJsonParsing.GeoJsonFeature", "kind" : "def"}, {"label" : "parseFeatureCollection", "tail" : "(el: JsonElement): Seq[GeoJsonFeature]", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.parseFeatureCollection", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#parseFeatureCollection(el:com.google.gson.JsonElement):Seq[org.locationtech.geomesa.convert.json.GeoJsonParsing.GeoJsonFeature]", "kind" : "def"}, {"label" : "isFeature", "tail" : "(el: JsonElement): Boolean", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.isFeature", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#isFeature(el:com.google.gson.JsonElement):Boolean", "kind" : "def"}, {"label" : "isFeatureCollection", "tail" : "(el: JsonElement): Boolean", "member" : "org.locationtech.geomesa.convert.json.GeoJsonParsing.isFeatureCollection", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#isFeatureCollection(el:com.google.gson.JsonElement):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverter.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.convert.json.JsonConverterFactory", "shortDescription" : "", "object" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html", "members_class" : [{"label" : "infer", "tail" : "(is: InputStream, sft: Option[SimpleFeatureType], hints: Map[String, AnyRef]): Try[(SimpleFeatureType, Config)]", "member" : "org.locationtech.geomesa.convert.json.JsonConverterFactory.infer", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#infer(is:java.io.InputStream,sft:Option[org.geotools.api.feature.simple.SimpleFeatureType],hints:Map[String,AnyRef]):scala.util.Try[(org.geotools.api.feature.simple.SimpleFeatureType,com.typesafe.config.Config)]", "kind" : "def"}, {"label" : "infer", "tail" : "(is: InputStream, sft: Option[SimpleFeatureType], path: Option[String]): Option[(SimpleFeatureType, Config)]", "member" : "org.locationtech.geomesa.convert.json.JsonConverterFactory.infer", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#infer(is:java.io.InputStream,sft:Option[org.geotools.api.feature.simple.SimpleFeatureType],path:Option[String]):Option[(org.geotools.api.feature.simple.SimpleFeatureType,com.typesafe.config.Config)]", "kind" : "def"}, {"label" : "apply", "tail" : "(sft: SimpleFeatureType, conf: Config): Option[JsonConverter]", "member" : "org.locationtech.geomesa.convert.json.JsonConverterFactory.apply", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#apply(sft:org.geotools.api.feature.simple.SimpleFeatureType,conf:com.typesafe.config.Config):Option[org.locationtech.geomesa.convert.json.JsonConverter]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.convert.json.JsonConverterFactory#<init>", "error" : "unsupported entity"}, {"label" : "withDefaults", "tail" : "(conf: Config): Config", "member" : "org.locationtech.geomesa.convert2.AbstractConverterFactory.withDefaults", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#withDefaults(conf:com.typesafe.config.Config):com.typesafe.config.Config", "kind" : "def"}, {"label" : "optsConvert", "tail" : ": ConverterOptionsConvert[BasicOptions]", "member" : "org.locationtech.geomesa.convert2.AbstractConverterFactory.optsConvert", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#optsConvert:org.locationtech.geomesa.convert2.AbstractConverterFactory.ConverterOptionsConvert[O]", "kind" : "val"}, {"label" : "fieldConvert", "tail" : ": FieldConvert[JsonField]", "member" : "org.locationtech.geomesa.convert2.AbstractConverterFactory.fieldConvert", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#fieldConvert:org.locationtech.geomesa.convert2.AbstractConverterFactory.FieldConvert[F]", "kind" : "val"}, {"label" : "configConvert", "tail" : ": ConverterConfigConvert[JsonConfig]", "member" : "org.locationtech.geomesa.convert2.AbstractConverterFactory.configConvert", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#configConvert:org.locationtech.geomesa.convert2.AbstractConverterFactory.ConverterConfigConvert[C]", "kind" : "val"}, {"label" : "typeToProcess", "tail" : ": String", "member" : "org.locationtech.geomesa.convert2.AbstractConverterFactory.typeToProcess", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#typeToProcess:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "JsonFieldConvert", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverterFactory.JsonFieldConvert", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#JsonFieldConvert", "kind" : "object"}, {"label" : "JsonConfigConvert", "tail" : "", "member" : "org.locationtech.geomesa.convert.json.JsonConverterFactory.JsonConfigConvert", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#JsonConfigConvert", "kind" : "object"}, {"label" : "FeaturePathKey", "tail" : ": String", "member" : "org.locationtech.geomesa.convert.json.JsonConverterFactory.FeaturePathKey", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#FeaturePathKey:String", "kind" : "val"}, {"label" : "TypeToProcess", "tail" : ": String", "member" : "org.locationtech.geomesa.convert.json.JsonConverterFactory.TypeToProcess", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#TypeToProcess:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/convert\/json\/JsonConverterFactory.html", "kind" : "class"}, {"name" : "org.locationtech.geomesa.convert.json.JsonFunctionFactory", "shortDescription" : "", "members_class" : [{"label" : "functions", "tail" : "(): Seq[TransformerFunction]", "member" : "org.locationtech.geomesa.convert.json.JsonFunctionFactory.functions", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#functions:Seq[org.locationtech.geomesa.convert2.transforms.TransformerFunction]", "kind" : "def"}, {"member" : "org.locationtech.geomesa.convert.json.JsonFunctionFactory#<init>", "error" : "unsupported entity"}, {"label" : "determineClazz", "tail" : "(s: String): Class[_]", "member" : "org.locationtech.geomesa.convert2.transforms.CollectionFunctionFactory.CollectionParsing.determineClazz", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#determineClazz(s:String):Class[_]", "kind" : "def"}, {"label" : "convert", "tail" : "(value: Any, clazz: Class[_]): Any", "member" : "org.locationtech.geomesa.convert2.transforms.CollectionFunctionFactory.CollectionParsing.convert", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#convert(value:Any,clazz:Class[_]):Any", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/locationtech\/geomesa\/convert\/json\/JsonFunctionFactory.html", "kind" : "class"}], "org.locationtech.geomesa.convert" : [], "org" : []};